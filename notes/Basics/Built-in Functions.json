[
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::abs}}({{c2::x}})",
      "Body": "Return the absolute value of a number.  The argument may be an integer or a floating point number.  If the argument is a complex number, its magnitude is returned.",
      "Link": "https://docs.python.org/3/library/functions.html#abs"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::all}}({{c2::iterable}})",
      "Body": "Return True if all elements of the iterable are true (or if the iterable is empty).  Equivalent to:",
      "Link": "https://docs.python.org/3/library/functions.html#all"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::any}}({{c2::iterable}})",
      "Body": "Return True if any element of the iterable is true.  If the iterable is empty, return False.  Equivalent to:",
      "Link": "https://docs.python.org/3/library/functions.html#any"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::ascii}}({{c2::object}})",
      "Body": "As repr(), return a string containing a printable representation of an object, but escape the non-ASCII characters in the string returned by repr() using \\x, \\u or \\U escapes.  This generates a string similar to that returned by repr() in 2.",
      "Link": "https://docs.python.org/3/library/functions.html#ascii"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::bin}}({{c2::x}})",
      "Body": "Convert an integer number to a binary string prefixed with 0b. The result is a valid expression. If x is not a int object, it has to define an __index__() method that returns an integer. Some examples:",
      "Link": "https://docs.python.org/3/library/functions.html#bin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::bool}}([{{c3::x}}])",
      "Body": "Return a Boolean value, i.e. one of True or False.  x is converted using the standard truth testing procedure.  If x is false or omitted, this returns False; otherwise it returns True.  The bool class is a subclass of int (see Numeric Types  int, float, complex). It cannot be subclassed further.  Its only instances are False and True (see Boolean Values).",
      "Link": "https://docs.python.org/3/library/functions.html#bool"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::breakpoint}}(*args, **kws)",
      "Body": "This function drops you into the debugger at the call site.  Specifically, it calls sys.breakpointhook(), passing args and kws straight through.  By default, sys.breakpointhook() calls pdb.set_trace() expecting no arguments.  In this case, it is purely a convenience function so you don't have to explicitly import pdb or type as much code to enter the debugger.  However, sys.breakpointhook() can be set to some other function and breakpoint() will automatically call that, allowing you to drop into the debugger of choice.",
      "Link": "https://docs.python.org/3/library/functions.html#breakpoint"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::bytearray}}([{{c3::source}}[, {{c4::encoding}}[, {{c5::errors}}]]])",
      "Body": "Return a new array of bytes.  The bytearray class is a mutable sequence of integers in the range 0 <= x < 256.  It has most of the usual methods of mutable sequences, described in Mutable Sequence Types, as well as most methods that the bytes type has, see Bytes and Bytearray Operations.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::bytes}}([{{c3::source}}[, {{c4::encoding}}[, {{c5::errors}}]]])",
      "Body": "Return a new bytes object, which is an immutable sequence of integers in the range 0 <= x < 256.  bytes is an immutable version of bytearray  it has the same non-mutating methods and the same indexing and slicing behavior.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::callable}}({{c2::object}})",
      "Body": "Return True if the object argument appears callable, False if not.  If this returns true, it is still possible that a call fails, but if it is false, calling object will never succeed. Note that classes are callable (calling a class returns a new instance); instances are callable if their class has a __call__() method.",
      "Link": "https://docs.python.org/3/library/functions.html#callable"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::chr}}({{c2::i}})",
      "Body": "Return the string representing a character whose Unicode code point is the integer i.  For example, chr(97) returns the string 'a', while chr(8364) returns the string ''. This is the inverse of ord().",
      "Link": "https://docs.python.org/3/library/functions.html#chr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "@{{c1::classmethod}}",
      "Body": "Transform a method into a class method.",
      "Link": "https://docs.python.org/3/library/functions.html#classmethod"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::compile}}({{c2::source}}, {{c3::filename}}, {{c4::mode}}, {{c5::flags}}=0, {{c6::dont_inherit}}={{c7::False}}, {{c8::optimize}}=-1)",
      "Body": "Compile the source into a code or AST object.  Code objects can be executed by exec() or eval().  source can either be a normal string, a byte string, or an AST object.  Refer to the ast module documentation for information on how to work with AST objects.",
      "Link": "https://docs.python.org/3/library/functions.html#compile"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::complex}}([{{c3::real}}[, {{c4::imag}}]])",
      "Body": "Return a complex number with the value real + imag*1j or convert a string or number to a complex number.  If the first parameter is a string, it will be interpreted as a complex number and the function must be called without a second parameter.  The second parameter can never be a string. Each argument may be any numeric type (including complex).  If imag is omitted, it defaults to zero and the constructor serves as a numeric conversion like int and float.  If both arguments are omitted, returns 0j.",
      "Link": "https://docs.python.org/3/library/functions.html#complex"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::delattr}}({{c2::object}}, {{c3::name}})",
      "Body": "This is a relative of setattr().  The arguments are an object and a string.  The string must be the name of one of the object's attributes.  The function deletes the named attribute, provided the object allows it.  For example, delattr(x, 'foobar') is equivalent to del x.foobar.",
      "Link": "https://docs.python.org/3/library/functions.html#delattr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::dict}}(**kwarg)",
      "Body": "Create a new dictionary.  The dict object is the dictionary class. See dict and Mapping Types  dict for documentation about this class.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::dict}}({{c3::mapping}}, **kwarg)",
      "Body": "Create a new dictionary.  The dict object is the dictionary class. See dict and Mapping Types  dict for documentation about this class.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::dict}}({{c3::iterable}}, **kwarg)",
      "Body": "Create a new dictionary.  The dict object is the dictionary class. See dict and Mapping Types  dict for documentation about this class.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::dir}}([{{c2::object}}])",
      "Body": "Without arguments, return the list of names in the current local scope.  With an argument, attempt to return a list of valid attributes for that object.",
      "Link": "https://docs.python.org/3/library/functions.html#dir"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::divmod}}({{c2::a}}, {{c3::b}})",
      "Body": "Take two (non complex) numbers as arguments and return a pair of numbers consisting of their quotient and remainder when using integer division.  With mixed operand types, the rules for binary arithmetic operators apply.  For integers, the result is the same as (a // b, a % b). For floating point numbers the result is (q, a % b), where q is usually math.floor(a / b) but may be 1 less than that.  In any case q * b + a % b is very close to a, if a % b is non-zero it has the same sign as b, and 0 <= abs(a % b) < abs(b).",
      "Link": "https://docs.python.org/3/library/functions.html#divmod"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::enumerate}}({{c2::iterable}}, {{c3::start}}=0)",
      "Body": "Return an enumerate object. iterable must be a sequence, an iterator, or some other object which supports iteration. The __next__() method of the iterator returned by enumerate() returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable.",
      "Link": "https://docs.python.org/3/library/functions.html#enumerate"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::eval}}({{c2::expression}}, {{c3::globals}}={{c4::None}}, {{c5::locals}}={{c6::None}})",
      "Body": "The arguments are a string and optional globals and locals.  If provided, globals must be a dictionary.  If provided, locals can be any mapping object.",
      "Link": "https://docs.python.org/3/library/functions.html#eval"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::exec}}({{c2::object}}[, {{c3::globals}}[, {{c4::locals}}]])",
      "Body": "This function supports dynamic execution of code. object must be either a string or a code object.  If it is a string, the string is parsed as a suite of statements which is then executed (unless a syntax error occurs). [1] If it is a code object, it is simply executed.  In all cases, the code that's executed is expected to be valid as file input (see the section File input in the Reference Manual). Be aware that the return and yield statements may not be used outside of function definitions even within the context of code passed to the exec() function. The return value is None.",
      "Link": "https://docs.python.org/3/library/functions.html#exec"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::filter}}({{c2::function}}, {{c3::iterable}})",
      "Body": "Construct an iterator from those elements of iterable for which function returns true.  iterable may be either a sequence, a container which supports iteration, or an iterator.  If function is None, the identity function is assumed, that is, all elements of iterable that are false are removed.",
      "Link": "https://docs.python.org/3/library/functions.html#filter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::float}}([{{c3::x}}])",
      "Body": "Return a floating point number constructed from a number or string x.",
      "Link": "https://docs.python.org/3/library/functions.html#float"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::format}}({{c2::value}}[, {{c3::format_spec}}])",
      "Body": "Convert a value to a formatted representation, as controlled by format_spec.  The interpretation of format_spec will depend on the type of the value argument, however there is a standard formatting syntax that is used by most built-in types: Format Specification Mini-Language.",
      "Link": "https://docs.python.org/3/library/functions.html#format"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::frozenset}}([{{c3::iterable}}])",
      "Body": "Return a new frozenset object, optionally with elements taken from iterable.  frozenset is a built-in class.  See frozenset and Set Types  set, frozenset for documentation about this class.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::getattr}}({{c2::object}}, {{c3::name}}[, {{c4::default}}])",
      "Body": "Return the value of the named attribute of object.  name must be a string. If the string is the name of one of the object's attributes, the result is the value of that attribute.  For example, getattr(x, 'foobar') is equivalent to x.foobar.  If the named attribute does not exist, default is returned if provided, otherwise AttributeError is raised.",
      "Link": "https://docs.python.org/3/library/functions.html#getattr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::globals}}()",
      "Body": "Return a dictionary representing the current global symbol table. This is always the dictionary of the current module (inside a function or method, this is the module where it is defined, not the module from which it is called).",
      "Link": "https://docs.python.org/3/library/functions.html#globals"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::hasattr}}({{c2::object}}, {{c3::name}})",
      "Body": "The arguments are an object and a string.  The result is True if the string is the name of one of the object's attributes, False if not. (This is implemented by calling getattr(object, name) and seeing whether it raises an AttributeError or not.)",
      "Link": "https://docs.python.org/3/library/functions.html#hasattr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::hash}}({{c2::object}})",
      "Body": "Return the hash value of the object (if it has one).  Hash values are integers.  They are used to quickly compare dictionary keys during a dictionary lookup.  Numeric values that compare equal have the same hash value (even if they are of different types, as is the case for 1 and 1.0).",
      "Link": "https://docs.python.org/3/library/functions.html#hash"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::help}}([{{c2::object}}])",
      "Body": "Invoke the built-in help system.  (This function is intended for interactive use.)  If no argument is given, the interactive help system starts on the interpreter console.  If the argument is a string, then the string is looked up as the name of a module, function, class, method, keyword, or documentation topic, and a help page is printed on the console.  If the argument is any other kind of object, a help page on the object is generated.",
      "Link": "https://docs.python.org/3/library/functions.html#help"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::hex}}({{c2::x}})",
      "Body": "Convert an integer number to a lowercase hexadecimal string prefixed with 0x. If x is not a int object, it has to define an __index__() method that returns an integer. Some examples:",
      "Link": "https://docs.python.org/3/library/functions.html#hex"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::id}}({{c2::object}})",
      "Body": "Return the identity of an object.  This is an integer which is guaranteed to be unique and constant for this object during its lifetime. Two objects with non-overlapping lifetimes may have the same id() value.",
      "Link": "https://docs.python.org/3/library/functions.html#id"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::input}}([{{c2::prompt}}])",
      "Body": "If the prompt argument is present, it is written to standard output without a trailing newline.  The function then reads a line from input, converts it to a string (stripping a trailing newline), and returns that.  When EOF is read, EOFError is raised.  Example:",
      "Link": "https://docs.python.org/3/library/functions.html#input"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::int}}([{{c3::x}}])",
      "Body": "Return an integer object constructed from a number or string x, or return 0 if no arguments are given.  If x defines __int__(), int(x) returns x.__int__().  If x defines __trunc__(), it returns x.__trunc__(). For floating point numbers, this truncates towards zero.",
      "Link": "https://docs.python.org/3/library/functions.html#int"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::int}}({{c3::x}}, {{c4::base}}=10)",
      "Body": "Return an integer object constructed from a number or string x, or return 0 if no arguments are given.  If x defines __int__(), int(x) returns x.__int__().  If x defines __trunc__(), it returns x.__trunc__(). For floating point numbers, this truncates towards zero.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::isinstance}}({{c2::object}}, {{c3::classinfo}})",
      "Body": "Return true if the object argument is an instance of the classinfo argument, or of a (direct, indirect or virtual) subclass thereof.  If object is not an object of the given type, the function always returns false. If classinfo is a tuple of type objects (or recursively, other such tuples), return true if object is an instance of any of the types. If classinfo is not a type or tuple of types and such tuples, a TypeError exception is raised.",
      "Link": "https://docs.python.org/3/library/functions.html#isinstance"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::issubclass}}({{c2::class}}, {{c3::classinfo}})",
      "Body": "Return true if class is a subclass (direct, indirect or virtual) of classinfo.  A class is considered a subclass of itself. classinfo may be a tuple of class objects, in which case every entry in classinfo will be checked. In any other case, a TypeError exception is raised.",
      "Link": "https://docs.python.org/3/library/functions.html#issubclass"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::iter}}({{c2::object}}[, {{c3::sentinel}}])",
      "Body": "Return an iterator object.  The first argument is interpreted very differently depending on the presence of the second argument. Without a second argument, object must be a collection object which supports the iteration protocol (the __iter__() method), or it must support the sequence protocol (the __getitem__() method with integer arguments starting at 0).  If it does not support either of those protocols, TypeError is raised. If the second argument, sentinel, is given, then object must be a callable object.  The iterator created in this case will call object with no arguments for each call to its __next__() method; if the value returned is equal to sentinel, StopIteration will be raised, otherwise the value will be returned.",
      "Link": "https://docs.python.org/3/library/functions.html#iter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::len}}({{c2::s}})",
      "Body": "Return the length (the number of items) of an object.  The argument may be a sequence (such as a string, bytes, tuple, list, or range) or a collection (such as a dictionary, set, or frozen set).",
      "Link": "https://docs.python.org/3/library/functions.html#len"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::list}}([{{c3::iterable}}])",
      "Body": "Rather than being a function, list is actually a mutable sequence type, as documented in Lists and Sequence Types  list, tuple, range.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::locals}}()",
      "Body": "Update and return a dictionary representing the current local symbol table. Free variables are returned by locals() when it is called in function blocks, but not in class blocks.",
      "Link": "https://docs.python.org/3/library/functions.html#locals"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::map}}({{c2::function}}, {{c3::iterable}}, ...)",
      "Body": "Return an iterator that applies function to every item of iterable, yielding the results.  If additional iterable arguments are passed, function must take that many arguments and is applied to the items from all iterables in parallel.  With multiple iterables, the iterator stops when the shortest iterable is exhausted.  For cases where the function inputs are already arranged into argument tuples, see itertools.starmap().",
      "Link": "https://docs.python.org/3/library/functions.html#map"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::max}}({{c2::iterable}}, *[, {{c3::key}}, {{c4::default}}])",
      "Body": "Return the largest item in an iterable or the largest of two or more arguments.",
      "Link": "https://docs.python.org/3/library/functions.html#max"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::max}}({{c2::arg}}1, {{c3::arg}}2, *args[, {{c4::key}}])",
      "Body": "Return the largest item in an iterable or the largest of two or more arguments.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::memoryview}}({{c2::obj}})",
      "Body": "Return a memory view object created from the given argument.  See Memory Views for more information.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::min}}({{c2::iterable}}, *[, {{c3::key}}, {{c4::default}}])",
      "Body": "Return the smallest item in an iterable or the smallest of two or more arguments.",
      "Link": "https://docs.python.org/3/library/functions.html#min"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::min}}({{c2::arg}}1, {{c3::arg}}2, *args[, {{c4::key}}])",
      "Body": "Return the smallest item in an iterable or the smallest of two or more arguments.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::next}}({{c2::iterator}}[, {{c3::default}}])",
      "Body": "Retrieve the next item from the iterator by calling its __next__() method.  If default is given, it is returned if the iterator is exhausted, otherwise StopIteration is raised.",
      "Link": "https://docs.python.org/3/library/functions.html#next"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::object}}",
      "Body": "Return a new featureless object.  object is a base for all classes. It has the methods that are common to all instances of classes.  This function does not accept any arguments.",
      "Link": "https://docs.python.org/3/library/functions.html#object"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::oct}}({{c2::x}})",
      "Body": "Convert an integer number to an octal string prefixed with 0o.  The result is a valid expression. If x is not a int object, it has to define an __index__() method that returns an integer. For example:",
      "Link": "https://docs.python.org/3/library/functions.html#oct"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::open}}({{c2::file}}, {{c3::mode}}='{{c4::r}}', {{c5::buffering}}=-1, {{c6::encoding}}={{c7::None}}, {{c8::errors}}={{c9::None}}, {{c10::newline}}={{c11::None}}, {{c12::closefd}}={{c13::True}}, {{c14::opener}}={{c15::None}})",
      "Body": "Open file and return a corresponding file object.  If the file cannot be opened, an OSError is raised.",
      "Link": "https://docs.python.org/3/library/functions.html#open"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::ord}}({{c2::c}})",
      "Body": "Given a string representing one Unicode character, return an integer representing the Unicode code point of that character.  For example, ord('a') returns the integer 97 and ord('') (Euro sign) returns 8364.  This is the inverse of chr().",
      "Link": "https://docs.python.org/3/library/functions.html#ord"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::pow}}({{c2::x}}, {{c3::y}}[, {{c4::z}}])",
      "Body": "Return x to the power y; if z is present, return x to the power y, modulo z (computed more efficiently than pow(x, y) % z). The two-argument form pow(x, y) is equivalent to using the power operator: x**y.",
      "Link": "https://docs.python.org/3/library/functions.html#pow"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::print}}(*objects, {{c2::sep}}=' ', {{c3::end}}='\\n', {{c4::file}}={{c5::sys}}.{{c6::stdout}}, {{c7::flush}}={{c8::False}})",
      "Body": "Print objects to the text stream file, separated by sep and followed by end.  sep, end, file and flush, if present, must be given as keyword arguments.",
      "Link": "https://docs.python.org/3/library/functions.html#print"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::property}}({{c3::fget}}={{c4::None}}, {{c5::fset}}={{c6::None}}, {{c7::fdel}}={{c8::None}}, {{c9::doc}}={{c10::None}})",
      "Body": "Return a property attribute.",
      "Link": "https://docs.python.org/3/library/functions.html#property"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::range}}({{c2::stop}})",
      "Body": "Rather than being a function, range is actually an immutable sequence type, as documented in Ranges and Sequence Types  list, tuple, range.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::range}}({{c2::start}}, {{c3::stop}}[, {{c4::step}}])",
      "Body": "Rather than being a function, range is actually an immutable sequence type, as documented in Ranges and Sequence Types  list, tuple, range.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::repr}}({{c2::object}})",
      "Body": "Return a string containing a printable representation of an object.  For many types, this function makes an attempt to return a string that would yield an object with the same value when passed to eval(), otherwise the representation is a string enclosed in angle brackets that contains the name of the type of the object together with additional information often including the name and address of the object.  A class can control what this function returns for its instances by defining a __repr__() method.",
      "Link": "https://docs.python.org/3/library/functions.html#repr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::reversed}}({{c2::seq}})",
      "Body": "Return a reverse iterator.  seq must be an object which has a __reversed__() method or supports the sequence protocol (the __len__() method and the __getitem__() method with integer arguments starting at 0).",
      "Link": "https://docs.python.org/3/library/functions.html#reversed"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::round}}({{c2::number}}[, {{c3::ndigits}}])",
      "Body": "Return number rounded to ndigits precision after the decimal point.  If ndigits is omitted or is None, it returns the nearest integer to its input.",
      "Link": "https://docs.python.org/3/library/functions.html#round"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::set}}([{{c3::iterable}}])",
      "Body": "Return a new set object, optionally with elements taken from iterable.  set is a built-in class.  See set and Set Types  set, frozenset for documentation about this class.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::setattr}}({{c2::object}}, {{c3::name}}, {{c4::value}})",
      "Body": "This is the counterpart of getattr().  The arguments are an object, a string and an arbitrary value.  The string may name an existing attribute or a new attribute.  The function assigns the value to the attribute, provided the object allows it.  For example, setattr(x, 'foobar', 123) is equivalent to x.foobar = 123.",
      "Link": "https://docs.python.org/3/library/functions.html#setattr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::slice}}({{c3::stop}})",
      "Body": "Return a slice object representing the set of indices specified by range(start, stop, step).  The start and step arguments default to None.  Slice objects have read-only data attributes start, stop and step which merely return the argument values (or their default).  They have no other explicit functionality; however they are used by Numerical and other third party extensions. Slice objects are also generated when extended indexing syntax is used.  For example: a[start:stop:step] or a[start:stop, i].  See itertools.islice() for an alternate version that returns an iterator.",
      "Link": "https://docs.python.org/3/library/functions.html#slice"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::slice}}({{c3::start}}, {{c4::stop}}[, {{c5::step}}])",
      "Body": "Return a slice object representing the set of indices specified by range(start, stop, step).  The start and step arguments default to None.  Slice objects have read-only data attributes start, stop and step which merely return the argument values (or their default).  They have no other explicit functionality; however they are used by Numerical and other third party extensions. Slice objects are also generated when extended indexing syntax is used.  For example: a[start:stop:step] or a[start:stop, i].  See itertools.islice() for an alternate version that returns an iterator.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::sorted}}({{c2::iterable}}, *, {{c3::key}}={{c4::None}}, {{c5::reverse}}={{c6::False}})",
      "Body": "Return a new sorted list from the items in iterable.",
      "Link": "https://docs.python.org/3/library/functions.html#sorted"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "@{{c1::staticmethod}}",
      "Body": "Transform a method into a static method.",
      "Link": "https://docs.python.org/3/library/functions.html#staticmethod"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::str}}({{c3::object}}='')",
      "Body": "Return a str version of object.  See str() for details.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::str}}({{c3::object}}={{c4::b}}'', {{c5::encoding}}='{{c6::utf}}-8', {{c7::errors}}='{{c8::strict}}')",
      "Body": "Return a str version of object.  See str() for details.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::sum}}({{c2::iterable}}[, {{c3::start}}])",
      "Body": "Sums start and the items of an iterable from left to right and returns the total.  start defaults to 0. The iterable's items are normally numbers, and the start value is not allowed to be a string.",
      "Link": "https://docs.python.org/3/library/functions.html#sum"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::super}}([{{c2::type}}[, {{c3::object}}-{{c4::or}}-{{c5::type}}]])",
      "Body": "Return a proxy object that delegates method calls to a parent or sibling class of type.  This is useful for accessing inherited methods that have been overridden in a class. The search order is same as that used by getattr() except that the type itself is skipped.",
      "Link": "https://docs.python.org/3/library/functions.html#super"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::tuple}}([{{c2::iterable}}])",
      "Body": "Rather than being a function, tuple is actually an immutable sequence type, as documented in Tuples and Sequence Types  list, tuple, range.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::type}}({{c3::object}})",
      "Body": "With one argument, return the type of an object.  The return value is a type object and generally the same object as returned by object.__class__.",
      "Link": "https://docs.python.org/3/library/functions.html#type"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["class", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::class}} {{c2::type}}({{c3::name}}, {{c4::bases}}, {{c5::dict}})",
      "Body": "With one argument, return the type of an object.  The return value is a type object and generally the same object as returned by object.__class__.",
      "Link": "https://docs.python.org/3/library/functions.html#built-in-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::vars}}([{{c2::object}}])",
      "Body": "Return the __dict__ attribute for a module, class, instance, or any other object with a __dict__ attribute.",
      "Link": "https://docs.python.org/3/library/functions.html#vars"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::zip}}(*iterables)",
      "Body": "Make an iterator that aggregates elements from each of the iterables.",
      "Link": "https://docs.python.org/3/library/functions.html#zip"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": ["function", "Built-in Functions", "Python", "py", "native"],
    "fields": {
      "Signature": "{{c1::__import__}}({{c2::name}}, {{c3::globals}}={{c4::None}}, {{c5::locals}}={{c6::None}}, {{c7::fromlist}}=(), {{c8::level}}=0)",
      "Body": "Note",
      "Link": "https://docs.python.org/3/library/functions.html#__import__"
    },
    "modelName": "ClozePy"
  }
]
