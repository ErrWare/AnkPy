[
  {
    "tags": [
      "exception",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::exception}} {{c2::os}}.{{c3::error}}",
      "Body": "An alias for the built-in OSError exception.",
      "Link": "https://docs.python.org/3/library/os.html#os.error"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::name}}",
      "Body": "The name of the operating system dependent module imported.  The following names have currently been registered: 'posix', 'nt', 'java'.",
      "Link": "https://docs.python.org/3/library/os.html#os.name"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::ctermid}}()",
      "Body": "Return the filename corresponding to the controlling terminal of the process.",
      "Link": "https://docs.python.org/3/library/os.html#os.ctermid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::environ}}",
      "Body": "A mapping object representing the string environment. For example, environ['HOME'] is the pathname of your home directory (on some platforms), and is equivalent to getenv(\"HOME\") in C.",
      "Link": "https://docs.python.org/3/library/os.html#os.environ"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::environb}}",
      "Body": "Bytes version of environ: a mapping object representing the environment as byte strings. environ and environb are synchronized (modify environb updates environ, and vice versa).",
      "Link": "https://docs.python.org/3/library/os.html#os.environb"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::chdir}}({{c3::path}})",
      "Body": "These functions are described in Files and Directories.",
      "Link": "https://docs.python.org/3/library/os.html#process-parameters"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fchdir}}({{c3::fd}})",
      "Body": "These functions are described in Files and Directories.",
      "Link": "https://docs.python.org/3/library/os.html#process-parameters"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getcwd}}()",
      "Body": "These functions are described in Files and Directories.",
      "Link": "https://docs.python.org/3/library/os.html#process-parameters"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fsencode}}({{c3::filename}})",
      "Body": "Encode path-like filename to the filesystem encoding with 'surrogateescape' error handler, or 'strict' on Windows; return bytes unchanged.",
      "Link": "https://docs.python.org/3/library/os.html#os.fsencode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fsdecode}}({{c3::filename}})",
      "Body": "Decode the path-like filename from the filesystem encoding with 'surrogateescape' error handler, or 'strict' on Windows; return str unchanged.",
      "Link": "https://docs.python.org/3/library/os.html#os.fsdecode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fspath}}({{c3::path}})",
      "Body": "Return the file system representation of the path.",
      "Link": "https://docs.python.org/3/library/os.html#os.fspath"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::os}}.{{c3::PathLike}}",
      "Body": "An abstract base class for objects representing a file system path, e.g. pathlib.PurePath.",
      "Link": "https://docs.python.org/3/library/os.html#os.PathLike"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::PathLike}}.{{c3::abstractmethod}} {{c4::__fspath__}}()",
      "Body": "Return the file system path representation of the object.",
      "Link": "https://docs.python.org/3/library/os.html#os.PathLike.__fspath__"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getenv}}({{c3::key}}, {{c4::default}}={{c5::None}})",
      "Body": "Return the value of the environment variable key if it exists, or default if it doesn't. key, default and the result are str.",
      "Link": "https://docs.python.org/3/library/os.html#os.getenv"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getenvb}}({{c3::key}}, {{c4::default}}={{c5::None}})",
      "Body": "Return the value of the environment variable key if it exists, or default if it doesn't. key, default and the result are bytes.",
      "Link": "https://docs.python.org/3/library/os.html#os.getenvb"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::get_exec_path}}({{c3::env}}={{c4::None}})",
      "Body": "Returns the list of directories that will be searched for a named executable, similar to a shell, when launching a process. env, when specified, should be an environment variable dictionary to lookup the PATH in. By default, when env is None, environ is used.",
      "Link": "https://docs.python.org/3/library/os.html#os.get_exec_path"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getegid}}()",
      "Body": "Return the effective group id of the current process.  This corresponds to the set id bit on the file being executed in the current process.",
      "Link": "https://docs.python.org/3/library/os.html#os.getegid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::geteuid}}()",
      "Body": "Return the current process's effective user id.",
      "Link": "https://docs.python.org/3/library/os.html#os.geteuid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getgid}}()",
      "Body": "Return the real group id of the current process.",
      "Link": "https://docs.python.org/3/library/os.html#os.getgid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getgrouplist}}({{c3::user}}, {{c4::group}})",
      "Body": "Return list of group ids that user belongs to. If group is not in the list, it is included; typically, group is specified as the group ID field from the password record for user.",
      "Link": "https://docs.python.org/3/library/os.html#os.getgrouplist"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getgroups}}()",
      "Body": "Return list of supplemental group ids associated with the current process.",
      "Link": "https://docs.python.org/3/library/os.html#os.getgroups"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getlogin}}()",
      "Body": "Return the name of the user logged in on the controlling terminal of the process.  For most purposes, it is more useful to use getpass.getuser() since the latter checks the environment variables LOGNAME or USERNAME to find out who the user is, and falls back to pwd.getpwuid(os.getuid())[0] to get the login name of the current real user id.",
      "Link": "https://docs.python.org/3/library/os.html#os.getlogin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getpgid}}({{c3::pid}})",
      "Body": "Return the process group id of the process with process id pid. If pid is 0, the process group id of the current process is returned.",
      "Link": "https://docs.python.org/3/library/os.html#os.getpgid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getpgrp}}()",
      "Body": "Return the id of the current process group.",
      "Link": "https://docs.python.org/3/library/os.html#os.getpgrp"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getpid}}()",
      "Body": "Return the current process id.",
      "Link": "https://docs.python.org/3/library/os.html#os.getpid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getppid}}()",
      "Body": "Return the parent's process id.  When the parent process has exited, on Unix the id returned is the one of the init process (1), on Windows it is still the same id, which may be already reused by another process.",
      "Link": "https://docs.python.org/3/library/os.html#os.getppid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getpriority}}({{c3::which}}, {{c4::who}})",
      "Body": "Get program scheduling priority.  The value which is one of PRIO_PROCESS, PRIO_PGRP, or PRIO_USER, and who is interpreted relative to which (a process identifier for PRIO_PROCESS, process group identifier for PRIO_PGRP, and a user ID for PRIO_USER).  A zero value for who denotes (respectively) the calling process, the process group of the calling process, or the real user ID of the calling process.",
      "Link": "https://docs.python.org/3/library/os.html#os.getpriority"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::PRIO_PROCESS}}",
      "Body": "Parameters for the getpriority() and setpriority() functions.",
      "Link": "https://docs.python.org/3/library/os.html#os.PRIO_PROCESS"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::PRIO_PGRP}}",
      "Body": "Parameters for the getpriority() and setpriority() functions.",
      "Link": "https://docs.python.org/3/library/os.html#os.PRIO_PGRP"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::PRIO_USER}}",
      "Body": "Parameters for the getpriority() and setpriority() functions.",
      "Link": "https://docs.python.org/3/library/os.html#os.PRIO_USER"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getresuid}}()",
      "Body": "Return a tuple (ruid, euid, suid) denoting the current process's real, effective, and saved user ids.",
      "Link": "https://docs.python.org/3/library/os.html#os.getresuid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getresgid}}()",
      "Body": "Return a tuple (rgid, egid, sgid) denoting the current process's real, effective, and saved group ids.",
      "Link": "https://docs.python.org/3/library/os.html#os.getresgid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getuid}}()",
      "Body": "Return the current process's real user id.",
      "Link": "https://docs.python.org/3/library/os.html#os.getuid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::initgroups}}({{c3::username}}, {{c4::gid}})",
      "Body": "Call the system initgroups() to initialize the group access list with all of the groups of which the specified username is a member, plus the specified group id.",
      "Link": "https://docs.python.org/3/library/os.html#os.initgroups"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::putenv}}({{c3::key}}, {{c4::value}})",
      "Body": "Set the environment variable named key to the string value.  Such changes to the environment affect subprocesses started with os.system(), popen() or fork() and execv().",
      "Link": "https://docs.python.org/3/library/os.html#os.putenv"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::setegid}}({{c3::egid}})",
      "Body": "Set the current process's effective group id.",
      "Link": "https://docs.python.org/3/library/os.html#os.setegid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::seteuid}}({{c3::euid}})",
      "Body": "Set the current process's effective user id.",
      "Link": "https://docs.python.org/3/library/os.html#os.seteuid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::setgid}}({{c3::gid}})",
      "Body": "Set the current process' group id.",
      "Link": "https://docs.python.org/3/library/os.html#os.setgid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::setgroups}}({{c3::groups}})",
      "Body": "Set the list of supplemental group ids associated with the current process to groups. groups must be a sequence, and each element must be an integer identifying a group. This operation is typically available only to the superuser.",
      "Link": "https://docs.python.org/3/library/os.html#os.setgroups"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::setpgrp}}()",
      "Body": "Call the system call setpgrp() or setpgrp(0, 0) depending on which version is implemented (if any).  See the Unix manual for the semantics.",
      "Link": "https://docs.python.org/3/library/os.html#os.setpgrp"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::setpgid}}({{c3::pid}}, {{c4::pgrp}})",
      "Body": "Call the system call setpgid() to set the process group id of the process with id pid to the process group with id pgrp.  See the Unix manual for the semantics.",
      "Link": "https://docs.python.org/3/library/os.html#os.setpgid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::setpriority}}({{c3::which}}, {{c4::who}}, {{c5::priority}})",
      "Body": "Set program scheduling priority. The value which is one of PRIO_PROCESS, PRIO_PGRP, or PRIO_USER, and who is interpreted relative to which (a process identifier for PRIO_PROCESS, process group identifier for PRIO_PGRP, and a user ID for PRIO_USER). A zero value for who denotes (respectively) the calling process, the process group of the calling process, or the real user ID of the calling process. priority is a value in the range -20 to 19. The default priority is 0; lower priorities cause more favorable scheduling.",
      "Link": "https://docs.python.org/3/library/os.html#os.setpriority"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::setregid}}({{c3::rgid}}, {{c4::egid}})",
      "Body": "Set the current process's real and effective group ids.",
      "Link": "https://docs.python.org/3/library/os.html#os.setregid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::setresgid}}({{c3::rgid}}, {{c4::egid}}, {{c5::sgid}})",
      "Body": "Set the current process's real, effective, and saved group ids.",
      "Link": "https://docs.python.org/3/library/os.html#os.setresgid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::setresuid}}({{c3::ruid}}, {{c4::euid}}, {{c5::suid}})",
      "Body": "Set the current process's real, effective, and saved user ids.",
      "Link": "https://docs.python.org/3/library/os.html#os.setresuid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::setreuid}}({{c3::ruid}}, {{c4::euid}})",
      "Body": "Set the current process's real and effective user ids.",
      "Link": "https://docs.python.org/3/library/os.html#os.setreuid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getsid}}({{c3::pid}})",
      "Body": "Call the system call getsid().  See the Unix manual for the semantics.",
      "Link": "https://docs.python.org/3/library/os.html#os.getsid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::setsid}}()",
      "Body": "Call the system call setsid().  See the Unix manual for the semantics.",
      "Link": "https://docs.python.org/3/library/os.html#os.setsid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::setuid}}({{c3::uid}})",
      "Body": "Set the current process's user id.",
      "Link": "https://docs.python.org/3/library/os.html#os.setuid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::strerror}}({{c3::code}})",
      "Body": "Return the error message corresponding to the error code in code. On platforms where strerror() returns NULL when given an unknown error number, ValueError is raised.",
      "Link": "https://docs.python.org/3/library/os.html#os.strerror"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::supports_bytes_environ}}",
      "Body": "True if the native OS type of the environment is bytes (eg. False on Windows).",
      "Link": "https://docs.python.org/3/library/os.html#os.supports_bytes_environ"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::umask}}({{c3::mask}})",
      "Body": "Set the current numeric umask and return the previous umask.",
      "Link": "https://docs.python.org/3/library/os.html#os.umask"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::uname}}()",
      "Body": "Returns information identifying the current operating system. The return value is an object with five attributes:",
      "Link": "https://docs.python.org/3/library/os.html#os.uname"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::unsetenv}}({{c3::key}})",
      "Body": "Unset (delete) the environment variable named key. Such changes to the environment affect subprocesses started with os.system(), popen() or fork() and execv().",
      "Link": "https://docs.python.org/3/library/os.html#os.unsetenv"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fdopen}}({{c3::fd}}, *args, **kwargs)",
      "Body": "Return an open file object connected to the file descriptor fd.  This is an alias of the open() built-in function and accepts the same arguments. The only difference is that the first argument of fdopen() must always be an integer.",
      "Link": "https://docs.python.org/3/library/os.html#os.fdopen"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::close}}({{c3::fd}})",
      "Body": "Close file descriptor fd.",
      "Link": "https://docs.python.org/3/library/os.html#os.close"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::closerange}}({{c3::fd_low}}, {{c4::fd_high}})",
      "Body": "Close all file descriptors from fd_low (inclusive) to fd_high (exclusive), ignoring errors. Equivalent to (but much faster than):",
      "Link": "https://docs.python.org/3/library/os.html#os.closerange"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::device_encoding}}({{c3::fd}})",
      "Body": "Return a string describing the encoding of the device associated with fd if it is connected to a terminal; else return None.",
      "Link": "https://docs.python.org/3/library/os.html#os.device_encoding"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::dup}}({{c3::fd}})",
      "Body": "Return a duplicate of file descriptor fd. The new file descriptor is non-inheritable.",
      "Link": "https://docs.python.org/3/library/os.html#os.dup"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::dup}}2({{c3::fd}}, {{c4::fd}}2, {{c5::inheritable}}={{c6::True}})",
      "Body": "Duplicate file descriptor fd to fd2, closing the latter first if necessary. Return fd2. The new file descriptor is inheritable by default or non-inheritable if inheritable is False.",
      "Link": "https://docs.python.org/3/library/os.html#os.dup2"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fchmod}}({{c3::fd}}, {{c4::mode}})",
      "Body": "Change the mode of the file given by fd to the numeric mode.  See the docs for chmod() for possible values of mode.  As of 3.3, this is equivalent to os.chmod(fd, mode).",
      "Link": "https://docs.python.org/3/library/os.html#os.fchmod"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fchown}}({{c3::fd}}, {{c4::uid}}, {{c5::gid}})",
      "Body": "Change the owner and group id of the file given by fd to the numeric uid and gid.  To leave one of the ids unchanged, set it to -1.  See chown().  As of 3.3, this is equivalent to os.chown(fd, uid, gid).",
      "Link": "https://docs.python.org/3/library/os.html#os.fchown"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fdatasync}}({{c3::fd}})",
      "Body": "Force write of file with filedescriptor fd to disk. Does not force update of metadata.",
      "Link": "https://docs.python.org/3/library/os.html#os.fdatasync"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fpathconf}}({{c3::fd}}, {{c4::name}})",
      "Body": "Return system configuration information relevant to an open file. name specifies the configuration value to retrieve; it may be a string which is the name of a defined system value; these names are specified in a number of standards (POSIX.1, Unix 95, Unix 98, and others).  Some platforms define additional names as well.  The names known to the host operating system are given in the pathconf_names dictionary.  For configuration variables not included in that mapping, passing an integer for name is also accepted.",
      "Link": "https://docs.python.org/3/library/os.html#os.fpathconf"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fstat}}({{c3::fd}})",
      "Body": "Get the status of the file descriptor fd. Return a stat_result object.",
      "Link": "https://docs.python.org/3/library/os.html#os.fstat"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fstatvfs}}({{c3::fd}})",
      "Body": "Return information about the filesystem containing the file associated with file descriptor fd, like statvfs().  As of 3.3, this is equivalent to os.statvfs(fd).",
      "Link": "https://docs.python.org/3/library/os.html#os.fstatvfs"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fsync}}({{c3::fd}})",
      "Body": "Force write of file with filedescriptor fd to disk.  On Unix, this calls the native fsync() function; on Windows, the MS _commit() function.",
      "Link": "https://docs.python.org/3/library/os.html#os.fsync"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::ftruncate}}({{c3::fd}}, {{c4::length}})",
      "Body": "Truncate the file corresponding to file descriptor fd, so that it is at most length bytes in size.  As of 3.3, this is equivalent to os.truncate(fd, length).",
      "Link": "https://docs.python.org/3/library/os.html#os.ftruncate"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::get_blocking}}({{c3::fd}})",
      "Body": "Get the blocking mode of the file descriptor: False if the O_NONBLOCK flag is set, True if the flag is cleared.",
      "Link": "https://docs.python.org/3/library/os.html#os.get_blocking"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::isatty}}({{c3::fd}})",
      "Body": "Return True if the file descriptor fd is open and connected to a tty(-like) device, else False.",
      "Link": "https://docs.python.org/3/library/os.html#os.isatty"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::lockf}}({{c3::fd}}, {{c4::cmd}}, {{c5::len}})",
      "Body": "Apply, test or remove a POSIX lock on an open file descriptor. fd is an open file descriptor. cmd specifies the command to use - one of F_LOCK, F_TLOCK, F_ULOCK or F_TEST. len specifies the section of the file to lock.",
      "Link": "https://docs.python.org/3/library/os.html#os.lockf"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::F_LOCK}}",
      "Body": "Flags that specify what action lockf() will take.",
      "Link": "https://docs.python.org/3/library/os.html#os.F_LOCK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::F_TLOCK}}",
      "Body": "Flags that specify what action lockf() will take.",
      "Link": "https://docs.python.org/3/library/os.html#os.F_TLOCK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::F_ULOCK}}",
      "Body": "Flags that specify what action lockf() will take.",
      "Link": "https://docs.python.org/3/library/os.html#os.F_ULOCK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::F_TEST}}",
      "Body": "Flags that specify what action lockf() will take.",
      "Link": "https://docs.python.org/3/library/os.html#os.F_TEST"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::lseek}}({{c3::fd}}, {{c4::pos}}, {{c5::how}})",
      "Body": "Set the current position of file descriptor fd to position pos, modified by how: SEEK_SET or 0 to set the position relative to the beginning of the file; SEEK_CUR or 1 to set it relative to the current position; SEEK_END or 2 to set it relative to the end of the file. Return the new cursor position in bytes, starting from the beginning.",
      "Link": "https://docs.python.org/3/library/os.html#os.lseek"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::SEEK_SET}}",
      "Body": "Parameters to the lseek() function. Their values are 0, 1, and 2, respectively.",
      "Link": "https://docs.python.org/3/library/os.html#os.SEEK_SET"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::SEEK_CUR}}",
      "Body": "Parameters to the lseek() function. Their values are 0, 1, and 2, respectively.",
      "Link": "https://docs.python.org/3/library/os.html#os.SEEK_CUR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::SEEK_END}}",
      "Body": "Parameters to the lseek() function. Their values are 0, 1, and 2, respectively.",
      "Link": "https://docs.python.org/3/library/os.html#os.SEEK_END"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::open}}({{c3::path}}, {{c4::flags}}, {{c5::mode}}=0{{c6::o}}777, *, {{c7::dir_fd}}={{c8::None}})",
      "Body": "Open the file path and set various flags according to flags and possibly its mode according to mode.  When computing mode, the current umask value is first masked out.  Return the file descriptor for the newly opened file. The new file descriptor is non-inheritable.",
      "Link": "https://docs.python.org/3/library/os.html#os.open"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_RDONLY}}",
      "Body": "The above constants are available on Unix and Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_RDONLY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_WRONLY}}",
      "Body": "The above constants are available on Unix and Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_WRONLY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_RDWR}}",
      "Body": "The above constants are available on Unix and Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_RDWR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_APPEND}}",
      "Body": "The above constants are available on Unix and Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_APPEND"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_CREAT}}",
      "Body": "The above constants are available on Unix and Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_CREAT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_EXCL}}",
      "Body": "The above constants are available on Unix and Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_EXCL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_TRUNC}}",
      "Body": "The above constants are available on Unix and Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_TRUNC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_DSYNC}}",
      "Body": "The above constants are only available on Unix.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_DSYNC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_RSYNC}}",
      "Body": "The above constants are only available on Unix.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_RSYNC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_SYNC}}",
      "Body": "The above constants are only available on Unix.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_SYNC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_NDELAY}}",
      "Body": "The above constants are only available on Unix.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_NDELAY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_NONBLOCK}}",
      "Body": "The above constants are only available on Unix.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_NONBLOCK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_NOCTTY}}",
      "Body": "The above constants are only available on Unix.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_NOCTTY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_CLOEXEC}}",
      "Body": "The above constants are only available on Unix.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_CLOEXEC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_BINARY}}",
      "Body": "The above constants are only available on Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_BINARY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_NOINHERIT}}",
      "Body": "The above constants are only available on Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_NOINHERIT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_SHORT_LIVED}}",
      "Body": "The above constants are only available on Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_SHORT_LIVED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_TEMPORARY}}",
      "Body": "The above constants are only available on Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_TEMPORARY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_RANDOM}}",
      "Body": "The above constants are only available on Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_RANDOM"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_SEQUENTIAL}}",
      "Body": "The above constants are only available on Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_SEQUENTIAL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_TEXT}}",
      "Body": "The above constants are only available on Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_TEXT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_ASYNC}}",
      "Body": "The above constants are extensions and not present if they are not defined by the C library.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_ASYNC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_DIRECT}}",
      "Body": "The above constants are extensions and not present if they are not defined by the C library.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_DIRECT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_DIRECTORY}}",
      "Body": "The above constants are extensions and not present if they are not defined by the C library.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_DIRECTORY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_NOFOLLOW}}",
      "Body": "The above constants are extensions and not present if they are not defined by the C library.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_NOFOLLOW"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_NOATIME}}",
      "Body": "The above constants are extensions and not present if they are not defined by the C library.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_NOATIME"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_PATH}}",
      "Body": "The above constants are extensions and not present if they are not defined by the C library.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_PATH"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_TMPFILE}}",
      "Body": "The above constants are extensions and not present if they are not defined by the C library.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_TMPFILE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_SHLOCK}}",
      "Body": "The above constants are extensions and not present if they are not defined by the C library.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_SHLOCK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::O_EXLOCK}}",
      "Body": "The above constants are extensions and not present if they are not defined by the C library.",
      "Link": "https://docs.python.org/3/library/os.html#os.O_EXLOCK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::openpty}}()",
      "Body": "Open a new pseudo-terminal pair. Return a pair of file descriptors (master, slave) for the pty and the tty, respectively. The new file descriptors are non-inheritable. For a (slightly) more portable approach, use the pty module.",
      "Link": "https://docs.python.org/3/library/os.html#os.openpty"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::pipe}}()",
      "Body": "Create a pipe.  Return a pair of file descriptors (r, w) usable for reading and writing, respectively. The new file descriptor is non-inheritable.",
      "Link": "https://docs.python.org/3/library/os.html#os.pipe"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::pipe}}2({{c3::flags}})",
      "Body": "Create a pipe with flags set atomically. flags can be constructed by ORing together one or more of these values: O_NONBLOCK, O_CLOEXEC. Return a pair of file descriptors (r, w) usable for reading and writing, respectively.",
      "Link": "https://docs.python.org/3/library/os.html#os.pipe2"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::posix_fallocate}}({{c3::fd}}, {{c4::offset}}, {{c5::len}})",
      "Body": "Ensures that enough disk space is allocated for the file specified by fd starting from offset and continuing for len bytes.",
      "Link": "https://docs.python.org/3/library/os.html#os.posix_fallocate"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::posix_fadvise}}({{c3::fd}}, {{c4::offset}}, {{c5::len}}, {{c6::advice}})",
      "Body": "Announces an intention to access data in a specific pattern thus allowing the kernel to make optimizations. The advice applies to the region of the file specified by fd starting at offset and continuing for len bytes. advice is one of POSIX_FADV_NORMAL, POSIX_FADV_SEQUENTIAL, POSIX_FADV_RANDOM, POSIX_FADV_NOREUSE, POSIX_FADV_WILLNEED or POSIX_FADV_DONTNEED.",
      "Link": "https://docs.python.org/3/library/os.html#os.posix_fadvise"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::POSIX_FADV_NORMAL}}",
      "Body": "Flags that can be used in advice in posix_fadvise() that specify the access pattern that is likely to be used.",
      "Link": "https://docs.python.org/3/library/os.html#os.POSIX_FADV_NORMAL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::POSIX_FADV_SEQUENTIAL}}",
      "Body": "Flags that can be used in advice in posix_fadvise() that specify the access pattern that is likely to be used.",
      "Link": "https://docs.python.org/3/library/os.html#os.POSIX_FADV_SEQUENTIAL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::POSIX_FADV_RANDOM}}",
      "Body": "Flags that can be used in advice in posix_fadvise() that specify the access pattern that is likely to be used.",
      "Link": "https://docs.python.org/3/library/os.html#os.POSIX_FADV_RANDOM"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::POSIX_FADV_NOREUSE}}",
      "Body": "Flags that can be used in advice in posix_fadvise() that specify the access pattern that is likely to be used.",
      "Link": "https://docs.python.org/3/library/os.html#os.POSIX_FADV_NOREUSE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::POSIX_FADV_WILLNEED}}",
      "Body": "Flags that can be used in advice in posix_fadvise() that specify the access pattern that is likely to be used.",
      "Link": "https://docs.python.org/3/library/os.html#os.POSIX_FADV_WILLNEED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::POSIX_FADV_DONTNEED}}",
      "Body": "Flags that can be used in advice in posix_fadvise() that specify the access pattern that is likely to be used.",
      "Link": "https://docs.python.org/3/library/os.html#os.POSIX_FADV_DONTNEED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::pread}}({{c3::fd}}, {{c4::n}}, {{c5::offset}})",
      "Body": "Read at most n bytes from file descriptor fd at a position of offset, leaving the file offset unchanged.",
      "Link": "https://docs.python.org/3/library/os.html#os.pread"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::preadv}}({{c3::fd}}, {{c4::buffers}}, {{c5::offset}}, {{c6::flags}}=0)",
      "Body": "Read from a file descriptor fd at a position of offset into mutable bytes-like objects buffers, leaving the file offset unchanged.  Transfer data into each buffer until it is full and then move on to the next buffer in the sequence to hold the rest of the data.",
      "Link": "https://docs.python.org/3/library/os.html#os.preadv"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::RWF_NOWAIT}}",
      "Body": "Do not wait for data which is not immediately available. If this flag is specified, the system call will return instantly if it would have to read data from the backing storage or wait for a lock.",
      "Link": "https://docs.python.org/3/library/os.html#os.RWF_NOWAIT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::RWF_HIPRI}}",
      "Body": "High priority read/write. Allows block-based filesystems to use polling of the device, which provides lower latency, but may use additional resources.",
      "Link": "https://docs.python.org/3/library/os.html#os.RWF_HIPRI"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::pwrite}}({{c3::fd}}, {{c4::str}}, {{c5::offset}})",
      "Body": "Write the bytestring in str to file descriptor fd at position of offset, leaving the file offset unchanged.",
      "Link": "https://docs.python.org/3/library/os.html#os.pwrite"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::pwritev}}({{c3::fd}}, {{c4::buffers}}, {{c5::offset}}, {{c6::flags}}=0)",
      "Body": "Write the buffers contents to file descriptor fd at a offset offset, leaving the file offset unchanged.  buffers must be a sequence of bytes-like objects. Buffers are processed in array order. Entire contents of the first buffer is written before proceeding to the second, and so on.",
      "Link": "https://docs.python.org/3/library/os.html#os.pwritev"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::RWF_DSYNC}}",
      "Body": "Provide a per-write equivalent of the O_DSYNC open(2) flag. This flag effect applies only to the data range written by the system call.",
      "Link": "https://docs.python.org/3/library/os.html#os.RWF_DSYNC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::RWF_SYNC}}",
      "Body": "Provide a per-write equivalent of the O_SYNC open(2) flag. This flag effect applies only to the data range written by the system call.",
      "Link": "https://docs.python.org/3/library/os.html#os.RWF_SYNC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::read}}({{c3::fd}}, {{c4::n}})",
      "Body": "Read at most n bytes from file descriptor fd.",
      "Link": "https://docs.python.org/3/library/os.html#os.read"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sendfile}}({{c3::out}}, {{c4::in}}, {{c5::offset}}, {{c6::count}})",
      "Body": "Copy count bytes from file descriptor in to file descriptor out starting at offset. Return the number of bytes sent. When EOF is reached return 0.",
      "Link": "https://docs.python.org/3/library/os.html#os.sendfile"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sendfile}}({{c3::out}}, {{c4::in}}, {{c5::offset}}, {{c6::count}}, [{{c7::headers}}, ][{{c8::trailers}}, ]flags=0)",
      "Body": "Copy count bytes from file descriptor in to file descriptor out starting at offset. Return the number of bytes sent. When EOF is reached return 0.",
      "Link": "https://docs.python.org/3/library/os.html#file-descriptor-operations"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::set_blocking}}({{c3::fd}}, {{c4::blocking}})",
      "Body": "Set the blocking mode of the specified file descriptor. Set the O_NONBLOCK flag if blocking is False, clear the flag otherwise.",
      "Link": "https://docs.python.org/3/library/os.html#os.set_blocking"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::SF_NODISKIO}}",
      "Body": "Parameters to the sendfile() function, if the implementation supports them.",
      "Link": "https://docs.python.org/3/library/os.html#os.SF_NODISKIO"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::SF_MNOWAIT}}",
      "Body": "Parameters to the sendfile() function, if the implementation supports them.",
      "Link": "https://docs.python.org/3/library/os.html#os.SF_MNOWAIT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::SF_SYNC}}",
      "Body": "Parameters to the sendfile() function, if the implementation supports them.",
      "Link": "https://docs.python.org/3/library/os.html#os.SF_SYNC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::readv}}({{c3::fd}}, {{c4::buffers}})",
      "Body": "Read from a file descriptor fd into a number of mutable bytes-like objects buffers. Transfer data into each buffer until it is full and then move on to the next buffer in the sequence to hold the rest of the data.",
      "Link": "https://docs.python.org/3/library/os.html#os.readv"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::tcgetpgrp}}({{c3::fd}})",
      "Body": "Return the process group associated with the terminal given by fd (an open file descriptor as returned by os.open()).",
      "Link": "https://docs.python.org/3/library/os.html#os.tcgetpgrp"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::tcsetpgrp}}({{c3::fd}}, {{c4::pg}})",
      "Body": "Set the process group associated with the terminal given by fd (an open file descriptor as returned by os.open()) to pg.",
      "Link": "https://docs.python.org/3/library/os.html#os.tcsetpgrp"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::ttyname}}({{c3::fd}})",
      "Body": "Return a string which specifies the terminal device associated with file descriptor fd.  If fd is not associated with a terminal device, an exception is raised.",
      "Link": "https://docs.python.org/3/library/os.html#os.ttyname"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::write}}({{c3::fd}}, {{c4::str}})",
      "Body": "Write the bytestring in str to file descriptor fd.",
      "Link": "https://docs.python.org/3/library/os.html#os.write"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::writev}}({{c3::fd}}, {{c4::buffers}})",
      "Body": "Write the contents of buffers to file descriptor fd. buffers must be a sequence of bytes-like objects. Buffers are processed in array order. Entire contents of the first buffer is written before proceeding to the second, and so on.",
      "Link": "https://docs.python.org/3/library/os.html#os.writev"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::get_terminal_size}}({{c3::fd}}={{c4::STDOUT_FILENO}})",
      "Body": "Return the size of the terminal window as (columns, lines), tuple of type terminal_size.",
      "Link": "https://docs.python.org/3/library/os.html#os.get_terminal_size"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::os}}.{{c3::terminal_size}}",
      "Body": "A subclass of tuple, holding (columns, lines) of the terminal window size.",
      "Link": "https://docs.python.org/3/library/os.html#os.terminal_size"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::terminal_size}}.{{c3::columns}}",
      "Body": "Width of the terminal window in characters.",
      "Link": "https://docs.python.org/3/library/os.html#os.terminal_size.columns"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::terminal_size}}.{{c3::lines}}",
      "Body": "Height of the terminal window in characters.",
      "Link": "https://docs.python.org/3/library/os.html#os.terminal_size.lines"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::get_inheritable}}({{c3::fd}})",
      "Body": "Get the inheritable flag of the specified file descriptor (a boolean).",
      "Link": "https://docs.python.org/3/library/os.html#os.get_inheritable"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::set_inheritable}}({{c3::fd}}, {{c4::inheritable}})",
      "Body": "Set the inheritable flag of the specified file descriptor.",
      "Link": "https://docs.python.org/3/library/os.html#os.set_inheritable"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::get_handle_inheritable}}({{c3::handle}})",
      "Body": "Get the inheritable flag of the specified handle (a boolean).",
      "Link": "https://docs.python.org/3/library/os.html#os.get_handle_inheritable"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::set_handle_inheritable}}({{c3::handle}}, {{c4::inheritable}})",
      "Body": "Set the inheritable flag of the specified handle.",
      "Link": "https://docs.python.org/3/library/os.html#os.set_handle_inheritable"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::access}}({{c3::path}}, {{c4::mode}}, *, {{c5::dir_fd}}={{c6::None}}, {{c7::effective_ids}}={{c8::False}}, {{c9::follow_symlinks}}={{c10::True}})",
      "Body": "Use the real uid/gid to test for access to path.  Note that most operations will use the effective uid/gid, therefore this routine can be used in a suid/sgid environment to test if the invoking user has the specified access to path.  mode should be F_OK to test the existence of path, or it can be the inclusive OR of one or more of R_OK, W_OK, and X_OK to test permissions.  Return True if access is allowed, False if not. See the Unix man page access(2) for more information.",
      "Link": "https://docs.python.org/3/library/os.html#os.access"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::F_OK}}",
      "Body": "Values to pass as the mode parameter of access() to test the existence, readability, writability and executability of path, respectively.",
      "Link": "https://docs.python.org/3/library/os.html#os.F_OK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::R_OK}}",
      "Body": "Values to pass as the mode parameter of access() to test the existence, readability, writability and executability of path, respectively.",
      "Link": "https://docs.python.org/3/library/os.html#os.R_OK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::W_OK}}",
      "Body": "Values to pass as the mode parameter of access() to test the existence, readability, writability and executability of path, respectively.",
      "Link": "https://docs.python.org/3/library/os.html#os.W_OK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::X_OK}}",
      "Body": "Values to pass as the mode parameter of access() to test the existence, readability, writability and executability of path, respectively.",
      "Link": "https://docs.python.org/3/library/os.html#os.X_OK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::chdir}}({{c3::path}})",
      "Body": "Change the current working directory to path.",
      "Link": "https://docs.python.org/3/library/os.html#os.chdir"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::chflags}}({{c3::path}}, {{c4::flags}}, *, {{c5::follow_symlinks}}={{c6::True}})",
      "Body": "Set the flags of path to the numeric flags. flags may take a combination (bitwise OR) of the following values (as defined in the stat module):",
      "Link": "https://docs.python.org/3/library/os.html#os.chflags"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::chmod}}({{c3::path}}, {{c4::mode}}, *, {{c5::dir_fd}}={{c6::None}}, {{c7::follow_symlinks}}={{c8::True}})",
      "Body": "Change the mode of path to the numeric mode. mode may take one of the following values (as defined in the stat module) or bitwise ORed combinations of them:",
      "Link": "https://docs.python.org/3/library/os.html#os.chmod"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::chown}}({{c3::path}}, {{c4::uid}}, {{c5::gid}}, *, {{c6::dir_fd}}={{c7::None}}, {{c8::follow_symlinks}}={{c9::True}})",
      "Body": "Change the owner and group id of path to the numeric uid and gid.  To leave one of the ids unchanged, set it to -1.",
      "Link": "https://docs.python.org/3/library/os.html#os.chown"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::chroot}}({{c3::path}})",
      "Body": "Change the root directory of the current process to path.",
      "Link": "https://docs.python.org/3/library/os.html#os.chroot"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fchdir}}({{c3::fd}})",
      "Body": "Change the current working directory to the directory represented by the file descriptor fd.  The descriptor must refer to an opened directory, not an open file.  As of 3.3, this is equivalent to os.chdir(fd).",
      "Link": "https://docs.python.org/3/library/os.html#os.fchdir"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getcwd}}()",
      "Body": "Return a string representing the current working directory.",
      "Link": "https://docs.python.org/3/library/os.html#os.getcwd"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getcwdb}}()",
      "Body": "Return a bytestring representing the current working directory.",
      "Link": "https://docs.python.org/3/library/os.html#os.getcwdb"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::lchflags}}({{c3::path}}, {{c4::flags}})",
      "Body": "Set the flags of path to the numeric flags, like chflags(), but do not follow symbolic links.  As of 3.3, this is equivalent to os.chflags(path, flags, follow_symlinks=False).",
      "Link": "https://docs.python.org/3/library/os.html#os.lchflags"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::lchmod}}({{c3::path}}, {{c4::mode}})",
      "Body": "Change the mode of path to the numeric mode. If path is a symlink, this affects the symlink rather than the target.  See the docs for chmod() for possible values of mode.  As of 3.3, this is equivalent to os.chmod(path, mode, follow_symlinks=False).",
      "Link": "https://docs.python.org/3/library/os.html#os.lchmod"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::lchown}}({{c3::path}}, {{c4::uid}}, {{c5::gid}})",
      "Body": "Change the owner and group id of path to the numeric uid and gid.  This function will not follow symbolic links.  As of 3.3, this is equivalent to os.chown(path, uid, gid, follow_symlinks=False).",
      "Link": "https://docs.python.org/3/library/os.html#os.lchown"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::link}}({{c3::src}}, {{c4::dst}}, *, {{c5::src_dir_fd}}={{c6::None}}, {{c7::dst_dir_fd}}={{c8::None}}, {{c9::follow_symlinks}}={{c10::True}})",
      "Body": "Create a hard link pointing to src named dst.",
      "Link": "https://docs.python.org/3/library/os.html#os.link"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::listdir}}({{c3::path}}='.')",
      "Body": "Return a list containing the names of the entries in the directory given by path.  The list is in arbitrary order, and does not include the special entries '.' and '..' even if they are present in the directory.",
      "Link": "https://docs.python.org/3/library/os.html#os.listdir"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::lstat}}({{c3::path}}, *, {{c4::dir_fd}}={{c5::None}})",
      "Body": "Perform the equivalent of an lstat() system call on the given path. Similar to stat(), but does not follow symbolic links. Return a stat_result object.",
      "Link": "https://docs.python.org/3/library/os.html#os.lstat"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::mkdir}}({{c3::path}}, {{c4::mode}}=0{{c5::o}}777, *, {{c6::dir_fd}}={{c7::None}})",
      "Body": "Create a directory named path with numeric mode mode.",
      "Link": "https://docs.python.org/3/library/os.html#os.mkdir"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::makedirs}}({{c3::name}}, {{c4::mode}}=0{{c5::o}}777, {{c6::exist_ok}}={{c7::False}})",
      "Body": "Recursive directory creation function.  Like mkdir(), but makes all intermediate-level directories needed to contain the leaf directory.",
      "Link": "https://docs.python.org/3/library/os.html#os.makedirs"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::mkfifo}}({{c3::path}}, {{c4::mode}}=0{{c5::o}}666, *, {{c6::dir_fd}}={{c7::None}})",
      "Body": "Create a FIFO (a named pipe) named path with numeric mode mode. The current umask value is first masked out from the mode.",
      "Link": "https://docs.python.org/3/library/os.html#os.mkfifo"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::mknod}}({{c3::path}}, {{c4::mode}}=0{{c5::o}}600, {{c6::device}}=0, *, {{c7::dir_fd}}={{c8::None}})",
      "Body": "Create a filesystem node (file, device special file or named pipe) named path. mode specifies both the permissions to use and the type of node to be created, being combined (bitwise OR) with one of stat.S_IFREG, stat.S_IFCHR, stat.S_IFBLK, and stat.S_IFIFO (those constants are available in stat).  For stat.S_IFCHR and stat.S_IFBLK, device defines the newly created device special file (probably using os.makedev()), otherwise it is ignored.",
      "Link": "https://docs.python.org/3/library/os.html#os.mknod"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::major}}({{c3::device}})",
      "Body": "Extract the device major number from a raw device number (usually the st_dev or st_rdev field from stat).",
      "Link": "https://docs.python.org/3/library/os.html#os.major"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::minor}}({{c3::device}})",
      "Body": "Extract the device minor number from a raw device number (usually the st_dev or st_rdev field from stat).",
      "Link": "https://docs.python.org/3/library/os.html#os.minor"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::makedev}}({{c3::major}}, {{c4::minor}})",
      "Body": "Compose a raw device number from the major and minor device numbers.",
      "Link": "https://docs.python.org/3/library/os.html#os.makedev"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::pathconf}}({{c3::path}}, {{c4::name}})",
      "Body": "Return system configuration information relevant to a named file. name specifies the configuration value to retrieve; it may be a string which is the name of a defined system value; these names are specified in a number of standards (POSIX.1, Unix 95, Unix 98, and others).  Some platforms define additional names as well.  The names known to the host operating system are given in the pathconf_names dictionary.  For configuration variables not included in that mapping, passing an integer for name is also accepted.",
      "Link": "https://docs.python.org/3/library/os.html#os.pathconf"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::pathconf_names}}",
      "Body": "Dictionary mapping names accepted by pathconf() and fpathconf() to the integer values defined for those names by the host operating system.  This can be used to determine the set of names known to the system.",
      "Link": "https://docs.python.org/3/library/os.html#os.pathconf_names"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::readlink}}({{c3::path}}, *, {{c4::dir_fd}}={{c5::None}})",
      "Body": "Return a string representing the path to which the symbolic link points.  The result may be either an absolute or relative pathname; if it is relative, it may be converted to an absolute pathname using os.path.join(os.path.dirname(path), result).",
      "Link": "https://docs.python.org/3/library/os.html#os.readlink"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::remove}}({{c3::path}}, *, {{c4::dir_fd}}={{c5::None}})",
      "Body": "Remove (delete) the file path.  If path is a directory, OSError is raised.  Use rmdir() to remove directories.",
      "Link": "https://docs.python.org/3/library/os.html#os.remove"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::removedirs}}({{c3::name}})",
      "Body": "Remove directories recursively.  Works like rmdir() except that, if the leaf directory is successfully removed, removedirs()  tries to successively remove every parent directory mentioned in  path until an error is raised (which is ignored, because it generally means that a parent directory is not empty). For example, os.removedirs('foo/bar/baz') will first remove the directory 'foo/bar/baz', and then remove 'foo/bar' and 'foo' if they are empty. Raises OSError if the leaf directory could not be successfully removed.",
      "Link": "https://docs.python.org/3/library/os.html#os.removedirs"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::rename}}({{c3::src}}, {{c4::dst}}, *, {{c5::src_dir_fd}}={{c6::None}}, {{c7::dst_dir_fd}}={{c8::None}})",
      "Body": "Rename the file or directory src to dst.  If dst is a directory, OSError will be raised.  On Unix, if dst exists and is a file, it will be replaced silently if the user has permission.  The operation may fail on some Unix flavors if src and dst are on different filesystems.  If successful, the renaming will be an atomic operation (this is a POSIX requirement).  On Windows, if dst already exists, OSError will be raised even if it is a file.",
      "Link": "https://docs.python.org/3/library/os.html#os.rename"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::renames}}({{c3::old}}, {{c4::new}})",
      "Body": "Recursive directory or file renaming function. Works like rename(), except creation of any intermediate directories needed to make the new pathname good is attempted first. After the rename, directories corresponding to rightmost path segments of the old name will be pruned away using removedirs().",
      "Link": "https://docs.python.org/3/library/os.html#os.renames"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::replace}}({{c3::src}}, {{c4::dst}}, *, {{c5::src_dir_fd}}={{c6::None}}, {{c7::dst_dir_fd}}={{c8::None}})",
      "Body": "Rename the file or directory src to dst.  If dst is a directory, OSError will be raised.  If dst exists and is a file, it will be replaced silently if the user has permission.  The operation may fail if src and dst are on different filesystems.  If successful, the renaming will be an atomic operation (this is a POSIX requirement).",
      "Link": "https://docs.python.org/3/library/os.html#os.replace"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::rmdir}}({{c3::path}}, *, {{c4::dir_fd}}={{c5::None}})",
      "Body": "Remove (delete) the directory path.  Only works when the directory is empty, otherwise, OSError is raised.  In order to remove whole directory trees, shutil.rmtree() can be used.",
      "Link": "https://docs.python.org/3/library/os.html#os.rmdir"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::scandir}}({{c3::path}}='.')",
      "Body": "Return an iterator of os.DirEntry objects corresponding to the entries in the directory given by path. The entries are yielded in arbitrary order, and the special entries '.' and '..' are not included.",
      "Link": "https://docs.python.org/3/library/os.html#os.scandir"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::scandir}}.{{c2::close}}()",
      "Body": "Close the iterator and free acquired resources.",
      "Link": "https://docs.python.org/3/library/os.html#os.scandir.close"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::os}}.{{c3::DirEntry}}",
      "Body": "Object yielded by scandir() to expose the file path and other file attributes of a directory entry.",
      "Link": "https://docs.python.org/3/library/os.html#os.DirEntry"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::DirEntry}}.{{c3::name}}",
      "Body": "The entry's base filename, relative to the scandir() path argument.",
      "Link": "https://docs.python.org/3/library/os.html#os.DirEntry.name"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::DirEntry}}.{{c3::path}}",
      "Body": "The entry's full path name: equivalent to os.path.join(scandir_path, entry.name) where scandir_path is the scandir() path argument.  The path is only absolute if the scandir() path argument was absolute.  If the scandir() path argument was a file descriptor, the path attribute is the same as the name attribute.",
      "Link": "https://docs.python.org/3/library/os.html#os.DirEntry.path"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::DirEntry}}.{{c3::inode}}()",
      "Body": "Return the inode number of the entry.",
      "Link": "https://docs.python.org/3/library/os.html#os.DirEntry.inode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::DirEntry}}.{{c3::is_dir}}(*, {{c4::follow_symlinks}}={{c5::True}})",
      "Body": "Return True if this entry is a directory or a symbolic link pointing to a directory; return False if the entry is or points to any other kind of file, or if it doesn't exist anymore.",
      "Link": "https://docs.python.org/3/library/os.html#os.DirEntry.is_dir"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::DirEntry}}.{{c3::is_file}}(*, {{c4::follow_symlinks}}={{c5::True}})",
      "Body": "Return True if this entry is a file or a symbolic link pointing to a file; return False if the entry is or points to a directory or other non-file entry, or if it doesn't exist anymore.",
      "Link": "https://docs.python.org/3/library/os.html#os.DirEntry.is_file"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::DirEntry}}.{{c3::is_symlink}}()",
      "Body": "Return True if this entry is a symbolic link (even if broken); return False if the entry points to a directory or any kind of file, or if it doesn't exist anymore.",
      "Link": "https://docs.python.org/3/library/os.html#os.DirEntry.is_symlink"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::DirEntry}}.{{c3::stat}}(*, {{c4::follow_symlinks}}={{c5::True}})",
      "Body": "Return a stat_result object for this entry. This method follows symbolic links by default; to stat a symbolic link add the follow_symlinks=False argument.",
      "Link": "https://docs.python.org/3/library/os.html#os.DirEntry.stat"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat}}({{c3::path}}, *, {{c4::dir_fd}}={{c5::None}}, {{c6::follow_symlinks}}={{c7::True}})",
      "Body": "Get the status of a file or a file descriptor. Perform the equivalent of a stat() system call on the given path. path may be specified as either a string or bytes  directly or indirectly through the PathLike interface  or as an open file descriptor. Return a stat_result object.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::os}}.{{c3::stat_result}}",
      "Body": "Object whose attributes correspond roughly to the members of the stat structure. It is used for the result of os.stat(), os.fstat() and os.lstat().",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_mode}}",
      "Body": "File mode: file type and file mode bits (permissions).",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_mode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_ino}}",
      "Body": "Platform dependent, but if non-zero, uniquely identifies the file for a given value of st_dev. Typically:",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_ino"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_dev}}",
      "Body": "Identifier of the device on which this file resides.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_dev"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_nlink}}",
      "Body": "Number of hard links.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_nlink"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_uid}}",
      "Body": "User identifier of the file owner.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_uid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_gid}}",
      "Body": "Group identifier of the file owner.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_gid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_size}}",
      "Body": "Size of the file in bytes, if it is a regular file or a symbolic link. The size of a symbolic link is the length of the pathname it contains, without a terminating null byte.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_size"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_atime}}",
      "Body": "Time of most recent access expressed in seconds.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_atime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_mtime}}",
      "Body": "Time of most recent content modification expressed in seconds.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_mtime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_ctime}}",
      "Body": "Platform dependent:",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_ctime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_atime_ns}}",
      "Body": "Time of most recent access expressed in nanoseconds as an integer.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_atime_ns"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_mtime_ns}}",
      "Body": "Time of most recent content modification expressed in nanoseconds as an integer.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_mtime_ns"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_ctime_ns}}",
      "Body": "Platform dependent:",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_ctime_ns"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_blocks}}",
      "Body": "Number of 512-byte blocks allocated for file. This may be smaller than st_size/512 when the file has holes.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_blocks"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_blksize}}",
      "Body": "Preferred blocksize for efficient file system I/O. Writing to a file in smaller chunks may cause an inefficient read-modify-rewrite.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_blksize"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_rdev}}",
      "Body": "Type of device if an inode device.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_rdev"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_flags}}",
      "Body": "User defined flags for file.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_flags"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_gen}}",
      "Body": "File generation number.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_gen"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_birthtime}}",
      "Body": "Time of file creation.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_birthtime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_fstype}}",
      "Body": "String that uniquely identifies the type of the filesystem that contains the file.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_fstype"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_rsize}}",
      "Body": "Real size of the file.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_rsize"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_creator}}",
      "Body": "Creator of the file.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_creator"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_type}}",
      "Body": "File type.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_type"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::stat_result}}.{{c3::st_file_attributes}}",
      "Body": "Windows file attributes: dwFileAttributes member of the BY_HANDLE_FILE_INFORMATION structure returned by GetFileInformationByHandle(). See the FILE_ATTRIBUTE_* constants in the stat module.",
      "Link": "https://docs.python.org/3/library/os.html#os.stat_result.st_file_attributes"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::statvfs}}({{c3::path}})",
      "Body": "Perform a statvfs() system call on the given path.  The return value is an object whose attributes describe the filesystem on the given path, and correspond to the members of the statvfs structure, namely: f_bsize, f_frsize, f_blocks, f_bfree, f_bavail, f_files, f_ffree, f_favail, f_flag, f_namemax, f_fsid.",
      "Link": "https://docs.python.org/3/library/os.html#os.statvfs"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::supports_dir_fd}}",
      "Body": "A Set object indicating which functions in the os module permit use of their dir_fd parameter.  Different platforms provide different functionality, and an option that might work on one might be unsupported on another.  For consistency's sakes, functions that support dir_fd always allow specifying the parameter, but will raise an exception if the functionality is not actually available.",
      "Link": "https://docs.python.org/3/library/os.html#os.supports_dir_fd"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::supports_effective_ids}}",
      "Body": "A Set object indicating which functions in the os module permit use of the effective_ids parameter for os.access().  If the local platform supports it, the collection will contain os.access(), otherwise it will be empty.",
      "Link": "https://docs.python.org/3/library/os.html#os.supports_effective_ids"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::supports_fd}}",
      "Body": "A Set object indicating which functions in the os module permit specifying their path parameter as an open file descriptor.  Different platforms provide different functionality, and an option that might work on one might be unsupported on another.  For consistency's sakes, functions that support fd always allow specifying the parameter, but will raise an exception if the functionality is not actually available.",
      "Link": "https://docs.python.org/3/library/os.html#os.supports_fd"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::supports_follow_symlinks}}",
      "Body": "A Set object indicating which functions in the os module permit use of their follow_symlinks parameter.  Different platforms provide different functionality, and an option that might work on one might be unsupported on another.  For consistency's sakes, functions that support follow_symlinks always allow specifying the parameter, but will raise an exception if the functionality is not actually available.",
      "Link": "https://docs.python.org/3/library/os.html#os.supports_follow_symlinks"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::symlink}}({{c3::src}}, {{c4::dst}}, {{c5::target_is_directory}}={{c6::False}}, *, {{c7::dir_fd}}={{c8::None}})",
      "Body": "Create a symbolic link pointing to src named dst.",
      "Link": "https://docs.python.org/3/library/os.html#os.symlink"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sync}}()",
      "Body": "Force write of everything to disk.",
      "Link": "https://docs.python.org/3/library/os.html#os.sync"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::truncate}}({{c3::path}}, {{c4::length}})",
      "Body": "Truncate the file corresponding to path, so that it is at most length bytes in size.",
      "Link": "https://docs.python.org/3/library/os.html#os.truncate"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::unlink}}({{c3::path}}, *, {{c4::dir_fd}}={{c5::None}})",
      "Body": "Remove (delete) the file path.  This function is semantically identical to remove(); the unlink name is its traditional Unix name.  Please see the documentation for remove() for further information.",
      "Link": "https://docs.python.org/3/library/os.html#os.unlink"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::utime}}({{c3::path}}, {{c4::times}}={{c5::None}}, *, [{{c6::ns}}, ]dir_fd={{c7::None}}, {{c8::follow_symlinks}}={{c9::True}})",
      "Body": "Set the access and modified times of the file specified by path.",
      "Link": "https://docs.python.org/3/library/os.html#os.utime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::walk}}({{c3::top}}, {{c4::topdown}}={{c5::True}}, {{c6::onerror}}={{c7::None}}, {{c8::followlinks}}={{c9::False}})",
      "Body": "Generate the file names in a directory tree by walking the tree either top-down or bottom-up. For each directory in the tree rooted at directory top (including top itself), it yields a 3-tuple (dirpath, dirnames, filenames).",
      "Link": "https://docs.python.org/3/library/os.html#os.walk"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fwalk}}({{c3::top}}='.', {{c4::topdown}}={{c5::True}}, {{c6::onerror}}={{c7::None}}, *, {{c8::follow_symlinks}}={{c9::False}}, {{c10::dir_fd}}={{c11::None}})",
      "Body": "This behaves exactly like walk(), except that it yields a 4-tuple (dirpath, dirnames, filenames, dirfd), and it supports dir_fd.",
      "Link": "https://docs.python.org/3/library/os.html#os.fwalk"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getxattr}}({{c3::path}}, {{c4::attribute}}, *, {{c5::follow_symlinks}}={{c6::True}})",
      "Body": "Return the value of the extended filesystem attribute attribute for path. attribute can be bytes or str (directly or indirectly through the PathLike interface). If it is str, it is encoded with the filesystem encoding.",
      "Link": "https://docs.python.org/3/library/os.html#os.getxattr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::listxattr}}({{c3::path}}={{c4::None}}, *, {{c5::follow_symlinks}}={{c6::True}})",
      "Body": "Return a list of the extended filesystem attributes on path.  The attributes in the list are represented as strings decoded with the filesystem encoding.  If path is None, listxattr() will examine the current directory.",
      "Link": "https://docs.python.org/3/library/os.html#os.listxattr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::removexattr}}({{c3::path}}, {{c4::attribute}}, *, {{c5::follow_symlinks}}={{c6::True}})",
      "Body": "Removes the extended filesystem attribute attribute from path. attribute should be bytes or str (directly or indirectly through the PathLike interface). If it is a string, it is encoded with the filesystem encoding.",
      "Link": "https://docs.python.org/3/library/os.html#os.removexattr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::setxattr}}({{c3::path}}, {{c4::attribute}}, {{c5::value}}, {{c6::flags}}=0, *, {{c7::follow_symlinks}}={{c8::True}})",
      "Body": "Set the extended filesystem attribute attribute on path to value. attribute must be a bytes or str with no embedded NULs (directly or indirectly through the PathLike interface). If it is a str, it is encoded with the filesystem encoding.  flags may be XATTR_REPLACE or XATTR_CREATE. If XATTR_REPLACE is given and the attribute does not exist, EEXISTS will be raised. If XATTR_CREATE is given and the attribute already exists, the attribute will not be created and ENODATA will be raised.",
      "Link": "https://docs.python.org/3/library/os.html#os.setxattr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::XATTR_SIZE_MAX}}",
      "Body": "The maximum size the value of an extended attribute can be. Currently, this is 64 KiB on Linux.",
      "Link": "https://docs.python.org/3/library/os.html#os.XATTR_SIZE_MAX"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::XATTR_CREATE}}",
      "Body": "This is a possible value for the flags argument in setxattr(). It indicates the operation must create an attribute.",
      "Link": "https://docs.python.org/3/library/os.html#os.XATTR_CREATE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::XATTR_REPLACE}}",
      "Body": "This is a possible value for the flags argument in setxattr(). It indicates the operation must replace an existing attribute.",
      "Link": "https://docs.python.org/3/library/os.html#os.XATTR_REPLACE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::abort}}()",
      "Body": "Generate a SIGABRT signal to the current process.  On Unix, the default behavior is to produce a core dump; on Windows, the process immediately returns an exit code of 3.  Be aware that calling this function will not call the signal handler registered for SIGABRT with signal.signal().",
      "Link": "https://docs.python.org/3/library/os.html#os.abort"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::execl}}({{c3::path}}, {{c4::arg}}0, {{c5::arg}}1, ...)",
      "Body": "These functions all execute a new program, replacing the current process; they do not return.  On Unix, the new executable is loaded into the current process, and will have the same process id as the caller.  Errors will be reported as OSError exceptions.",
      "Link": "https://docs.python.org/3/library/os.html#os.execl"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::execle}}({{c3::path}}, {{c4::arg}}0, {{c5::arg}}1, ..., {{c6::env}})",
      "Body": "These functions all execute a new program, replacing the current process; they do not return.  On Unix, the new executable is loaded into the current process, and will have the same process id as the caller.  Errors will be reported as OSError exceptions.",
      "Link": "https://docs.python.org/3/library/os.html#os.execle"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::execlp}}({{c3::file}}, {{c4::arg}}0, {{c5::arg}}1, ...)",
      "Body": "These functions all execute a new program, replacing the current process; they do not return.  On Unix, the new executable is loaded into the current process, and will have the same process id as the caller.  Errors will be reported as OSError exceptions.",
      "Link": "https://docs.python.org/3/library/os.html#os.execlp"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::execlpe}}({{c3::file}}, {{c4::arg}}0, {{c5::arg}}1, ..., {{c6::env}})",
      "Body": "These functions all execute a new program, replacing the current process; they do not return.  On Unix, the new executable is loaded into the current process, and will have the same process id as the caller.  Errors will be reported as OSError exceptions.",
      "Link": "https://docs.python.org/3/library/os.html#os.execlpe"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::execv}}({{c3::path}}, {{c4::args}})",
      "Body": "These functions all execute a new program, replacing the current process; they do not return.  On Unix, the new executable is loaded into the current process, and will have the same process id as the caller.  Errors will be reported as OSError exceptions.",
      "Link": "https://docs.python.org/3/library/os.html#os.execv"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::execve}}({{c3::path}}, {{c4::args}}, {{c5::env}})",
      "Body": "These functions all execute a new program, replacing the current process; they do not return.  On Unix, the new executable is loaded into the current process, and will have the same process id as the caller.  Errors will be reported as OSError exceptions.",
      "Link": "https://docs.python.org/3/library/os.html#os.execve"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::execvp}}({{c3::file}}, {{c4::args}})",
      "Body": "These functions all execute a new program, replacing the current process; they do not return.  On Unix, the new executable is loaded into the current process, and will have the same process id as the caller.  Errors will be reported as OSError exceptions.",
      "Link": "https://docs.python.org/3/library/os.html#os.execvp"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::execvpe}}({{c3::file}}, {{c4::args}}, {{c5::env}})",
      "Body": "These functions all execute a new program, replacing the current process; they do not return.  On Unix, the new executable is loaded into the current process, and will have the same process id as the caller.  Errors will be reported as OSError exceptions.",
      "Link": "https://docs.python.org/3/library/os.html#os.execvpe"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::_exit}}({{c3::n}})",
      "Body": "Exit the process with status n, without calling cleanup handlers, flushing stdio buffers, etc.",
      "Link": "https://docs.python.org/3/library/os.html#os._exit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_OK}}",
      "Body": "Exit code that means no error occurred.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_OK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_USAGE}}",
      "Body": "Exit code that means the command was used incorrectly, such as when the wrong number of arguments are given.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_USAGE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_DATAERR}}",
      "Body": "Exit code that means the input data was incorrect.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_DATAERR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_NOINPUT}}",
      "Body": "Exit code that means an input file did not exist or was not readable.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_NOINPUT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_NOUSER}}",
      "Body": "Exit code that means a specified user did not exist.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_NOUSER"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_NOHOST}}",
      "Body": "Exit code that means a specified host did not exist.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_NOHOST"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_UNAVAILABLE}}",
      "Body": "Exit code that means that a required service is unavailable.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_UNAVAILABLE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_SOFTWARE}}",
      "Body": "Exit code that means an internal software error was detected.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_SOFTWARE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_OSERR}}",
      "Body": "Exit code that means an operating system error was detected, such as the inability to fork or create a pipe.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_OSERR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_OSFILE}}",
      "Body": "Exit code that means some system file did not exist, could not be opened, or had some other kind of error.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_OSFILE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_CANTCREAT}}",
      "Body": "Exit code that means a user specified output file could not be created.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_CANTCREAT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_IOERR}}",
      "Body": "Exit code that means that an error occurred while doing I/O on some file.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_IOERR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_TEMPFAIL}}",
      "Body": "Exit code that means a temporary failure occurred.  This indicates something that may not really be an error, such as a network connection that couldn't be made during a retryable operation.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_TEMPFAIL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_PROTOCOL}}",
      "Body": "Exit code that means that a protocol exchange was illegal, invalid, or not understood.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_PROTOCOL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_NOPERM}}",
      "Body": "Exit code that means that there were insufficient permissions to perform the operation (but not intended for file system problems).",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_NOPERM"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_CONFIG}}",
      "Body": "Exit code that means that some kind of configuration error occurred.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_CONFIG"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::EX_NOTFOUND}}",
      "Body": "Exit code that means something like an entry was not found.",
      "Link": "https://docs.python.org/3/library/os.html#os.EX_NOTFOUND"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::fork}}()",
      "Body": "Fork a child process.  Return 0 in the child and the child's process id in the parent.  If an error occurs OSError is raised.",
      "Link": "https://docs.python.org/3/library/os.html#os.fork"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::forkpty}}()",
      "Body": "Fork a child process, using a new pseudo-terminal as the child's controlling terminal. Return a pair of (pid, fd), where pid is 0 in the child, the new child's process id in the parent, and fd is the file descriptor of the master end of the pseudo-terminal.  For a more portable approach, use the pty module.  If an error occurs OSError is raised.",
      "Link": "https://docs.python.org/3/library/os.html#os.forkpty"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::kill}}({{c3::pid}}, {{c4::sig}})",
      "Body": "Send signal sig to the process pid.  Constants for the specific signals available on the host platform are defined in the signal module.",
      "Link": "https://docs.python.org/3/library/os.html#os.kill"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::killpg}}({{c3::pgid}}, {{c4::sig}})",
      "Body": "Send the signal sig to the process group pgid.",
      "Link": "https://docs.python.org/3/library/os.html#os.killpg"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::nice}}({{c3::increment}})",
      "Body": "Add increment to the process's niceness.  Return the new niceness.",
      "Link": "https://docs.python.org/3/library/os.html#os.nice"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::plock}}({{c3::op}})",
      "Body": "Lock program segments into memory.  The value of op (defined in <sys/lock.h>) determines which segments are locked.",
      "Link": "https://docs.python.org/3/library/os.html#os.plock"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::popen}}({{c3::cmd}}, {{c4::mode}}='{{c5::r}}', {{c6::buffering}}=-1)",
      "Body": "Open a pipe to or from command cmd. The return value is an open file object connected to the pipe, which can be read or written depending on whether mode is 'r' (default) or 'w'. The buffering argument has the same meaning as the corresponding argument to the built-in open() function. The returned file object reads or writes text strings rather than bytes.",
      "Link": "https://docs.python.org/3/library/os.html#os.popen"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::register_at_fork}}(*, {{c3::before}}={{c4::None}}, {{c5::after_in_parent}}={{c6::None}}, {{c7::after_in_child}}={{c8::None}})",
      "Body": "Register callables to be executed when a new child process is forked using os.fork() or similar process cloning APIs. The parameters are optional and keyword-only. Each specifies a different call point.",
      "Link": "https://docs.python.org/3/library/os.html#os.register_at_fork"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::spawnl}}({{c3::mode}}, {{c4::path}}, ...)",
      "Body": "Execute the program path in a new process.",
      "Link": "https://docs.python.org/3/library/os.html#os.spawnl"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::spawnle}}({{c3::mode}}, {{c4::path}}, ..., {{c5::env}})",
      "Body": "Execute the program path in a new process.",
      "Link": "https://docs.python.org/3/library/os.html#os.spawnle"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::spawnlp}}({{c3::mode}}, {{c4::file}}, ...)",
      "Body": "Execute the program path in a new process.",
      "Link": "https://docs.python.org/3/library/os.html#os.spawnlp"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::spawnlpe}}({{c3::mode}}, {{c4::file}}, ..., {{c5::env}})",
      "Body": "Execute the program path in a new process.",
      "Link": "https://docs.python.org/3/library/os.html#os.spawnlpe"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::spawnv}}({{c3::mode}}, {{c4::path}}, {{c5::args}})",
      "Body": "Execute the program path in a new process.",
      "Link": "https://docs.python.org/3/library/os.html#os.spawnv"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::spawnve}}({{c3::mode}}, {{c4::path}}, {{c5::args}}, {{c6::env}})",
      "Body": "Execute the program path in a new process.",
      "Link": "https://docs.python.org/3/library/os.html#os.spawnve"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::spawnvp}}({{c3::mode}}, {{c4::file}}, {{c5::args}})",
      "Body": "Execute the program path in a new process.",
      "Link": "https://docs.python.org/3/library/os.html#os.spawnvp"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::spawnvpe}}({{c3::mode}}, {{c4::file}}, {{c5::args}}, {{c6::env}})",
      "Body": "Execute the program path in a new process.",
      "Link": "https://docs.python.org/3/library/os.html#os.spawnvpe"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::P_NOWAIT}}",
      "Body": "Possible values for the mode parameter to the spawn* family of functions.  If either of these values is given, the spawn*() functions will return as soon as the new process has been created, with the process id as the return value.",
      "Link": "https://docs.python.org/3/library/os.html#os.P_NOWAIT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::P_NOWAITO}}",
      "Body": "Possible values for the mode parameter to the spawn* family of functions.  If either of these values is given, the spawn*() functions will return as soon as the new process has been created, with the process id as the return value.",
      "Link": "https://docs.python.org/3/library/os.html#os.P_NOWAITO"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::P_WAIT}}",
      "Body": "Possible value for the mode parameter to the spawn* family of functions.  If this is given as mode, the spawn*() functions will not return until the new process has run to completion and will return the exit code of the process the run is successful, or -signal if a signal kills the process.",
      "Link": "https://docs.python.org/3/library/os.html#os.P_WAIT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::P_DETACH}}",
      "Body": "Possible values for the mode parameter to the spawn* family of functions.  These are less portable than those listed above. P_DETACH is similar to P_NOWAIT, but the new process is detached from the console of the calling process. If P_OVERLAY is used, the current process will be replaced; the spawn* function will not return.",
      "Link": "https://docs.python.org/3/library/os.html#os.P_DETACH"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::P_OVERLAY}}",
      "Body": "Possible values for the mode parameter to the spawn* family of functions.  These are less portable than those listed above. P_DETACH is similar to P_NOWAIT, but the new process is detached from the console of the calling process. If P_OVERLAY is used, the current process will be replaced; the spawn* function will not return.",
      "Link": "https://docs.python.org/3/library/os.html#os.P_OVERLAY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::startfile}}({{c3::path}}[, {{c4::operation}}])",
      "Body": "Start a file with its associated application.",
      "Link": "https://docs.python.org/3/library/os.html#os.startfile"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::system}}({{c3::command}})",
      "Body": "Execute the command (a string) in a subshell.  This is implemented by calling the Standard C function system(), and has the same limitations. Changes to sys.stdin, etc. are not reflected in the environment of the executed command. If command generates any output, it will be sent to the interpreter standard output stream.",
      "Link": "https://docs.python.org/3/library/os.html#os.system"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::times}}()",
      "Body": "Returns the current global process times. The return value is an object with five attributes:",
      "Link": "https://docs.python.org/3/library/os.html#os.times"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::wait}}()",
      "Body": "Wait for completion of a child process, and return a tuple containing its pid and exit status indication: a 16-bit number, whose low byte is the signal number that killed the process, and whose high byte is the exit status (if the signal number is zero); the high bit of the low byte is set if a core file was produced.",
      "Link": "https://docs.python.org/3/library/os.html#os.wait"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::waitid}}({{c3::idtype}}, {{c4::id}}, {{c5::options}})",
      "Body": "Wait for the completion of one or more child processes. idtype can be P_PID, P_PGID or P_ALL. id specifies the pid to wait on. options is constructed from the ORing of one or more of WEXITED, WSTOPPED or WCONTINUED and additionally may be ORed with WNOHANG or WNOWAIT. The return value is an object representing the data contained in the siginfo_t structure, namely: si_pid, si_uid, si_signo, si_status, si_code or None if WNOHANG is specified and there are no children in a waitable state.",
      "Link": "https://docs.python.org/3/library/os.html#os.waitid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::P_PID}}",
      "Body": "These are the possible values for idtype in waitid(). They affect how id is interpreted.",
      "Link": "https://docs.python.org/3/library/os.html#os.P_PID"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::P_PGID}}",
      "Body": "These are the possible values for idtype in waitid(). They affect how id is interpreted.",
      "Link": "https://docs.python.org/3/library/os.html#os.P_PGID"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::P_ALL}}",
      "Body": "These are the possible values for idtype in waitid(). They affect how id is interpreted.",
      "Link": "https://docs.python.org/3/library/os.html#os.P_ALL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WEXITED}}",
      "Body": "Flags that can be used in options in waitid() that specify what child signal to wait for.",
      "Link": "https://docs.python.org/3/library/os.html#os.WEXITED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WSTOPPED}}",
      "Body": "Flags that can be used in options in waitid() that specify what child signal to wait for.",
      "Link": "https://docs.python.org/3/library/os.html#os.WSTOPPED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WNOWAIT}}",
      "Body": "Flags that can be used in options in waitid() that specify what child signal to wait for.",
      "Link": "https://docs.python.org/3/library/os.html#os.WNOWAIT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::CLD_EXITED}}",
      "Body": "These are the possible values for si_code in the result returned by waitid().",
      "Link": "https://docs.python.org/3/library/os.html#os.CLD_EXITED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::CLD_DUMPED}}",
      "Body": "These are the possible values for si_code in the result returned by waitid().",
      "Link": "https://docs.python.org/3/library/os.html#os.CLD_DUMPED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::CLD_TRAPPED}}",
      "Body": "These are the possible values for si_code in the result returned by waitid().",
      "Link": "https://docs.python.org/3/library/os.html#os.CLD_TRAPPED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::CLD_CONTINUED}}",
      "Body": "These are the possible values for si_code in the result returned by waitid().",
      "Link": "https://docs.python.org/3/library/os.html#os.CLD_CONTINUED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::waitpid}}({{c3::pid}}, {{c4::options}})",
      "Body": "The details of this function differ on Unix and Windows.",
      "Link": "https://docs.python.org/3/library/os.html#os.waitpid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::wait}}3({{c3::options}})",
      "Body": "Similar to waitpid(), except no process id argument is given and a 3-element tuple containing the child's process id, exit status indication, and resource usage information is returned.  Refer to resource.getrusage() for details on resource usage information.  The option argument is the same as that provided to waitpid() and wait4().",
      "Link": "https://docs.python.org/3/library/os.html#os.wait3"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::wait}}4({{c3::pid}}, {{c4::options}})",
      "Body": "Similar to waitpid(), except a 3-element tuple, containing the child's process id, exit status indication, and resource usage information is returned. Refer to resource.getrusage() for details on resource usage information.  The arguments to wait4() are the same as those provided to waitpid().",
      "Link": "https://docs.python.org/3/library/os.html#os.wait4"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WNOHANG}}",
      "Body": "The option for waitpid() to return immediately if no child process status is available immediately. The function returns (0, 0) in this case.",
      "Link": "https://docs.python.org/3/library/os.html#os.WNOHANG"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WCONTINUED}}",
      "Body": "This option causes child processes to be reported if they have been continued from a job control stop since their status was last reported.",
      "Link": "https://docs.python.org/3/library/os.html#os.WCONTINUED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WUNTRACED}}",
      "Body": "This option causes child processes to be reported if they have been stopped but their current state has not been reported since they were stopped.",
      "Link": "https://docs.python.org/3/library/os.html#os.WUNTRACED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WCOREDUMP}}({{c3::status}})",
      "Body": "Return True if a core dump was generated for the process, otherwise return False.",
      "Link": "https://docs.python.org/3/library/os.html#os.WCOREDUMP"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WIFCONTINUED}}({{c3::status}})",
      "Body": "Return True if the process has been continued from a job control stop, otherwise return False.",
      "Link": "https://docs.python.org/3/library/os.html#os.WIFCONTINUED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WIFSTOPPED}}({{c3::status}})",
      "Body": "Return True if the process has been stopped, otherwise return False.",
      "Link": "https://docs.python.org/3/library/os.html#os.WIFSTOPPED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WIFSIGNALED}}({{c3::status}})",
      "Body": "Return True if the process exited due to a signal, otherwise return False.",
      "Link": "https://docs.python.org/3/library/os.html#os.WIFSIGNALED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WIFEXITED}}({{c3::status}})",
      "Body": "Return True if the process exited using the exit(2) system call, otherwise return False.",
      "Link": "https://docs.python.org/3/library/os.html#os.WIFEXITED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WEXITSTATUS}}({{c3::status}})",
      "Body": "If WIFEXITED(status) is true, return the integer parameter to the exit(2) system call.  Otherwise, the return value is meaningless.",
      "Link": "https://docs.python.org/3/library/os.html#os.WEXITSTATUS"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WSTOPSIG}}({{c3::status}})",
      "Body": "Return the signal which caused the process to stop.",
      "Link": "https://docs.python.org/3/library/os.html#os.WSTOPSIG"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::WTERMSIG}}({{c3::status}})",
      "Body": "Return the signal which caused the process to exit.",
      "Link": "https://docs.python.org/3/library/os.html#os.WTERMSIG"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::SCHED_OTHER}}",
      "Body": "The default scheduling policy.",
      "Link": "https://docs.python.org/3/library/os.html#os.SCHED_OTHER"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::SCHED_BATCH}}",
      "Body": "Scheduling policy for CPU-intensive processes that tries to preserve interactivity on the rest of the computer.",
      "Link": "https://docs.python.org/3/library/os.html#os.SCHED_BATCH"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::SCHED_IDLE}}",
      "Body": "Scheduling policy for extremely low priority background tasks.",
      "Link": "https://docs.python.org/3/library/os.html#os.SCHED_IDLE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::SCHED_SPORADIC}}",
      "Body": "Scheduling policy for sporadic server programs.",
      "Link": "https://docs.python.org/3/library/os.html#os.SCHED_SPORADIC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::SCHED_FIFO}}",
      "Body": "A First In First Out scheduling policy.",
      "Link": "https://docs.python.org/3/library/os.html#os.SCHED_FIFO"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::SCHED_RR}}",
      "Body": "A round-robin scheduling policy.",
      "Link": "https://docs.python.org/3/library/os.html#os.SCHED_RR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::SCHED_RESET_ON_FORK}}",
      "Body": "This flag can be OR'ed with any other scheduling policy. When a process with this flag set forks, its child's scheduling policy and priority are reset to the default.",
      "Link": "https://docs.python.org/3/library/os.html#os.SCHED_RESET_ON_FORK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::os}}.{{c3::sched_param}}({{c4::sched_priority}})",
      "Body": "This class represents tunable scheduling parameters used in sched_setparam(), sched_setscheduler(), and sched_getparam(). It is immutable.",
      "Link": "https://docs.python.org/3/library/os.html#os.sched_param"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sched_param}}.{{c3::sched_priority}}",
      "Body": "The scheduling priority for a scheduling policy.",
      "Link": "https://docs.python.org/3/library/os.html#os.sched_param.sched_priority"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sched_get_priority_min}}({{c3::policy}})",
      "Body": "Get the minimum priority value for policy. policy is one of the scheduling policy constants above.",
      "Link": "https://docs.python.org/3/library/os.html#os.sched_get_priority_min"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sched_get_priority_max}}({{c3::policy}})",
      "Body": "Get the maximum priority value for policy. policy is one of the scheduling policy constants above.",
      "Link": "https://docs.python.org/3/library/os.html#os.sched_get_priority_max"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sched_setscheduler}}({{c3::pid}}, {{c4::policy}}, {{c5::param}})",
      "Body": "Set the scheduling policy for the process with PID pid. A pid of 0 means the calling process. policy is one of the scheduling policy constants above. param is a sched_param instance.",
      "Link": "https://docs.python.org/3/library/os.html#os.sched_setscheduler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sched_getscheduler}}({{c3::pid}})",
      "Body": "Return the scheduling policy for the process with PID pid. A pid of 0 means the calling process. The result is one of the scheduling policy constants above.",
      "Link": "https://docs.python.org/3/library/os.html#os.sched_getscheduler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sched_setparam}}({{c3::pid}}, {{c4::param}})",
      "Body": "Set a scheduling parameters for the process with PID pid. A pid of 0 means the calling process. param is a sched_param instance.",
      "Link": "https://docs.python.org/3/library/os.html#os.sched_setparam"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sched_getparam}}({{c3::pid}})",
      "Body": "Return the scheduling parameters as a sched_param instance for the process with PID pid. A pid of 0 means the calling process.",
      "Link": "https://docs.python.org/3/library/os.html#os.sched_getparam"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sched_rr_get_interval}}({{c3::pid}})",
      "Body": "Return the round-robin quantum in seconds for the process with PID pid. A pid of 0 means the calling process.",
      "Link": "https://docs.python.org/3/library/os.html#os.sched_rr_get_interval"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sched_yield}}()",
      "Body": "Voluntarily relinquish the CPU.",
      "Link": "https://docs.python.org/3/library/os.html#os.sched_yield"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sched_setaffinity}}({{c3::pid}}, {{c4::mask}})",
      "Body": "Restrict the process with PID pid (or the current process if zero) to a set of CPUs.  mask is an iterable of integers representing the set of CPUs to which the process should be restricted.",
      "Link": "https://docs.python.org/3/library/os.html#os.sched_setaffinity"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sched_getaffinity}}({{c3::pid}})",
      "Body": "Return the set of CPUs the process with PID pid (or the current process if zero) is restricted to.",
      "Link": "https://docs.python.org/3/library/os.html#os.sched_getaffinity"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::confstr}}({{c3::name}})",
      "Body": "Return string-valued system configuration values. name specifies the configuration value to retrieve; it may be a string which is the name of a defined system value; these names are specified in a number of standards (POSIX, Unix 95, Unix 98, and others).  Some platforms define additional names as well. The names known to the host operating system are given as the keys of the confstr_names dictionary.  For configuration variables not included in that mapping, passing an integer for name is also accepted.",
      "Link": "https://docs.python.org/3/library/os.html#os.confstr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::confstr_names}}",
      "Body": "Dictionary mapping names accepted by confstr() to the integer values defined for those names by the host operating system. This can be used to determine the set of names known to the system.",
      "Link": "https://docs.python.org/3/library/os.html#os.confstr_names"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::cpu_count}}()",
      "Body": "Return the number of CPUs in the system. Returns None if undetermined.",
      "Link": "https://docs.python.org/3/library/os.html#os.cpu_count"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getloadavg}}()",
      "Body": "Return the number of processes in the system run queue averaged over the last 1, 5, and 15 minutes or raises OSError if the load average was unobtainable.",
      "Link": "https://docs.python.org/3/library/os.html#os.getloadavg"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sysconf}}({{c3::name}})",
      "Body": "Return integer-valued system configuration values. If the configuration value specified by name isn't defined, -1 is returned.  The comments regarding the name parameter for confstr() apply here as well; the dictionary that provides information on the known names is given by sysconf_names.",
      "Link": "https://docs.python.org/3/library/os.html#os.sysconf"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sysconf_names}}",
      "Body": "Dictionary mapping names accepted by sysconf() to the integer values defined for those names by the host operating system. This can be used to determine the set of names known to the system.",
      "Link": "https://docs.python.org/3/library/os.html#os.sysconf_names"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::curdir}}",
      "Body": "The constant string used by the operating system to refer to the current directory. This is '.' for Windows and POSIX. Also available via os.path.",
      "Link": "https://docs.python.org/3/library/os.html#os.curdir"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::pardir}}",
      "Body": "The constant string used by the operating system to refer to the parent directory. This is '..' for Windows and POSIX. Also available via os.path.",
      "Link": "https://docs.python.org/3/library/os.html#os.pardir"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::sep}}",
      "Body": "The character used by the operating system to separate pathname components. This is '/' for POSIX and '\\\\' for Windows.  Note that knowing this is not sufficient to be able to parse or concatenate pathnames  use os.path.split() and os.path.join()  but it is occasionally useful. Also available via os.path.",
      "Link": "https://docs.python.org/3/library/os.html#os.sep"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::altsep}}",
      "Body": "An alternative character used by the operating system to separate pathname components, or None if only one separator character exists.  This is set to '/' on Windows systems where sep is a backslash. Also available via os.path.",
      "Link": "https://docs.python.org/3/library/os.html#os.altsep"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::extsep}}",
      "Body": "The character which separates the base filename from the extension; for example, the '.' in os.py. Also available via os.path.",
      "Link": "https://docs.python.org/3/library/os.html#os.extsep"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::pathsep}}",
      "Body": "The character conventionally used by the operating system to separate search path components (as in PATH), such as ':' for POSIX or ';' for Windows. Also available via os.path.",
      "Link": "https://docs.python.org/3/library/os.html#os.pathsep"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::defpath}}",
      "Body": "The default search path used by exec*p* and spawn*p* if the environment doesn't have a 'PATH' key. Also available via os.path.",
      "Link": "https://docs.python.org/3/library/os.html#os.defpath"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::linesep}}",
      "Body": "The string used to separate (or, rather, terminate) lines on the current platform.  This may be a single character, such as '\\n' for POSIX, or multiple characters, for example, '\\r\\n' for Windows. Do not use os.linesep as a line terminator when writing files opened in text mode (the default); use a single '\\n' instead, on all platforms.",
      "Link": "https://docs.python.org/3/library/os.html#os.linesep"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::devnull}}",
      "Body": "The file path of the null device. For example: '/dev/null' for POSIX, 'nul' for Windows.  Also available via os.path.",
      "Link": "https://docs.python.org/3/library/os.html#os.devnull"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::RTLD_LAZY}}",
      "Body": "Flags for use with the setdlopenflags() and getdlopenflags() functions.  See the Unix manual page dlopen(3) for what the different flags mean.",
      "Link": "https://docs.python.org/3/library/os.html#os.RTLD_LAZY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::RTLD_NOW}}",
      "Body": "Flags for use with the setdlopenflags() and getdlopenflags() functions.  See the Unix manual page dlopen(3) for what the different flags mean.",
      "Link": "https://docs.python.org/3/library/os.html#os.RTLD_NOW"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::RTLD_GLOBAL}}",
      "Body": "Flags for use with the setdlopenflags() and getdlopenflags() functions.  See the Unix manual page dlopen(3) for what the different flags mean.",
      "Link": "https://docs.python.org/3/library/os.html#os.RTLD_GLOBAL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::RTLD_LOCAL}}",
      "Body": "Flags for use with the setdlopenflags() and getdlopenflags() functions.  See the Unix manual page dlopen(3) for what the different flags mean.",
      "Link": "https://docs.python.org/3/library/os.html#os.RTLD_LOCAL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::RTLD_NODELETE}}",
      "Body": "Flags for use with the setdlopenflags() and getdlopenflags() functions.  See the Unix manual page dlopen(3) for what the different flags mean.",
      "Link": "https://docs.python.org/3/library/os.html#os.RTLD_NODELETE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::RTLD_NOLOAD}}",
      "Body": "Flags for use with the setdlopenflags() and getdlopenflags() functions.  See the Unix manual page dlopen(3) for what the different flags mean.",
      "Link": "https://docs.python.org/3/library/os.html#os.RTLD_NOLOAD"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::RTLD_DEEPBIND}}",
      "Body": "Flags for use with the setdlopenflags() and getdlopenflags() functions.  See the Unix manual page dlopen(3) for what the different flags mean.",
      "Link": "https://docs.python.org/3/library/os.html#os.RTLD_DEEPBIND"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::getrandom}}({{c3::size}}, {{c4::flags}}=0)",
      "Body": "Get up to size random bytes. The function can return less bytes than requested.",
      "Link": "https://docs.python.org/3/library/os.html#os.getrandom"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::urandom}}({{c3::size}})",
      "Body": "Return a string of size random bytes suitable for cryptographic use.",
      "Link": "https://docs.python.org/3/library/os.html#os.urandom"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::GRND_NONBLOCK}}",
      "Body": "By  default, when reading from /dev/random, getrandom() blocks if no random bytes are available, and when reading from /dev/urandom, it blocks if the entropy pool has not yet been initialized.",
      "Link": "https://docs.python.org/3/library/os.html#os.GRND_NONBLOCK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::os}}.{{c2::GRND_RANDOM}}",
      "Body": "If  this  bit  is  set,  then  random bytes are drawn from the /dev/random pool instead of the /dev/urandom pool.",
      "Link": "https://docs.python.org/3/library/os.html#os.GRND_RANDOM"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::DEFAULT_BUFFER_SIZE}}",
      "Body": "An int containing the default buffer size used by the module's buffered I/O classes.  open() uses the file's blksize (as obtained by os.stat()) if possible.",
      "Link": "https://docs.python.org/3/library/io.html#io.DEFAULT_BUFFER_SIZE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::open}}({{c3::file}}, {{c4::mode}}='{{c5::r}}', {{c6::buffering}}=-1, {{c7::encoding}}={{c8::None}}, {{c9::errors}}={{c10::None}}, {{c11::newline}}={{c12::None}}, {{c13::closefd}}={{c14::True}}, {{c15::opener}}={{c16::None}})",
      "Body": "This is an alias for the builtin open() function.",
      "Link": "https://docs.python.org/3/library/io.html#io.open"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "exception",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::exception}} {{c2::io}}.{{c3::BlockingIOError}}",
      "Body": "This is a compatibility alias for the builtin BlockingIOError exception.",
      "Link": "https://docs.python.org/3/library/io.html#io.BlockingIOError"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "exception",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::exception}} {{c2::io}}.{{c3::UnsupportedOperation}}",
      "Body": "An exception inheriting OSError and ValueError that is raised when an unsupported operation is called on a stream.",
      "Link": "https://docs.python.org/3/library/io.html#io.UnsupportedOperation"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::io}}.{{c3::IOBase}}",
      "Body": "The abstract base class for all I/O classes, acting on streams of bytes. There is no public constructor.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::close}}()",
      "Body": "Flush and close this stream. This method has no effect if the file is already closed. Once the file is closed, any operation on the file (e.g. reading or writing) will raise a ValueError.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.close"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::closed}}",
      "Body": "True if the stream is closed.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.closed"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::fileno}}()",
      "Body": "Return the underlying file descriptor (an integer) of the stream if it exists.  An OSError is raised if the IO object does not use a file descriptor.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.fileno"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::flush}}()",
      "Body": "Flush the write buffers of the stream if applicable.  This does nothing for read-only and non-blocking streams.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.flush"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::isatty}}()",
      "Body": "Return True if the stream is interactive (i.e., connected to a terminal/tty device).",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.isatty"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::readable}}()",
      "Body": "Return True if the stream can be read from.  If False, read() will raise OSError.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.readable"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::readline}}({{c4::size}}=-1)",
      "Body": "Read and return one line from the stream.  If size is specified, at most size bytes will be read.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.readline"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::readlines}}({{c4::hint}}=-1)",
      "Body": "Read and return a list of lines from the stream.  hint can be specified to control the number of lines read: no more lines will be read if the total size (in bytes/characters) of all lines so far exceeds hint.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.readlines"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::seek}}({{c4::offset}}[, {{c5::whence}}])",
      "Body": "Change the stream position to the given byte offset.  offset is interpreted relative to the position indicated by whence.  The default value for whence is SEEK_SET.  Values for whence are:",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.seek"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::seekable}}()",
      "Body": "Return True if the stream supports random access.  If False, seek(), tell() and truncate() will raise OSError.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.seekable"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::tell}}()",
      "Body": "Return the current stream position.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.tell"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::truncate}}({{c4::size}}={{c5::None}})",
      "Body": "Resize the stream to the given size in bytes (or the current position if size is not specified).  The current stream position isn't changed. This resizing can extend or reduce the current file size.  In case of extension, the contents of the new file area depend on the platform (on most systems, additional bytes are zero-filled).  The new file size is returned.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.truncate"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::writable}}()",
      "Body": "Return True if the stream supports writing.  If False, write() and truncate() will raise OSError.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.writable"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::writelines}}({{c4::lines}})",
      "Body": "Write a list of lines to the stream.  Line separators are not added, so it is usual for each of the lines provided to have a line separator at the end.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.writelines"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::IOBase}}.{{c3::__del__}}()",
      "Body": "Prepare for object destruction. IOBase provides a default implementation of this method that calls the instance's close() method.",
      "Link": "https://docs.python.org/3/library/io.html#io.IOBase.__del__"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::io}}.{{c3::RawIOBase}}",
      "Body": "Base class for raw binary I/O.  It inherits IOBase.  There is no public constructor.",
      "Link": "https://docs.python.org/3/library/io.html#io.RawIOBase"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::RawIOBase}}.{{c3::read}}({{c4::size}}=-1)",
      "Body": "Read up to size bytes from the object and return them.  As a convenience, if size is unspecified or -1, all bytes until EOF are returned. Otherwise, only one system call is ever made.  Fewer than size bytes may be returned if the operating system call returns fewer than size bytes.",
      "Link": "https://docs.python.org/3/library/io.html#io.RawIOBase.read"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::RawIOBase}}.{{c3::readall}}()",
      "Body": "Read and return all the bytes from the stream until EOF, using multiple calls to the stream if necessary.",
      "Link": "https://docs.python.org/3/library/io.html#io.RawIOBase.readall"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::RawIOBase}}.{{c3::readinto}}({{c4::b}})",
      "Body": "Read bytes into a pre-allocated, writable bytes-like object b, and return the number of bytes read.  If the object is in non-blocking mode and no bytes are available, None is returned.",
      "Link": "https://docs.python.org/3/library/io.html#io.RawIOBase.readinto"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::RawIOBase}}.{{c3::write}}({{c4::b}})",
      "Body": "Write the given bytes-like object, b, to the underlying raw stream, and return the number of bytes written.  This can be less than the length of b in bytes, depending on specifics of the underlying raw stream, and especially if it is in non-blocking mode.  None is returned if the raw stream is set not to block and no single byte could be readily written to it.  The caller may release or mutate b after this method returns, so the implementation should only access b during the method call.",
      "Link": "https://docs.python.org/3/library/io.html#io.RawIOBase.write"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::io}}.{{c3::BufferedIOBase}}",
      "Body": "Base class for binary streams that support some kind of buffering. It inherits IOBase. There is no public constructor.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedIOBase"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BufferedIOBase}}.{{c3::raw}}",
      "Body": "The underlying raw stream (a RawIOBase instance) that BufferedIOBase deals with.  This is not part of the BufferedIOBase API and may not exist on some implementations.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedIOBase.raw"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BufferedIOBase}}.{{c3::detach}}()",
      "Body": "Separate the underlying raw stream from the buffer and return it.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedIOBase.detach"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BufferedIOBase}}.{{c3::read}}({{c4::size}}=-1)",
      "Body": "Read and return up to size bytes.  If the argument is omitted, None, or negative, data is read and returned until EOF is reached.  An empty bytes object is returned if the stream is already at EOF.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedIOBase.read"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BufferedIOBase}}.{{c3::read}}1([{{c4::size}}])",
      "Body": "Read and return up to size bytes, with at most one call to the underlying raw stream's read() (or readinto()) method.  This can be useful if you are implementing your own buffering on top of a BufferedIOBase object.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedIOBase.read1"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BufferedIOBase}}.{{c3::readinto}}({{c4::b}})",
      "Body": "Read bytes into a pre-allocated, writable bytes-like object b and return the number of bytes read.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedIOBase.readinto"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BufferedIOBase}}.{{c3::readinto}}1({{c4::b}})",
      "Body": "Read bytes into a pre-allocated, writable bytes-like object b, using at most one call to the underlying raw stream's read() (or readinto()) method. Return the number of bytes read.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedIOBase.readinto1"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BufferedIOBase}}.{{c3::write}}({{c4::b}})",
      "Body": "Write the given bytes-like object, b, and return the number of bytes written (always equal to the length of b in bytes, since if the write fails an OSError will be raised).  Depending on the actual implementation, these bytes may be readily written to the underlying stream, or held in a buffer for performance and latency reasons.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedIOBase.write"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::io}}.{{c3::FileIO}}({{c4::name}}, {{c5::mode}}='{{c6::r}}', {{c7::closefd}}={{c8::True}}, {{c9::opener}}={{c10::None}})",
      "Body": "FileIO represents an OS-level file containing bytes data. It implements the RawIOBase interface (and therefore the IOBase interface, too).",
      "Link": "https://docs.python.org/3/library/io.html#io.FileIO"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::FileIO}}.{{c3::mode}}",
      "Body": "The mode as given in the constructor.",
      "Link": "https://docs.python.org/3/library/io.html#io.FileIO.mode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::FileIO}}.{{c3::name}}",
      "Body": "The file name.  This is the file descriptor of the file when no name is given in the constructor.",
      "Link": "https://docs.python.org/3/library/io.html#io.FileIO.name"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::io}}.{{c3::BytesIO}}([{{c4::initial_bytes}}])",
      "Body": "A stream implementation using an in-memory bytes buffer.  It inherits BufferedIOBase.  The buffer is discarded when the close() method is called.",
      "Link": "https://docs.python.org/3/library/io.html#io.BytesIO"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BytesIO}}.{{c3::getbuffer}}()",
      "Body": "Return a readable and writable view over the contents of the buffer without copying them.  Also, mutating the view will transparently update the contents of the buffer:",
      "Link": "https://docs.python.org/3/library/io.html#io.BytesIO.getbuffer"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BytesIO}}.{{c3::getvalue}}()",
      "Body": "Return bytes containing the entire contents of the buffer.",
      "Link": "https://docs.python.org/3/library/io.html#io.BytesIO.getvalue"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BytesIO}}.{{c3::read}}1([{{c4::size}}])",
      "Body": "In BytesIO, this is the same as read().",
      "Link": "https://docs.python.org/3/library/io.html#io.BytesIO.read1"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BytesIO}}.{{c3::readinto}}1({{c4::b}})",
      "Body": "In BytesIO, this is the same as readinto().",
      "Link": "https://docs.python.org/3/library/io.html#io.BytesIO.readinto1"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::io}}.{{c3::BufferedReader}}({{c4::raw}}, {{c5::buffer_size}}={{c6::DEFAULT_BUFFER_SIZE}})",
      "Body": "A buffer providing higher-level access to a readable, sequential RawIOBase object.  It inherits BufferedIOBase. When reading data from this object, a larger amount of data may be requested from the underlying raw stream, and kept in an internal buffer. The buffered data can then be returned directly on subsequent reads.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedReader"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BufferedReader}}.{{c3::peek}}([{{c4::size}}])",
      "Body": "Return bytes from the stream without advancing the position.  At most one single read on the raw stream is done to satisfy the call. The number of bytes returned may be less or more than requested.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedReader.peek"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BufferedReader}}.{{c3::read}}([{{c4::size}}])",
      "Body": "Read and return size bytes, or if size is not given or negative, until EOF or if the read call would block in non-blocking mode.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedReader.read"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BufferedReader}}.{{c3::read}}1([{{c4::size}}])",
      "Body": "Read and return up to size bytes with only one call on the raw stream. If at least one byte is buffered, only buffered bytes are returned. Otherwise, one raw stream read call is made.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedReader.read1"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::io}}.{{c3::BufferedWriter}}({{c4::raw}}, {{c5::buffer_size}}={{c6::DEFAULT_BUFFER_SIZE}})",
      "Body": "A buffer providing higher-level access to a writeable, sequential RawIOBase object.  It inherits BufferedIOBase. When writing to this object, data is normally placed into an internal buffer.  The buffer will be written out to the underlying RawIOBase object under various conditions, including:",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedWriter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BufferedWriter}}.{{c3::flush}}()",
      "Body": "Force bytes held in the buffer into the raw stream.  A BlockingIOError should be raised if the raw stream blocks.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedWriter.flush"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::BufferedWriter}}.{{c3::write}}({{c4::b}})",
      "Body": "Write the bytes-like object, b, and return the number of bytes written.  When in non-blocking mode, a BlockingIOError is raised if the buffer needs to be written out but the raw stream blocks.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedWriter.write"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::io}}.{{c3::BufferedRandom}}({{c4::raw}}, {{c5::buffer_size}}={{c6::DEFAULT_BUFFER_SIZE}})",
      "Body": "A buffered interface to random access streams.  It inherits BufferedReader and BufferedWriter, and further supports seek() and tell() functionality.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedRandom"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::io}}.{{c3::BufferedRWPair}}({{c4::reader}}, {{c5::writer}}, {{c6::buffer_size}}={{c7::DEFAULT_BUFFER_SIZE}})",
      "Body": "A buffered I/O object combining two unidirectional RawIOBase objects  one readable, the other writeable  into a single bidirectional endpoint.  It inherits BufferedIOBase.",
      "Link": "https://docs.python.org/3/library/io.html#io.BufferedRWPair"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::io}}.{{c3::TextIOBase}}",
      "Body": "Base class for text streams.  This class provides a character and line based interface to stream I/O.  There is no readinto() method because Python's character strings are immutable.  It inherits IOBase. There is no public constructor.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOBase"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::TextIOBase}}.{{c3::encoding}}",
      "Body": "The name of the encoding used to decode the stream's bytes into strings, and to encode strings into bytes.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOBase.encoding"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::TextIOBase}}.{{c3::errors}}",
      "Body": "The error setting of the decoder or encoder.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOBase.errors"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::TextIOBase}}.{{c3::newlines}}",
      "Body": "A string, a tuple of strings, or None, indicating the newlines translated so far.  Depending on the implementation and the initial constructor flags, this may not be available.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOBase.newlines"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::TextIOBase}}.{{c3::buffer}}",
      "Body": "The underlying binary buffer (a BufferedIOBase instance) that TextIOBase deals with.  This is not part of the TextIOBase API and may not exist in some implementations.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOBase.buffer"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::TextIOBase}}.{{c3::detach}}()",
      "Body": "Separate the underlying binary buffer from the TextIOBase and return it.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOBase.detach"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::TextIOBase}}.{{c3::read}}({{c4::size}}=-1)",
      "Body": "Read and return at most size characters from the stream as a single str.  If size is negative or None, reads until EOF.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOBase.read"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::TextIOBase}}.{{c3::readline}}({{c4::size}}=-1)",
      "Body": "Read until newline or EOF and return a single str.  If the stream is already at EOF, an empty string is returned.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOBase.readline"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::TextIOBase}}.{{c3::seek}}({{c4::offset}}[, {{c5::whence}}])",
      "Body": "Change the stream position to the given offset.  Behaviour depends on the whence parameter.  The default value for whence is SEEK_SET.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOBase.seek"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::TextIOBase}}.{{c3::tell}}()",
      "Body": "Return the current stream position as an opaque number.  The number does not usually represent a number of bytes in the underlying binary storage.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOBase.tell"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::TextIOBase}}.{{c3::write}}({{c4::s}})",
      "Body": "Write the string s to the stream and return the number of characters written.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOBase.write"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::io}}.{{c3::TextIOWrapper}}({{c4::buffer}}, {{c5::encoding}}={{c6::None}}, {{c7::errors}}={{c8::None}}, {{c9::newline}}={{c10::None}}, {{c11::line_buffering}}={{c12::False}}, {{c13::write_through}}={{c14::False}})",
      "Body": "A buffered text stream over a BufferedIOBase binary stream. It inherits TextIOBase.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOWrapper"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::TextIOWrapper}}.{{c3::line_buffering}}",
      "Body": "Whether line buffering is enabled.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOWrapper.line_buffering"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::TextIOWrapper}}.{{c3::write_through}}",
      "Body": "Whether writes are passed immediately to the underlying binary buffer.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOWrapper.write_through"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::TextIOWrapper}}.{{c3::reconfigure}}(*[, {{c4::encoding}}][, {{c5::errors}}][, {{c6::newline}}][,                      {{c7::line_buffering}}][, {{c8::write_through}}])",
      "Body": "Reconfigure this text stream using new settings for encoding, errors, newline, line_buffering and write_through.",
      "Link": "https://docs.python.org/3/library/io.html#io.TextIOWrapper.reconfigure"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::io}}.{{c3::StringIO}}({{c4::initial_value}}='', {{c5::newline}}='\\n')",
      "Body": "An in-memory stream for text I/O.  The text buffer is discarded when the close() method is called.",
      "Link": "https://docs.python.org/3/library/io.html#io.StringIO"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::io}}.{{c2::StringIO}}.{{c3::getvalue}}()",
      "Body": "Return a str containing the entire contents of the buffer. Newlines are decoded as if by read(), although the stream position is not changed.",
      "Link": "https://docs.python.org/3/library/io.html#io.StringIO.getvalue"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::io}}.{{c3::IncrementalNewlineDecoder}}",
      "Body": "A helper codec that decodes newlines for universal newlines mode. It inherits codecs.IncrementalDecoder.",
      "Link": "https://docs.python.org/3/library/io.html#io.IncrementalNewlineDecoder"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::asctime}}([{{c3::t}}])",
      "Body": "Convert a tuple or struct_time representing a time as returned by gmtime() or localtime() to a string of the following form: 'Sun Jun 20 23:21:05 1993'.  If t is not provided, the current time as returned by localtime() is used. Locale information is not used by asctime().",
      "Link": "https://docs.python.org/3/library/time.html#time.asctime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::clock}}()",
      "Body": "On Unix, return the current processor time as a floating point number expressed in seconds.  The precision, and in fact the very definition of the meaning of processor time, depends on that of the C function of the same name.",
      "Link": "https://docs.python.org/3/library/time.html#time.clock"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::pthread_getcpuclockid}}({{c3::thread_id}})",
      "Body": "Return the clk_id of the thread-specific CPU-time clock for the specified thread_id.",
      "Link": "https://docs.python.org/3/library/time.html#time.pthread_getcpuclockid"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::clock_getres}}({{c3::clk_id}})",
      "Body": "Return the resolution (precision) of the specified clock clk_id.  Refer to Clock ID Constants for a list of accepted values for clk_id.",
      "Link": "https://docs.python.org/3/library/time.html#time.clock_getres"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::clock_gettime}}({{c3::clk_id}})  {{c4::float}}",
      "Body": "Return the time of the specified clock clk_id.  Refer to Clock ID Constants for a list of accepted values for clk_id.",
      "Link": "https://docs.python.org/3/library/time.html#time.clock_gettime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::clock_gettime_ns}}({{c3::clk_id}})  {{c4::int}}",
      "Body": "Similar to clock_gettime() but return time as nanoseconds.",
      "Link": "https://docs.python.org/3/library/time.html#time.clock_gettime_ns"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::clock_settime}}({{c3::clk_id}}, {{c4::time}}: {{c5::float}})",
      "Body": "Set the time of the specified clock clk_id.  Currently, CLOCK_REALTIME is the only accepted value for clk_id.",
      "Link": "https://docs.python.org/3/library/time.html#time.clock_settime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::clock_settime_ns}}({{c3::clk_id}}, {{c4::time}}: {{c5::int}})",
      "Body": "Similar to clock_settime() but set time with nanoseconds.",
      "Link": "https://docs.python.org/3/library/time.html#time.clock_settime_ns"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::ctime}}([{{c3::secs}}])",
      "Body": "Convert a time expressed in seconds since the epoch to a string representing local time. If secs is not provided or None, the current time as returned by time() is used.  ctime(secs) is equivalent to asctime(localtime(secs)). Locale information is not used by ctime().",
      "Link": "https://docs.python.org/3/library/time.html#time.ctime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::get_clock_info}}({{c3::name}})",
      "Body": "Get information on the specified clock as a namespace object. Supported clock names and the corresponding functions to read their value are:",
      "Link": "https://docs.python.org/3/library/time.html#time.get_clock_info"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::gmtime}}([{{c3::secs}}])",
      "Body": "Convert a time expressed in seconds since the epoch to a struct_time in UTC in which the dst flag is always zero.  If secs is not provided or None, the current time as returned by time() is used.  Fractions of a second are ignored.  See above for a description of the struct_time object. See calendar.timegm() for the inverse of this function.",
      "Link": "https://docs.python.org/3/library/time.html#time.gmtime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::localtime}}([{{c3::secs}}])",
      "Body": "Like gmtime() but converts to local time.  If secs is not provided or None, the current time as returned by time() is used.  The dst flag is set to 1 when DST applies to the given time.",
      "Link": "https://docs.python.org/3/library/time.html#time.localtime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::mktime}}({{c3::t}})",
      "Body": "This is the inverse function of localtime().  Its argument is the struct_time or full 9-tuple (since the dst flag is needed; use -1 as the dst flag if it is unknown) which expresses the time in local time, not UTC.  It returns a floating point number, for compatibility with time(). If the input value cannot be represented as a valid time, either OverflowError or ValueError will be raised (which depends on whether the invalid value is caught by or the underlying C libraries). The earliest date for which it can generate a time is platform-dependent.",
      "Link": "https://docs.python.org/3/library/time.html#time.mktime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::monotonic}}()  {{c3::float}}",
      "Body": "Return the value (in fractional seconds) of a monotonic clock, i.e. a clock that cannot go backwards.  The clock is not affected by system clock updates. The reference point of the returned value is undefined, so that only the difference between the results of consecutive calls is valid.",
      "Link": "https://docs.python.org/3/library/time.html#time.monotonic"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::monotonic_ns}}()  {{c3::int}}",
      "Body": "Similar to monotonic(), but return time as nanoseconds.",
      "Link": "https://docs.python.org/3/library/time.html#time.monotonic_ns"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::perf_counter}}()  {{c3::float}}",
      "Body": "Return the value (in fractional seconds) of a performance counter, i.e. a clock with the highest available resolution to measure a short duration.  It does include time elapsed during sleep and is system-wide.  The reference point of the returned value is undefined, so that only the difference between the results of consecutive calls is valid.",
      "Link": "https://docs.python.org/3/library/time.html#time.perf_counter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::perf_counter_ns}}()  {{c3::int}}",
      "Body": "Similar to perf_counter(), but return time as nanoseconds.",
      "Link": "https://docs.python.org/3/library/time.html#time.perf_counter_ns"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::process_time}}()  {{c3::float}}",
      "Body": "Return the value (in fractional seconds) of the sum of the system and user CPU time of the current process.  It does not include time elapsed during sleep.  It is process-wide by definition.  The reference point of the returned value is undefined, so that only the difference between the results of consecutive calls is valid.",
      "Link": "https://docs.python.org/3/library/time.html#time.process_time"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::process_time_ns}}()  {{c3::int}}",
      "Body": "Similar to process_time() but return time as nanoseconds.",
      "Link": "https://docs.python.org/3/library/time.html#time.process_time_ns"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::sleep}}({{c3::secs}})",
      "Body": "Suspend execution of the calling thread for the given number of seconds. The argument may be a floating point number to indicate a more precise sleep time. The actual suspension time may be less than that requested because any caught signal will terminate the sleep() following execution of that signal's catching routine.  Also, the suspension time may be longer than requested by an arbitrary amount because of the scheduling of other activity in the system.",
      "Link": "https://docs.python.org/3/library/time.html#time.sleep"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::strftime}}({{c3::format}}[, {{c4::t}}])",
      "Body": "Convert a tuple or struct_time representing a time as returned by gmtime() or localtime() to a string as specified by the format argument.  If t is not provided, the current time as returned by localtime() is used.  format must be a string.  ValueError is raised if any field in t is outside of the allowed range.",
      "Link": "https://docs.python.org/3/library/time.html#time.strftime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::strptime}}({{c3::string}}[, {{c4::format}}])",
      "Body": "Parse a string representing a time according to a format.  The return value is a struct_time as returned by gmtime() or localtime().",
      "Link": "https://docs.python.org/3/library/time.html#time.strptime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::time}}.{{c3::struct_time}}",
      "Body": "The type of the time value sequence returned by gmtime(), localtime(), and strptime().  It is an object with a named tuple interface: values can be accessed by index and by attribute name.  The following values are present:",
      "Link": "https://docs.python.org/3/library/time.html#time.struct_time"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::time}}()  {{c3::float}}",
      "Body": "Return the time in seconds since the epoch as a floating point number. The specific date of the epoch and the handling of leap seconds is platform dependent. On Windows and most Unix systems, the epoch is January 1, 1970, 00:00:00 (UTC) and leap seconds are not counted towards the time in seconds since the epoch. This is commonly referred to as Unix time. To find out what the epoch is on a given platform, look at gmtime(0).",
      "Link": "https://docs.python.org/3/library/time.html#time.time"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::thread_time}}()  {{c3::float}}",
      "Body": "Return the value (in fractional seconds) of the sum of the system and user CPU time of the current thread.  It does not include time elapsed during sleep.  It is thread-specific by definition.  The reference point of the returned value is undefined, so that only the difference between the results of consecutive calls in the same thread is valid.",
      "Link": "https://docs.python.org/3/library/time.html#time.thread_time"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::thread_time_ns}}()  {{c3::int}}",
      "Body": "Similar to thread_time() but return time as nanoseconds.",
      "Link": "https://docs.python.org/3/library/time.html#time.thread_time_ns"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::time_ns}}()  {{c3::int}}",
      "Body": "Similar to time() but returns time as an integer number of nanoseconds since the epoch.",
      "Link": "https://docs.python.org/3/library/time.html#time.time_ns"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::tzset}}()",
      "Body": "Reset the time conversion rules used by the library routines. The environment variable TZ specifies how this is done. It will also set the variables tzname (from the TZ environment variable), timezone (non-DST seconds West of UTC), altzone (DST seconds west of UTC) and daylight (to 0 if this timezone does not have any daylight saving time rules, or to nonzero if there is a time, past, present or future when daylight saving time applies).",
      "Link": "https://docs.python.org/3/library/time.html#time.tzset"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "docutils",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::std}} {{c2::and}} {{c3::dst}}",
      "Body": "Indicates when to change to and back from DST. The format of the start and end dates are one of the following:",
      "Link": "https://docs.python.org/3/library/time.html#functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "docutils",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::offset}}",
      "Body": "Indicates when to change to and back from DST. The format of the start and end dates are one of the following:",
      "Link": "https://docs.python.org/3/library/time.html#functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "docutils",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::start}}[/{{c2::time}}], {{c3::end}}[/{{c4::time}}]",
      "Body": "Indicates when to change to and back from DST. The format of the start and end dates are one of the following:",
      "Link": "https://docs.python.org/3/library/time.html#functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::CLOCK_BOOTTIME}}",
      "Body": "Identical to CLOCK_MONOTONIC, except it also includes any time that the system is suspended.",
      "Link": "https://docs.python.org/3/library/time.html#time.CLOCK_BOOTTIME"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::CLOCK_HIGHRES}}",
      "Body": "The Solaris OS has a CLOCK_HIGHRES timer that attempts to use an optimal hardware source, and may give close to nanosecond resolution. CLOCK_HIGHRES is the nonadjustable, high-resolution clock.",
      "Link": "https://docs.python.org/3/library/time.html#time.CLOCK_HIGHRES"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::CLOCK_MONOTONIC}}",
      "Body": "Clock that cannot be set and represents monotonic time since some unspecified starting point.",
      "Link": "https://docs.python.org/3/library/time.html#time.CLOCK_MONOTONIC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::CLOCK_MONOTONIC_RAW}}",
      "Body": "Similar to CLOCK_MONOTONIC, but provides access to a raw hardware-based time that is not subject to NTP adjustments.",
      "Link": "https://docs.python.org/3/library/time.html#time.CLOCK_MONOTONIC_RAW"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::CLOCK_PROCESS_CPUTIME_ID}}",
      "Body": "High-resolution per-process timer from the CPU.",
      "Link": "https://docs.python.org/3/library/time.html#time.CLOCK_PROCESS_CPUTIME_ID"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::CLOCK_PROF}}",
      "Body": "High-resolution per-process timer from the CPU.",
      "Link": "https://docs.python.org/3/library/time.html#time.CLOCK_PROF"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::CLOCK_THREAD_CPUTIME_ID}}",
      "Body": "Thread-specific CPU-time clock.",
      "Link": "https://docs.python.org/3/library/time.html#time.CLOCK_THREAD_CPUTIME_ID"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::CLOCK_UPTIME}}",
      "Body": "Time whose absolute value is the time the system has been running and not suspended, providing accurate uptime measurement, both absolute and interval.",
      "Link": "https://docs.python.org/3/library/time.html#time.CLOCK_UPTIME"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::CLOCK_REALTIME}}",
      "Body": "System-wide real-time clock.  Setting this clock requires appropriate privileges.",
      "Link": "https://docs.python.org/3/library/time.html#time.CLOCK_REALTIME"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::altzone}}",
      "Body": "The offset of the local DST timezone, in seconds west of UTC, if one is defined. This is negative if the local DST timezone is east of UTC (as in Western Europe, including the UK).  Only use this if daylight is nonzero.  See note below.",
      "Link": "https://docs.python.org/3/library/time.html#time.altzone"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::daylight}}",
      "Body": "Nonzero if a DST timezone is defined.  See note below.",
      "Link": "https://docs.python.org/3/library/time.html#time.daylight"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::timezone}}",
      "Body": "The offset of the local (non-DST) timezone, in seconds west of UTC (negative in most of Western Europe, positive in the US, zero in the UK).  See note below.",
      "Link": "https://docs.python.org/3/library/time.html#time.timezone"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::time}}.{{c2::tzname}}",
      "Body": "A tuple of two strings: the first is the name of the local non-DST timezone, the second is the name of the local DST timezone.  If no DST timezone is defined, the second string should not be used.  See note below.",
      "Link": "https://docs.python.org/3/library/time.html#time.tzname"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::argparse}}.{{c3::ArgumentParser}}({{c4::prog}}={{c5::None}}, {{c6::usage}}={{c7::None}}, {{c8::description}}={{c9::None}}, {{c10::epilog}}={{c11::None}}, {{c12::parents}}=[], {{c13::formatter_class}}={{c14::argparse}}.{{c15::HelpFormatter}}, {{c16::prefix_chars}}='-', {{c17::fromfile_prefix_chars}}={{c18::None}}, {{c19::argument_default}}={{c20::None}}, {{c21::conflict_handler}}='{{c22::error}}', {{c23::add_help}}={{c24::True}}, {{c25::allow_abbrev}}={{c26::True}})",
      "Body": "Create a new ArgumentParser object. All parameters should be passed as keyword arguments. Each parameter has its own more detailed description below, but in short they are:",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::add_argument}}({{c3::name}} {{c4::or}} {{c5::flags}}...[, {{c6::action}}][, {{c7::nargs}}][, {{c8::const}}][, {{c9::default}}][, {{c10::type}}][, {{c11::choices}}][, {{c12::required}}][, {{c13::help}}][, {{c14::metavar}}][, {{c15::dest}}])",
      "Body": "Define how a single command-line argument should be parsed.  Each parameter has its own more detailed description below, but in short they are:",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_argument"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::parse_args}}({{c3::args}}={{c4::None}}, {{c5::namespace}}={{c6::None}})",
      "Body": "Convert argument strings to objects and assign them as attributes of the namespace.  Return the populated namespace.",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.parse_args"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::argparse}}.{{c3::Namespace}}",
      "Body": "Simple class used by default by parse_args() to create an object holding attributes and return it.",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.Namespace"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::add_subparsers}}([{{c3::title}}][, {{c4::description}}][, {{c5::prog}}][, {{c6::parser_class}}][, {{c7::action}}][, {{c8::option_string}}][, {{c9::dest}}][, {{c10::required}}][, {{c11::help}}][, {{c12::metavar}}])",
      "Body": "Many programs split up their functionality into a number of sub-commands, for example, the svn program can invoke sub-commands like svn checkout, svn update, and svn commit.  Splitting up functionality this way can be a particularly good idea when a program performs several different functions which require different kinds of command-line arguments. ArgumentParser supports the creation of such sub-commands with the add_subparsers() method.  The add_subparsers() method is normally called with no arguments and returns a special action object.  This object has a single method, add_parser(), which takes a command name and any ArgumentParser constructor arguments, and returns an ArgumentParser object that can be modified as usual.",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_subparsers"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::argparse}}.{{c3::FileType}}({{c4::mode}}='{{c5::r}}', {{c6::bufsize}}=-1, {{c7::encoding}}={{c8::None}}, {{c9::errors}}={{c10::None}})",
      "Body": "The FileType factory creates objects that can be passed to the type argument of ArgumentParser.add_argument().  Arguments that have FileType objects as their type will open command-line arguments as files with the requested modes, buffer sizes, encodings and error handling (see the open() function for more details):",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.FileType"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::add_argument_group}}({{c3::title}}={{c4::None}}, {{c5::description}}={{c6::None}})",
      "Body": "By default, ArgumentParser groups command-line arguments into positional arguments and optional arguments when displaying help messages. When there is a better conceptual grouping of arguments than this default one, appropriate groups can be created using the add_argument_group() method:",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_argument_group"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::add_mutually_exclusive_group}}({{c3::required}}={{c4::False}})",
      "Body": "Create a mutually exclusive group. argparse will make sure that only one of the arguments in the mutually exclusive group was present on the command line:",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_mutually_exclusive_group"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::set_defaults}}(**kwargs)",
      "Body": "Most of the time, the attributes of the object returned by parse_args() will be fully determined by inspecting the command-line arguments and the argument actions.  set_defaults() allows some additional attributes that are determined without any inspection of the command line to be added:",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.set_defaults"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::get_default}}({{c3::dest}})",
      "Body": "Get the default value for a namespace attribute, as set by either add_argument() or by set_defaults():",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.get_default"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::print_usage}}({{c3::file}}={{c4::None}})",
      "Body": "Print a brief description of how the ArgumentParser should be invoked on the command line.  If file is None, sys.stdout is assumed.",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.print_usage"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::print_help}}({{c3::file}}={{c4::None}})",
      "Body": "Print a help message, including the program usage and information about the arguments registered with the ArgumentParser.  If file is None, sys.stdout is assumed.",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.print_help"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::format_usage}}()",
      "Body": "Return a string containing a brief description of how the ArgumentParser should be invoked on the command line.",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.format_usage"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::format_help}}()",
      "Body": "Return a string containing a help message, including the program usage and information about the arguments registered with the ArgumentParser.",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.format_help"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::convert_arg_line_to_args}}({{c3::arg_line}})",
      "Body": "Arguments that are read from a file (see the fromfile_prefix_chars keyword argument to the ArgumentParser constructor) are read one argument per line. convert_arg_line_to_args() can be overridden for fancier reading.",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.convert_arg_line_to_args"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::exit}}({{c3::status}}=0, {{c4::message}}={{c5::None}})",
      "Body": "This method terminates the program, exiting with the specified status and, if given, it prints a message before that.",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.exit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ArgumentParser}}.{{c2::error}}({{c3::message}})",
      "Body": "This method prints a usage message including the message to the standard error and terminates the program with a status code of 2.",
      "Link": "https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.error"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::getopt}}.{{c2::getopt}}({{c3::args}}, {{c4::shortopts}}, {{c5::longopts}}=[])",
      "Body": "Parses command line options and parameter list.  args is the argument list to be parsed, without the leading reference to the running program. Typically, this means sys.argv[1:]. shortopts is the string of option letters that the script wants to recognize, with options that require an argument followed by a colon (':'; i.e., the same format that Unix getopt() uses).",
      "Link": "https://docs.python.org/3/library/getopt.html#getopt.getopt"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::getopt}}.{{c2::gnu_getopt}}({{c3::args}}, {{c4::shortopts}}, {{c5::longopts}}=[])",
      "Body": "This function works like getopt(), except that GNU style scanning mode is used by default. This means that option and non-option arguments may be intermixed. The getopt() function stops processing options as soon as a non-option argument is encountered.",
      "Link": "https://docs.python.org/3/library/getopt.html#getopt.gnu_getopt"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "exception",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::exception}} {{c2::getopt}}.{{c3::GetoptError}}",
      "Body": "This is raised when an unrecognized option is found in the argument list or when an option requiring an argument is given none. The argument to the exception is a string indicating the cause of the error.  For long options, an argument given to an option which does not require one will also cause this exception to be raised.  The attributes msg and opt give the error message and related option; if there is no specific option to which the exception relates, opt is an empty string.",
      "Link": "https://docs.python.org/3/library/getopt.html#getopt.GetoptError"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "exception",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::exception}} {{c2::getopt}}.{{c3::error}}",
      "Body": "Alias for GetoptError; for backward compatibility.",
      "Link": "https://docs.python.org/3/library/getopt.html#getopt.error"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::Logger}}",
      "Body": "If this attribute evaluates to true, events logged to this logger will be passed to the handlers of higher level (ancestor) loggers, in addition to any handlers attached to this logger. Messages are passed directly to the ancestor loggers' handlers - neither the level nor filters of the ancestor loggers in question are considered.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::propagate}}",
      "Body": "If this attribute evaluates to true, events logged to this logger will be passed to the handlers of higher level (ancestor) loggers, in addition to any handlers attached to this logger. Messages are passed directly to the ancestor loggers' handlers - neither the level nor filters of the ancestor loggers in question are considered.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.propagate"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::setLevel}}({{c4::level}})",
      "Body": "Sets the threshold for this logger to level. Logging messages which are less severe than level will be ignored; logging messages which have severity level or higher will be emitted by whichever handler or handlers service this logger, unless a handler's level has been set to a higher severity level than level.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.setLevel"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::isEnabledFor}}({{c4::lvl}})",
      "Body": "Indicates if a message of severity lvl would be processed by this logger. This method checks first the module-level level set by logging.disable(lvl) and then the logger's effective level as determined by getEffectiveLevel().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.isEnabledFor"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::getEffectiveLevel}}()",
      "Body": "Indicates the effective level for this logger. If a value other than NOTSET has been set using setLevel(), it is returned. Otherwise, the hierarchy is traversed towards the root until a value other than NOTSET is found, and that value is returned. The value returned is an integer, typically one of logging.DEBUG, logging.INFO etc.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.getEffectiveLevel"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::getChild}}({{c4::suffix}})",
      "Body": "Returns a logger which is a descendant to this logger, as determined by the suffix. Thus, logging.getLogger('abc').getChild('def.ghi') would return the same logger as would be returned by logging.getLogger('abc.def.ghi'). This is a convenience method, useful when the parent logger is named using e.g. __name__ rather than a literal string.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.getChild"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::debug}}({{c4::msg}}, *args, **kwargs)",
      "Body": "Logs a message with level DEBUG on this logger. The msg is the message format string, and the args are the arguments which are merged into msg using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.)",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.debug"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::info}}({{c4::msg}}, *args, **kwargs)",
      "Body": "Logs a message with level INFO on this logger. The arguments are interpreted as for debug().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.info"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::warning}}({{c4::msg}}, *args, **kwargs)",
      "Body": "Logs a message with level WARNING on this logger. The arguments are interpreted as for debug().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.warning"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::error}}({{c4::msg}}, *args, **kwargs)",
      "Body": "Logs a message with level ERROR on this logger. The arguments are interpreted as for debug().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.error"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::critical}}({{c4::msg}}, *args, **kwargs)",
      "Body": "Logs a message with level CRITICAL on this logger. The arguments are interpreted as for debug().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.critical"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::log}}({{c4::lvl}}, {{c5::msg}}, *args, **kwargs)",
      "Body": "Logs a message with integer level lvl on this logger. The other arguments are interpreted as for debug().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.log"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::exception}}({{c4::msg}}, *args, **kwargs)",
      "Body": "Logs a message with level ERROR on this logger. The arguments are interpreted as for debug(). Exception info is added to the logging message. This method should only be called from an exception handler.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.exception"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::addFilter}}({{c4::filter}})",
      "Body": "Adds the specified filter filter to this logger.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.addFilter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::removeFilter}}({{c4::filter}})",
      "Body": "Removes the specified filter filter from this logger.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.removeFilter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::filter}}({{c4::record}})",
      "Body": "Applies this logger's filters to the record and returns a true value if the record is to be processed. The filters are consulted in turn, until one of them returns a false value. If none of them return a false value, the record will be processed (passed to handlers). If one returns a false value, no further processing of the record occurs.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.filter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::addHandler}}({{c4::hdlr}})",
      "Body": "Adds the specified handler hdlr to this logger.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.addHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::removeHandler}}({{c4::hdlr}})",
      "Body": "Removes the specified handler hdlr from this logger.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.removeHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::findCaller}}({{c4::stack_info}}={{c5::False}})",
      "Body": "Finds the caller's source filename and line number. Returns the filename, line number, function name and stack information as a 4-element tuple. The stack information is returned as None unless stack_info is True.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.findCaller"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::handle}}({{c4::record}})",
      "Body": "Handles a record by passing it to all handlers associated with this logger and its ancestors (until a false value of propagate is found). This method is used for unpickled records received from a socket, as well as those created locally. Logger-level filtering is applied using filter().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.handle"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::makeRecord}}({{c4::name}}, {{c5::lvl}}, {{c6::fn}}, {{c7::lno}}, {{c8::msg}}, {{c9::args}}, {{c10::exc_info}}, {{c11::func}}={{c12::None}}, {{c13::extra}}={{c14::None}}, {{c15::sinfo}}={{c16::None}})",
      "Body": "This is a factory method which can be overridden in subclasses to create specialized LogRecord instances.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.makeRecord"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Logger}}.{{c3::hasHandlers}}()",
      "Body": "Checks to see if this logger has any handlers configured. This is done by looking for handlers in this logger and its parents in the logger hierarchy. Returns True if a handler was found, else False. The method stops searching up the hierarchy whenever a logger with the 'propagate' attribute set to false is found - that will be the last logger which is checked for the existence of handlers.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Logger.hasHandlers"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::Handler}}",
      "Body": "Initializes the Handler instance by setting its level, setting the list of filters to the empty list and creating a lock (using createLock()) for serializing access to an I/O mechanism.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::__init__}}({{c4::level}}={{c5::NOTSET}})",
      "Body": "Initializes the Handler instance by setting its level, setting the list of filters to the empty list and creating a lock (using createLock()) for serializing access to an I/O mechanism.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.__init__"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::createLock}}()",
      "Body": "Initializes a thread lock which can be used to serialize access to underlying I/O functionality which may not be threadsafe.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.createLock"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::acquire}}()",
      "Body": "Acquires the thread lock created with createLock().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.acquire"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::release}}()",
      "Body": "Releases the thread lock acquired with acquire().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.release"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::setLevel}}({{c4::level}})",
      "Body": "Sets the threshold for this handler to level. Logging messages which are less severe than level will be ignored. When a handler is created, the level is set to NOTSET (which causes all messages to be processed).",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.setLevel"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::setFormatter}}({{c4::fmt}})",
      "Body": "Sets the Formatter for this handler to fmt.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.setFormatter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::addFilter}}({{c4::filter}})",
      "Body": "Adds the specified filter filter to this handler.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.addFilter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::removeFilter}}({{c4::filter}})",
      "Body": "Removes the specified filter filter from this handler.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.removeFilter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::filter}}({{c4::record}})",
      "Body": "Applies this handler's filters to the record and returns a true value if the record is to be processed. The filters are consulted in turn, until one of them returns a false value. If none of them return a false value, the record will be emitted. If one returns a false value, the handler will not emit the record.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.filter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::flush}}()",
      "Body": "Ensure all logging output has been flushed. This version does nothing and is intended to be implemented by subclasses.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.flush"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::close}}()",
      "Body": "Tidy up any resources used by the handler. This version does no output but removes the handler from an internal list of handlers which is closed when shutdown() is called. Subclasses should ensure that this gets called from overridden close() methods.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.close"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::handle}}({{c4::record}})",
      "Body": "Conditionally emits the specified logging record, depending on filters which may have been added to the handler. Wraps the actual emission of the record with acquisition/release of the I/O thread lock.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.handle"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::handleError}}({{c4::record}})",
      "Body": "This method should be called from handlers when an exception is encountered during an emit() call. If the module-level attribute raiseExceptions is False, exceptions get silently ignored. This is what is mostly wanted for a logging system - most users will not care about errors in the logging system, they are more interested in application errors. You could, however, replace this with a custom handler if you wish. The specified record is the one which was being processed when the exception occurred. (The default value of raiseExceptions is True, as that is more useful during development).",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.handleError"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::format}}({{c4::record}})",
      "Body": "Do formatting for a record - if a formatter is set, use it. Otherwise, use the default formatter for the module.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.format"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Handler}}.{{c3::emit}}({{c4::record}})",
      "Body": "Do whatever it takes to actually log the specified logging record. This version is intended to be implemented by subclasses and so raises a NotImplementedError.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Handler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::Formatter}}({{c4::fmt}}={{c5::None}}, {{c6::datefmt}}={{c7::None}}, {{c8::style}}='%')",
      "Body": "Returns a new instance of the Formatter class.  The instance is initialized with a format string for the message as a whole, as well as a format string for the date/time portion of a message.  If no fmt is specified, '%(message)s' is used.  If no datefmt is specified, a format is used which is described in the formatTime() documentation.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Formatter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Formatter}}.{{c3::format}}({{c4::record}})",
      "Body": "The record's attribute dictionary is used as the operand to a string formatting operation. Returns the resulting string. Before formatting the dictionary, a couple of preparatory steps are carried out. The message attribute of the record is computed using msg % args. If the formatting string contains '(asctime)', formatTime() is called to format the event time. If there is exception information, it is formatted using formatException() and appended to the message. Note that the formatted exception information is cached in attribute exc_text. This is useful because the exception information can be pickled and sent across the wire, but you should be careful if you have more than one Formatter subclass which customizes the formatting of exception information. In this case, you will have to clear the cached value after a formatter has done its formatting, so that the next formatter to handle the event doesn't use the cached value but recalculates it afresh.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Formatter.format"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Formatter}}.{{c3::formatTime}}({{c4::record}}, {{c5::datefmt}}={{c6::None}})",
      "Body": "This method should be called from format() by a formatter which wants to make use of a formatted time. This method can be overridden in formatters to provide for any specific requirement, but the basic behavior is as follows: if datefmt (a string) is specified, it is used with time.strftime() to format the creation time of the record. Otherwise, the format '%Y-%m-%d %H:%M:%S,uuu' is used, where the uuu part is a millisecond value and the other letters are as per the time.strftime() documentation.  An example time in this format is 2003-01-23 00:29:50,411.  The resulting string is returned.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Formatter.formatTime"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Formatter}}.{{c3::formatException}}({{c4::exc_info}})",
      "Body": "Formats the specified exception information (a standard exception tuple as returned by sys.exc_info()) as a string. This default implementation just uses traceback.print_exception(). The resulting string is returned.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Formatter.formatException"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Formatter}}.{{c3::formatStack}}({{c4::stack_info}})",
      "Body": "Formats the specified stack information (a string as returned by traceback.print_stack(), but with the last newline removed) as a string. This default implementation just returns the input value.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Formatter.formatStack"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::Filter}}({{c4::name}}='')",
      "Body": "Returns an instance of the Filter class. If name is specified, it names a logger which, together with its children, will have its events allowed through the filter. If name is the empty string, allows every event.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Filter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::Filter}}.{{c3::filter}}({{c4::record}})",
      "Body": "Is the specified record to be logged? Returns zero for no, nonzero for yes. If deemed appropriate, the record may be modified in-place by this method.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.Filter.filter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::LogRecord}}({{c4::name}}, {{c5::level}}, {{c6::pathname}}, {{c7::lineno}}, {{c8::msg}}, {{c9::args}}, {{c10::exc_info}}, {{c11::func}}={{c12::None}}, {{c13::sinfo}}={{c14::None}})",
      "Body": "Contains all the information pertinent to the event being logged.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.LogRecord"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::LogRecord}}.{{c3::getMessage}}()",
      "Body": "Returns the message for this LogRecord instance after merging any user-supplied arguments with the message. If the user-supplied message argument to the logging call is not a string, str() is called on it to convert it to a string. This allows use of user-defined classes as messages, whose __str__ method can return the actual format string to be used.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.LogRecord.getMessage"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::LoggerAdapter}}({{c4::logger}}, {{c5::extra}})",
      "Body": "Returns an instance of LoggerAdapter initialized with an underlying Logger instance and a dict-like object.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.LoggerAdapter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::LoggerAdapter}}.{{c3::process}}({{c4::msg}}, {{c5::kwargs}})",
      "Body": "Modifies the message and/or keyword arguments passed to a logging call in order to insert contextual information. This implementation takes the object passed as extra to the constructor and adds it to kwargs using key 'extra'. The return value is a (msg, kwargs) tuple which has the (possibly modified) versions of the arguments passed in.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.LoggerAdapter.process"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::getLogger}}({{c3::name}}={{c4::None}})",
      "Body": "Return a logger with the specified name or, if name is None, return a logger which is the root logger of the hierarchy. If specified, the name is typically a dot-separated hierarchical name like 'a', 'a.b' or 'a.b.c.d'. Choice of these names is entirely up to the developer who is using logging.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.getLogger"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::getLoggerClass}}()",
      "Body": "Return either the standard Logger class, or the last class passed to setLoggerClass(). This function may be called from within a new class definition, to ensure that installing a customized Logger class will not undo customizations already applied by other code. For example:",
      "Link": "https://docs.python.org/3/library/logging.html#logging.getLoggerClass"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::getLogRecordFactory}}()",
      "Body": "Return a callable which is used to create a LogRecord.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.getLogRecordFactory"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::debug}}({{c3::msg}}, *args, **kwargs)",
      "Body": "Logs a message with level DEBUG on the root logger. The msg is the message format string, and the args are the arguments which are merged into msg using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.)",
      "Link": "https://docs.python.org/3/library/logging.html#logging.debug"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::info}}({{c3::msg}}, *args, **kwargs)",
      "Body": "Logs a message with level INFO on the root logger. The arguments are interpreted as for debug().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.info"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::warning}}({{c3::msg}}, *args, **kwargs)",
      "Body": "Logs a message with level WARNING on the root logger. The arguments are interpreted as for debug().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.warning"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::error}}({{c3::msg}}, *args, **kwargs)",
      "Body": "Logs a message with level ERROR on the root logger. The arguments are interpreted as for debug().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.error"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::critical}}({{c3::msg}}, *args, **kwargs)",
      "Body": "Logs a message with level CRITICAL on the root logger. The arguments are interpreted as for debug().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.critical"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::exception}}({{c3::msg}}, *args, **kwargs)",
      "Body": "Logs a message with level ERROR on the root logger. The arguments are interpreted as for debug(). Exception info is added to the logging message. This function should only be called from an exception handler.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.exception"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::log}}({{c3::level}}, {{c4::msg}}, *args, **kwargs)",
      "Body": "Logs a message with level level on the root logger. The other arguments are interpreted as for debug().",
      "Link": "https://docs.python.org/3/library/logging.html#logging.log"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::disable}}({{c3::lvl}}={{c4::CRITICAL}})",
      "Body": "Provides an overriding level lvl for all loggers which takes precedence over the logger's own level. When the need arises to temporarily throttle logging output down across the whole application, this function can be useful. Its effect is to disable all logging calls of severity lvl and below, so that if you call it with a value of INFO, then all INFO and DEBUG events would be discarded, whereas those of severity WARNING and above would be processed according to the logger's effective level. If logging.disable(logging.NOTSET) is called, it effectively removes this overriding level, so that logging output again depends on the effective levels of individual loggers.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.disable"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::addLevelName}}({{c3::lvl}}, {{c4::levelName}})",
      "Body": "Associates level lvl with text levelName in an internal dictionary, which is used to map numeric levels to a textual representation, for example when a Formatter formats a message. This function can also be used to define your own levels. The only constraints are that all levels used must be registered using this function, levels should be positive integers and they should increase in increasing order of severity.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.addLevelName"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::getLevelName}}({{c3::lvl}})",
      "Body": "Returns the textual representation of logging level lvl. If the level is one of the predefined levels CRITICAL, ERROR, WARNING, INFO or DEBUG then you get the corresponding string. If you have associated levels with names using addLevelName() then the name you have associated with lvl is returned. If a numeric value corresponding to one of the defined levels is passed in, the corresponding string representation is returned. Otherwise, the string 'Level %s' % lvl is returned.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.getLevelName"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::makeLogRecord}}({{c3::attrdict}})",
      "Body": "Creates and returns a new LogRecord instance whose attributes are defined by attrdict. This function is useful for taking a pickled LogRecord attribute dictionary, sent over a socket, and reconstituting it as a LogRecord instance at the receiving end.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.makeLogRecord"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::basicConfig}}(**kwargs)",
      "Body": "Does basic configuration for the logging system by creating a StreamHandler with a default Formatter and adding it to the root logger. The functions debug(), info(), warning(), error() and critical() will call basicConfig() automatically if no handlers are defined for the root logger.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.basicConfig"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::shutdown}}()",
      "Body": "Informs the logging system to perform an orderly shutdown by flushing and closing all handlers. This should be called at application exit and no further use of the logging system should be made after this call.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.shutdown"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::setLoggerClass}}({{c3::klass}})",
      "Body": "Tells the logging system to use the class klass when instantiating a logger. The class should define __init__() such that only a name argument is required, and the __init__() should call Logger.__init__(). This function is typically called before any loggers are instantiated by applications which need to use custom logger behavior.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.setLoggerClass"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::setLogRecordFactory}}({{c3::factory}})",
      "Body": "Set a callable which is used to create a LogRecord.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.setLogRecordFactory"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::lastResort}}",
      "Body": "A handler of last resort is available through this attribute. This is a StreamHandler writing to sys.stderr with a level of WARNING, and is used to handle logging events in the absence of any logging configuration. The end result is to just print the message to sys.stderr. This replaces the earlier error message saying that no handlers could be found for logger XYZ. If you need the earlier behaviour for some reason, lastResort can be set to None.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.lastResort"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::captureWarnings}}({{c3::capture}})",
      "Body": "This function is used to turn the capture of warnings by logging on and off.",
      "Link": "https://docs.python.org/3/library/logging.html#logging.captureWarnings"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::config}}.{{c3::dictConfig}}({{c4::config}})",
      "Body": "Takes the logging configuration from a dictionary.  The contents of this dictionary are described in Configuration dictionary schema below.",
      "Link": "https://docs.python.org/3/library/logging.config.html#logging.config.dictConfig"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::config}}.{{c3::fileConfig}}({{c4::fname}}, {{c5::defaults}}={{c6::None}}, {{c7::disable_existing_loggers}}={{c8::True}})",
      "Body": "Reads the logging configuration from a configparser-format file. The format of the file should be as described in Configuration file format. This function can be called several times from an application, allowing an end user to select from various pre-canned configurations (if the developer provides a mechanism to present the choices and load the chosen configuration).",
      "Link": "https://docs.python.org/3/library/logging.config.html#logging.config.fileConfig"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::config}}.{{c3::listen}}({{c4::port}}={{c5::DEFAULT_LOGGING_CONFIG_PORT}}, {{c6::verify}}={{c7::None}})",
      "Body": "Starts up a socket server on the specified port, and listens for new configurations. If no port is specified, the module's default DEFAULT_LOGGING_CONFIG_PORT is used. Logging configurations will be sent as a file suitable for processing by dictConfig() or fileConfig(). Returns a Thread instance on which you can call start() to start the server, and which you can join() when appropriate. To stop the server, call stopListening().",
      "Link": "https://docs.python.org/3/library/logging.config.html#logging.config.listen"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::config}}.{{c3::stopListening}}()",
      "Body": "Stops the listening server which was created with a call to listen(). This is typically called before calling join() on the return value from listen().",
      "Link": "https://docs.python.org/3/library/logging.config.html#logging.config.stopListening"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::StreamHandler}}({{c4::stream}}={{c5::None}})",
      "Body": "Returns a new instance of the StreamHandler class. If stream is specified, the instance will use it for logging output; otherwise, sys.stderr will be used.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::StreamHandler}}.{{c3::emit}}({{c4::record}})",
      "Body": "If a formatter is specified, it is used to format the record. The record is then written to the stream with a terminator. If exception information is present, it is formatted using traceback.print_exception() and appended to the stream.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::StreamHandler}}.{{c3::flush}}()",
      "Body": "Flushes the stream by calling its flush() method. Note that the close() method is inherited from Handler and so does no output, so an explicit flush() call may be needed at times.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler.flush"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::StreamHandler}}.{{c3::setStream}}({{c4::stream}})",
      "Body": "Sets the instance's stream to the specified value, if it is different. The old stream is flushed before the new stream is set.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler.setStream"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::FileHandler}}({{c4::filename}}, {{c5::mode}}='{{c6::a}}', {{c7::encoding}}={{c8::None}}, {{c9::delay}}={{c10::False}})",
      "Body": "Returns a new instance of the FileHandler class. The specified file is opened and used as the stream for logging. If mode is not specified, 'a' is used.  If encoding is not None, it is used to open the file with that encoding.  If delay is true, then file opening is deferred until the first call to emit(). By default, the file grows indefinitely.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.FileHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::FileHandler}}.{{c3::close}}()",
      "Body": "Closes the file.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.FileHandler.close"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::FileHandler}}.{{c3::emit}}({{c4::record}})",
      "Body": "Outputs the record to the file.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.FileHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::NullHandler}}",
      "Body": "Returns a new instance of the NullHandler class.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.NullHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::NullHandler}}.{{c3::emit}}({{c4::record}})",
      "Body": "This method does nothing.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.NullHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::NullHandler}}.{{c3::handle}}({{c4::record}})",
      "Body": "This method does nothing.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.NullHandler.handle"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::NullHandler}}.{{c3::createLock}}()",
      "Body": "This method returns None for the lock, since there is no underlying I/O to which access needs to be serialized.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.NullHandler.createLock"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::WatchedFileHandler}}({{c5::filename}}, {{c6::mode}}='{{c7::a}}', {{c8::encoding}}={{c9::None}}, {{c10::delay}}={{c11::False}})",
      "Body": "Returns a new instance of the WatchedFileHandler class. The specified file is opened and used as the stream for logging. If mode is not specified, 'a' is used.  If encoding is not None, it is used to open the file with that encoding.  If delay is true, then file opening is deferred until the first call to emit().  By default, the file grows indefinitely.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.WatchedFileHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::WatchedFileHandler}}.{{c4::reopenIfNeeded}}()",
      "Body": "Checks to see if the file has changed.  If it has, the existing stream is flushed and closed and the file opened again, typically as a precursor to outputting the record to the file.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.WatchedFileHandler.reopenIfNeeded"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::WatchedFileHandler}}.{{c4::emit}}({{c5::record}})",
      "Body": "Outputs the record to the file, but first calls reopenIfNeeded() to reopen the file if it has changed.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.WatchedFileHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::BaseRotatingHandler}}({{c5::filename}}, {{c6::mode}}, {{c7::encoding}}={{c8::None}}, {{c9::delay}}={{c10::False}})",
      "Body": "The parameters are as for FileHandler. The attributes are:",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.BaseRotatingHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::BaseRotatingHandler}}.{{c4::namer}}",
      "Body": "If this attribute is set to a callable, the rotation_filename() method delegates to this callable. The parameters passed to the callable are those passed to rotation_filename().",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.BaseRotatingHandler.namer"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::BaseRotatingHandler}}.{{c4::rotator}}",
      "Body": "If this attribute is set to a callable, the rotate() method delegates to this callable.  The parameters passed to the callable are those passed to rotate().",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.BaseRotatingHandler.rotator"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::BaseRotatingHandler}}.{{c4::rotation_filename}}({{c5::default_name}})",
      "Body": "Modify the filename of a log file when rotating.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.BaseRotatingHandler.rotation_filename"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::BaseRotatingHandler}}.{{c4::rotate}}({{c5::source}}, {{c6::dest}})",
      "Body": "When rotating, rotate the current log.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.BaseRotatingHandler.rotate"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::RotatingFileHandler}}({{c5::filename}}, {{c6::mode}}='{{c7::a}}', {{c8::maxBytes}}=0, {{c9::backupCount}}=0, {{c10::encoding}}={{c11::None}}, {{c12::delay}}={{c13::False}})",
      "Body": "Returns a new instance of the RotatingFileHandler class. The specified file is opened and used as the stream for logging. If mode is not specified, 'a' is used.  If encoding is not None, it is used to open the file with that encoding.  If delay is true, then file opening is deferred until the first call to emit().  By default, the file grows indefinitely.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.RotatingFileHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::RotatingFileHandler}}.{{c4::doRollover}}()",
      "Body": "Does a rollover, as described above.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.RotatingFileHandler.doRollover"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::RotatingFileHandler}}.{{c4::emit}}({{c5::record}})",
      "Body": "Outputs the record to the file, catering for rollover as described previously.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.RotatingFileHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::TimedRotatingFileHandler}}({{c5::filename}}, {{c6::when}}='{{c7::h}}', {{c8::interval}}=1, {{c9::backupCount}}=0, {{c10::encoding}}={{c11::None}}, {{c12::delay}}={{c13::False}}, {{c14::utc}}={{c15::False}}, {{c16::atTime}}={{c17::None}})",
      "Body": "Returns a new instance of the TimedRotatingFileHandler class. The specified file is opened and used as the stream for logging. On rotating it also sets the filename suffix. Rotating happens based on the product of when and interval.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::TimedRotatingFileHandler}}.{{c4::doRollover}}()",
      "Body": "Does a rollover, as described above.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler.doRollover"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::TimedRotatingFileHandler}}.{{c4::emit}}({{c5::record}})",
      "Body": "Outputs the record to the file, catering for rollover as described above.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::SocketHandler}}({{c5::host}}, {{c6::port}})",
      "Body": "Returns a new instance of the SocketHandler class intended to communicate with a remote machine whose address is given by host and port.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SocketHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::SocketHandler}}.{{c4::close}}()",
      "Body": "Closes the socket.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SocketHandler.close"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::SocketHandler}}.{{c4::emit}}()",
      "Body": "Pickles the record's attribute dictionary and writes it to the socket in binary format. If there is an error with the socket, silently drops the packet. If the connection was previously lost, re-establishes the connection. To unpickle the record at the receiving end into a LogRecord, use the makeLogRecord() function.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SocketHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::SocketHandler}}.{{c4::handleError}}()",
      "Body": "Handles an error which has occurred during emit(). The most likely cause is a lost connection. Closes the socket so that we can retry on the next event.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SocketHandler.handleError"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::SocketHandler}}.{{c4::makeSocket}}()",
      "Body": "This is a factory method which allows subclasses to define the precise type of socket they want. The default implementation creates a TCP socket (socket.SOCK_STREAM).",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SocketHandler.makeSocket"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::SocketHandler}}.{{c4::makePickle}}({{c5::record}})",
      "Body": "Pickles the record's attribute dictionary in binary format with a length prefix, and returns it ready for transmission across the socket.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SocketHandler.makePickle"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::SocketHandler}}.{{c4::send}}({{c5::packet}})",
      "Body": "Send a pickled string packet to the socket. This function allows for partial sends which can happen when the network is busy.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SocketHandler.send"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::SocketHandler}}.{{c4::createSocket}}()",
      "Body": "Tries to create a socket; on failure, uses an exponential back-off algorithm.  On initial failure, the handler will drop the message it was trying to send.  When subsequent messages are handled by the same instance, it will not try connecting until some time has passed.  The default parameters are such that the initial delay is one second, and if after that delay the connection still can't be made, the handler will double the delay each time up to a maximum of 30 seconds.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SocketHandler.createSocket"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::DatagramHandler}}({{c5::host}}, {{c6::port}})",
      "Body": "Returns a new instance of the DatagramHandler class intended to communicate with a remote machine whose address is given by host and port.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.DatagramHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::DatagramHandler}}.{{c4::emit}}()",
      "Body": "Pickles the record's attribute dictionary and writes it to the socket in binary format. If there is an error with the socket, silently drops the packet. To unpickle the record at the receiving end into a LogRecord, use the makeLogRecord() function.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.DatagramHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::DatagramHandler}}.{{c4::makeSocket}}()",
      "Body": "The factory method of SocketHandler is here overridden to create a UDP socket (socket.SOCK_DGRAM).",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.DatagramHandler.makeSocket"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::DatagramHandler}}.{{c4::send}}({{c5::s}})",
      "Body": "Send a pickled string to a socket.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.DatagramHandler.send"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::SysLogHandler}}({{c5::address}}=('{{c6::localhost}}', {{c7::SYSLOG_UDP_PORT}}), {{c8::facility}}={{c9::LOG_USER}}, {{c10::socktype}}={{c11::socket}}.{{c12::SOCK_DGRAM}})",
      "Body": "Returns a new instance of the SysLogHandler class intended to communicate with a remote Unix machine whose address is given by address in the form of a (host, port) tuple.  If address is not specified, ('localhost', 514) is used.  The address is used to open a socket.  An alternative to providing a (host, port) tuple is providing an address as a string, for example '/dev/log'. In this case, a Unix domain socket is used to send the message to the syslog. If facility is not specified, LOG_USER is used. The type of socket opened depends on the socktype argument, which defaults to socket.SOCK_DGRAM and thus opens a UDP socket. To open a TCP socket (for use with the newer syslog daemons such as rsyslog), specify a value of socket.SOCK_STREAM.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SysLogHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::SysLogHandler}}.{{c4::close}}()",
      "Body": "Closes the socket to the remote host.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SysLogHandler.close"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::SysLogHandler}}.{{c4::emit}}({{c5::record}})",
      "Body": "The record is formatted, and then sent to the syslog server. If exception information is present, it is not sent to the server.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SysLogHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::SysLogHandler}}.{{c4::encodePriority}}({{c5::facility}}, {{c6::priority}})",
      "Body": "Encodes the facility and priority into an integer. You can pass in strings or integers - if strings are passed, internal mapping dictionaries are used to convert them to integers.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SysLogHandler.encodePriority"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::SysLogHandler}}.{{c4::mapPriority}}({{c5::levelname}})",
      "Body": "Maps a logging level name to a syslog priority name. You may need to override this if you are using custom levels, or if the default algorithm is not suitable for your needs. The default algorithm maps DEBUG, INFO, WARNING, ERROR and CRITICAL to the equivalent syslog names, and all other level names to 'warning'.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SysLogHandler.mapPriority"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::NTEventLogHandler}}({{c5::appname}}, {{c6::dllname}}={{c7::None}}, {{c8::logtype}}='{{c9::Application}}')",
      "Body": "Returns a new instance of the NTEventLogHandler class. The appname is used to define the application name as it appears in the event log. An appropriate registry entry is created using this name. The dllname should give the fully qualified pathname of a .dll or .exe which contains message definitions to hold in the log (if not specified, 'win32service.pyd' is used - this is installed with the Win32 extensions and contains some basic placeholder message definitions. Note that use of these placeholders will make your event logs big, as the entire message source is held in the log. If you want slimmer logs, you have to pass in the name of your own .dll or .exe which contains the message definitions you want to use in the event log). The logtype is one of 'Application', 'System' or 'Security', and defaults to 'Application'.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.NTEventLogHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::NTEventLogHandler}}.{{c4::close}}()",
      "Body": "At this point, you can remove the application name from the registry as a source of event log entries. However, if you do this, you will not be able to see the events as you intended in the Event Log Viewer - it needs to be able to access the registry to get the .dll name. The current version does not do this.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.NTEventLogHandler.close"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::NTEventLogHandler}}.{{c4::emit}}({{c5::record}})",
      "Body": "Determines the message ID, event category and event type, and then logs the message in the NT event log.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.NTEventLogHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::NTEventLogHandler}}.{{c4::getEventCategory}}({{c5::record}})",
      "Body": "Returns the event category for the record. Override this if you want to specify your own categories. This version returns 0.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.NTEventLogHandler.getEventCategory"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::NTEventLogHandler}}.{{c4::getEventType}}({{c5::record}})",
      "Body": "Returns the event type for the record. Override this if you want to specify your own types. This version does a mapping using the handler's typemap attribute, which is set up in __init__() to a dictionary which contains mappings for DEBUG, INFO, WARNING, ERROR and CRITICAL. If you are using your own levels, you will either need to override this method or place a suitable dictionary in the handler's typemap attribute.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.NTEventLogHandler.getEventType"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::NTEventLogHandler}}.{{c4::getMessageID}}({{c5::record}})",
      "Body": "Returns the message ID for the record. If you are using your own messages, you could do this by having the msg passed to the logger being an ID rather than a format string. Then, in here, you could use a dictionary lookup to get the message ID. This version returns 1, which is the base message ID in win32service.pyd.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.NTEventLogHandler.getMessageID"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::SMTPHandler}}({{c5::mailhost}}, {{c6::fromaddr}}, {{c7::toaddrs}}, {{c8::subject}}, {{c9::credentials}}={{c10::None}}, {{c11::secure}}={{c12::None}}, {{c13::timeout}}=1.0)",
      "Body": "Returns a new instance of the SMTPHandler class. The instance is initialized with the from and to addresses and subject line of the email. The toaddrs should be a list of strings. To specify a non-standard SMTP port, use the (host, port) tuple format for the mailhost argument. If you use a string, the standard SMTP port is used. If your SMTP server requires authentication, you can specify a (username, password) tuple for the credentials argument.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SMTPHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::SMTPHandler}}.{{c4::emit}}({{c5::record}})",
      "Body": "Formats the record and sends it to the specified addressees.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SMTPHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::SMTPHandler}}.{{c4::getSubject}}({{c5::record}})",
      "Body": "If you want to specify a subject line which is record-dependent, override this method.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SMTPHandler.getSubject"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::BufferingHandler}}({{c5::capacity}})",
      "Body": "Initializes the handler with a buffer of the specified capacity.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.BufferingHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::BufferingHandler}}.{{c4::emit}}({{c5::record}})",
      "Body": "Appends the record to the buffer. If shouldFlush() returns true, calls flush() to process the buffer.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.BufferingHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::BufferingHandler}}.{{c4::flush}}()",
      "Body": "You can override this to implement custom flushing behavior. This version just zaps the buffer to empty.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.BufferingHandler.flush"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::BufferingHandler}}.{{c4::shouldFlush}}({{c5::record}})",
      "Body": "Returns true if the buffer is up to capacity. This method can be overridden to implement custom flushing strategies.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.BufferingHandler.shouldFlush"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::MemoryHandler}}({{c5::capacity}}, {{c6::flushLevel}}={{c7::ERROR}}, {{c8::target}}={{c9::None}}, {{c10::flushOnClose}}={{c11::True}})",
      "Body": "Returns a new instance of the MemoryHandler class. The instance is initialized with a buffer size of capacity. If flushLevel is not specified, ERROR is used. If no target is specified, the target will need to be set using setTarget() before this handler does anything useful. If flushOnClose is specified as False, then the buffer is not flushed when the handler is closed. If not specified or specified as True, the previous behaviour of flushing the buffer will occur when the handler is closed.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.MemoryHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::MemoryHandler}}.{{c4::close}}()",
      "Body": "Calls flush(), sets the target to None and clears the buffer.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.MemoryHandler.close"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::MemoryHandler}}.{{c4::flush}}()",
      "Body": "For a MemoryHandler, flushing means just sending the buffered records to the target, if there is one. The buffer is also cleared when this happens. Override if you want different behavior.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.MemoryHandler.flush"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::MemoryHandler}}.{{c4::setTarget}}({{c5::target}})",
      "Body": "Sets the target handler for this handler.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.MemoryHandler.setTarget"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::MemoryHandler}}.{{c4::shouldFlush}}({{c5::record}})",
      "Body": "Checks for buffer full or a record at the flushLevel or higher.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.MemoryHandler.shouldFlush"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::HTTPHandler}}({{c5::host}}, {{c6::url}}, {{c7::method}}='{{c8::GET}}', {{c9::secure}}={{c10::False}}, {{c11::credentials}}={{c12::None}}, {{c13::context}}={{c14::None}})",
      "Body": "Returns a new instance of the HTTPHandler class. The host can be of the form host:port, should you need to use a specific port number.  If no method is specified, GET is used. If secure is true, a HTTPS connection will be used. The context parameter may be set to a ssl.SSLContext instance to configure the SSL settings used for the HTTPS connection. If credentials is specified, it should be a 2-tuple consisting of userid and password, which will be placed in a HTTP 'Authorization' header using Basic authentication. If you specify credentials, you should also specify secure=True so that your userid and password are not passed in cleartext across the wire.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.HTTPHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::HTTPHandler}}.{{c4::mapLogRecord}}({{c5::record}})",
      "Body": "Provides a dictionary, based on record, which is to be URL-encoded and sent to the web server. The default implementation just returns record.__dict__. This method can be overridden if e.g. only a subset of LogRecord is to be sent to the web server, or if more specific customization of what's sent to the server is required.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.HTTPHandler.mapLogRecord"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::HTTPHandler}}.{{c4::emit}}({{c5::record}})",
      "Body": "Sends the record to the Web server as a URL-encoded dictionary. The mapLogRecord() method is used to convert the record to the dictionary to be sent.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.HTTPHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::QueueHandler}}({{c5::queue}})",
      "Body": "Returns a new instance of the QueueHandler class. The instance is initialized with the queue to send messages to. The queue can be any queue-like object; it's used as-is by the enqueue() method, which needs to know how to send messages to it.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueHandler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::QueueHandler}}.{{c4::emit}}({{c5::record}})",
      "Body": "Enqueues the result of preparing the LogRecord.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueHandler.emit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::QueueHandler}}.{{c4::prepare}}({{c5::record}})",
      "Body": "Prepares a record for queuing. The object returned by this method is enqueued.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueHandler.prepare"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::QueueHandler}}.{{c4::enqueue}}({{c5::record}})",
      "Body": "Enqueues the record on the queue using put_nowait(); you may want to override this if you want to use blocking behaviour, or a timeout, or a customized queue implementation.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueHandler.enqueue"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::logging}}.{{c3::handlers}}.{{c4::QueueListener}}({{c5::queue}}, *handlers, {{c6::respect_handler_level}}={{c7::False}})",
      "Body": "Returns a new instance of the QueueListener class. The instance is initialized with the queue to send messages to and a list of handlers which will handle entries placed on the queue. The queue can be any queue-like object; it's passed as-is to the dequeue() method, which needs to know how to get messages from it. If respect_handler_level is True, a handler's level is respected (compared with the level for the message) when deciding whether to pass messages to that handler; otherwise, the behaviour is as in previous versions - to always pass each message to each handler.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::QueueListener}}.{{c4::dequeue}}({{c5::block}})",
      "Body": "Dequeues a record and return it, optionally blocking.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.dequeue"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::QueueListener}}.{{c4::prepare}}({{c5::record}})",
      "Body": "Prepare a record for handling.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.prepare"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::QueueListener}}.{{c4::handle}}({{c5::record}})",
      "Body": "Handle a record.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.handle"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::QueueListener}}.{{c4::start}}()",
      "Body": "Starts the listener.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.start"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::QueueListener}}.{{c4::stop}}()",
      "Body": "Stops the listener.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.stop"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::logging}}.{{c2::handlers}}.{{c3::QueueListener}}.{{c4::enqueue_sentinel}}()",
      "Body": "Writes a sentinel to the queue to tell the listener to quit. This implementation uses put_nowait().  You may want to override this method if you want to use timeouts or work with custom queue implementations.",
      "Link": "https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.enqueue_sentinel"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::getpass}}.{{c2::getpass}}({{c3::prompt}}='{{c4::Password}}: ', {{c5::stream}}={{c6::None}})",
      "Body": "Prompt the user for a password without echoing.  The user is prompted using the string prompt, which defaults to 'Password: '.  On Unix, the prompt is written to the file-like object stream using the replace error handler if needed.  stream defaults to the controlling terminal (/dev/tty) or if that is unavailable to sys.stderr (this argument is ignored on Windows).",
      "Link": "https://docs.python.org/3/library/getpass.html#getpass.getpass"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "exception",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::exception}} {{c2::getpass}}.{{c3::GetPassWarning}}",
      "Body": "A UserWarning subclass issued when password input may be echoed.",
      "Link": "https://docs.python.org/3/library/getpass.html#getpass.GetPassWarning"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::getpass}}.{{c2::getuser}}()",
      "Body": "Return the login name of the user.",
      "Link": "https://docs.python.org/3/library/getpass.html#getpass.getuser"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "exception",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::exception}} {{c2::curses}}.{{c3::error}}",
      "Body": "Exception raised when a curses library function returns an error.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.error"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::baudrate}}()",
      "Body": "Return the output speed of the terminal in bits per second.  On software terminal emulators it will have a fixed high value. Included for historical reasons; in former times, it was used to  write output loops for time delays and occasionally to change interfaces depending on the line speed.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.baudrate"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::beep}}()",
      "Body": "Emit a short attention sound.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.beep"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::can_change_color}}()",
      "Body": "Return True or False, depending on whether the programmer can change the colors displayed by the terminal.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.can_change_color"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::cbreak}}()",
      "Body": "Enter cbreak mode.  In cbreak mode (sometimes called rare mode) normal tty line buffering is turned off and characters are available to be read one by one. However, unlike raw mode, special characters (interrupt, quit, suspend, and flow control) retain their effects on the tty driver and calling program.  Calling first raw() then cbreak() leaves the terminal in cbreak mode.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.cbreak"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::color_content}}({{c3::color_number}})",
      "Body": "Return the intensity of the red, green, and blue (RGB) components in the color color_number, which must be between 0 and COLORS.  Return a 3-tuple, containing the R,G,B values for the given color, which will be between 0 (no component) and 1000 (maximum amount of component).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.color_content"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::color_pair}}({{c3::color_number}})",
      "Body": "Return the attribute value for displaying text in the specified color.  This attribute value can be combined with A_STANDOUT, A_REVERSE, and the other A_* attributes.  pair_number() is the counterpart to this function.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.color_pair"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::curs_set}}({{c3::visibility}})",
      "Body": "Set the cursor state.  visibility can be set to 0, 1, or 2, for invisible, normal, or very visible.  If the terminal supports the visibility requested, return the previous cursor state; otherwise raise an exception.  On many terminals, the visible mode is an underline cursor and the very visible mode is a block cursor.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.curs_set"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::def_prog_mode}}()",
      "Body": "Save the current terminal mode as the program mode, the mode when the running program is using curses.  (Its counterpart is the shell mode, for when the program is not in curses.)  Subsequent calls to reset_prog_mode() will restore this mode.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.def_prog_mode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::def_shell_mode}}()",
      "Body": "Save the current terminal mode as the shell mode, the mode when the running program is not using curses.  (Its counterpart is the program mode, when the program is using curses capabilities.) Subsequent calls to reset_shell_mode() will restore this mode.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.def_shell_mode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::delay_output}}({{c3::ms}})",
      "Body": "Insert an ms millisecond pause in output.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.delay_output"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::doupdate}}()",
      "Body": "Update the physical screen.  The curses library keeps two data structures, one representing the current physical screen contents and a virtual screen representing the desired next state.  The doupdate() ground updates the physical screen to match the virtual screen.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.doupdate"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::echo}}()",
      "Body": "Enter echo mode.  In echo mode, each character input is echoed to the screen as it is entered.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.echo"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::endwin}}()",
      "Body": "De-initialize the library, and return terminal to normal status.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.endwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::erasechar}}()",
      "Body": "Return the user's current erase character as a one-byte bytes object.  Under Unix operating systems this is a property of the controlling tty of the curses program, and is not set by the curses library itself.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.erasechar"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::filter}}()",
      "Body": "The filter() routine, if used, must be called before initscr() is called.  The effect is that, during those calls, LINES is set to 1; the capabilities clear, cup, cud, cud1, cuu1, cuu, vpa are disabled; and the home string is set to the value of cr. The effect is that the cursor is confined to the current line, and so are screen updates.  This may be used for enabling character-at-a-time  line editing without touching the rest of the screen.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.filter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::flash}}()",
      "Body": "Flash the screen.  That is, change it to reverse-video and then change it back in a short interval.  Some people prefer such as 'visible bell' to the audible attention signal produced by beep().",
      "Link": "https://docs.python.org/3/library/curses.html#curses.flash"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::flushinp}}()",
      "Body": "Flush all input buffers.  This throws away any  typeahead  that  has been typed by the user and has not yet been processed by the program.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.flushinp"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::getmouse}}()",
      "Body": "After getch() returns KEY_MOUSE to signal a mouse event, this method should be call to retrieve the queued mouse event, represented as a 5-tuple (id, x, y, z, bstate). id is an ID value used to distinguish multiple devices, and x, y, z are the event's coordinates.  (z is currently unused.)  bstate is an integer value whose bits will be set to indicate the type of event, and will be the bitwise OR of one or more of the following constants, where n is the button number from 1 to 4: BUTTONn_PRESSED, BUTTONn_RELEASED, BUTTONn_CLICKED, BUTTONn_DOUBLE_CLICKED, BUTTONn_TRIPLE_CLICKED, BUTTON_SHIFT, BUTTON_CTRL, BUTTON_ALT.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.getmouse"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::getsyx}}()",
      "Body": "Return the current coordinates of the virtual screen cursor as a tuple (y, x).  If leaveok is currently True, then return (-1, -1).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.getsyx"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::getwin}}({{c3::file}})",
      "Body": "Read window related data stored in the file by an earlier putwin() call. The routine then creates and initializes a new window using that data, returning the new window object.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.getwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::has_colors}}()",
      "Body": "Return True if the terminal can display colors; otherwise, return False.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.has_colors"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::has_ic}}()",
      "Body": "Return True if the terminal has insert- and delete-character capabilities. This function is included for historical reasons only, as all modern software terminal emulators have such capabilities.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.has_ic"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::has_il}}()",
      "Body": "Return True if the terminal has insert- and delete-line capabilities, or can simulate  them  using scrolling regions. This function is included for historical reasons only, as all modern software terminal emulators have such capabilities.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.has_il"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::has_key}}({{c3::ch}})",
      "Body": "Take a key value ch, and return True if the current terminal type recognizes a key with that value.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.has_key"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::halfdelay}}({{c3::tenths}})",
      "Body": "Used for half-delay mode, which is similar to cbreak mode in that characters typed by the user are immediately available to the program. However, after blocking for tenths tenths of seconds, raise an exception if nothing has been typed.  The value of tenths must be a number between 1 and 255.  Use nocbreak() to leave half-delay mode.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.halfdelay"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::init_color}}({{c3::color_number}}, {{c4::r}}, {{c5::g}}, {{c6::b}})",
      "Body": "Change the definition of a color, taking the number of the color to be changed followed by three RGB values (for the amounts of red, green, and blue components).  The value of color_number must be between 0 and COLORS.  Each of r, g, b, must be a value between 0 and 1000.  When init_color() is used, all occurrences of that color on the screen immediately change to the new definition.  This function is a no-op on most terminals; it is active only if can_change_color() returns True.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.init_color"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::init_pair}}({{c3::pair_number}}, {{c4::fg}}, {{c5::bg}})",
      "Body": "Change the definition of a color-pair.  It takes three arguments: the number of the color-pair to be changed, the foreground color number, and the background color number.  The value of pair_number must be between 1 and COLOR_PAIRS - 1 (the 0 color pair is wired to white on black and cannot be changed).  The value of fg and bg arguments must be between 0 and COLORS.  If the color-pair was previously initialized, the screen is refreshed and all occurrences of that color-pair are changed to the new definition.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.init_pair"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::initscr}}()",
      "Body": "Initialize the library. Return a window object which represents the whole screen.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.initscr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::is_term_resized}}({{c3::nlines}}, {{c4::ncols}})",
      "Body": "Return True if resize_term() would modify the window structure, False otherwise.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.is_term_resized"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::isendwin}}()",
      "Body": "Return True if endwin() has been called (that is, the  curses library has been deinitialized).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.isendwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::keyname}}({{c3::k}})",
      "Body": "Return the name of the key numbered k as a bytes object.  The name of a key generating printable ASCII character is the key's character.  The name of a control-key combination is a two-byte bytes object consisting of a caret (b'^') followed by the corresponding printable ASCII character.  The name of an alt-key combination (128255) is a bytes object consisting of the prefix b'M-' followed by the name of the corresponding ASCII character.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.keyname"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::killchar}}()",
      "Body": "Return the user's current line kill character as a one-byte bytes object. Under Unix operating systems this is a property of the controlling tty of the curses program, and is not set by the curses library itself.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.killchar"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::longname}}()",
      "Body": "Return a bytes object containing the terminfo long name field describing the current terminal.  The maximum length of a verbose description is 128 characters.  It is defined only after the call to initscr().",
      "Link": "https://docs.python.org/3/library/curses.html#curses.longname"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::meta}}({{c3::flag}})",
      "Body": "If flag is True, allow 8-bit characters to be input.  If flag is False,  allow only 7-bit chars.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.meta"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::mouseinterval}}({{c3::interval}})",
      "Body": "Set the maximum time in milliseconds that can elapse between press and release events in order for them to be recognized as a click, and return the previous interval value.  The default value is 200 msec, or one fifth of a second.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.mouseinterval"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::mousemask}}({{c3::mousemask}})",
      "Body": "Set the mouse events to be reported, and return a tuple (availmask, oldmask).   availmask indicates which of the specified mouse events can be reported; on complete failure it returns 0.  oldmask is the previous value of the given window's mouse event mask.  If this function is never called, no mouse events are ever reported.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.mousemask"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::napms}}({{c3::ms}})",
      "Body": "Sleep for ms milliseconds.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.napms"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::newpad}}({{c3::nlines}}, {{c4::ncols}})",
      "Body": "Create and return a pointer to a new pad data structure with the given number of lines and columns.  Return a pad as a window object.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.newpad"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::newwin}}({{c3::nlines}}, {{c4::ncols}})",
      "Body": "Return a new window, whose left-upper corner is at  (begin_y, begin_x), and whose height/width is  nlines/ncols.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.newwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::newwin}}({{c3::nlines}}, {{c4::ncols}}, {{c5::begin_y}}, {{c6::begin_x}})",
      "Body": "Return a new window, whose left-upper corner is at  (begin_y, begin_x), and whose height/width is  nlines/ncols.",
      "Link": "https://docs.python.org/3/library/curses.html#functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::nl}}()",
      "Body": "Enter newline mode.  This mode translates the return key into newline on input, and translates newline into return and line-feed on output. Newline mode is initially on.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.nl"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::nocbreak}}()",
      "Body": "Leave cbreak mode.  Return to normal cooked mode with line buffering.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.nocbreak"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::noecho}}()",
      "Body": "Leave echo mode.  Echoing of input characters is turned off.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.noecho"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::nonl}}()",
      "Body": "Leave newline mode.  Disable translation of return into newline on input, and disable low-level translation of newline into newline/return on output (but this does not change the behavior of addch('\\n'), which always does the equivalent of return and line feed on the virtual screen).  With translation off, curses can sometimes speed up vertical motion a little; also, it will be able to detect the return key on input.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.nonl"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::noqiflush}}()",
      "Body": "When the noqiflush() routine is used, normal flush of input and output queues associated with the INTR, QUIT and SUSP characters will not be done.  You may want to call noqiflush() in a signal handler if you want output to continue as though the interrupt had not occurred, after the handler exits.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.noqiflush"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::noraw}}()",
      "Body": "Leave raw mode. Return to normal cooked mode with line buffering.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.noraw"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::pair_content}}({{c3::pair_number}})",
      "Body": "Return a tuple (fg, bg) containing the colors for the requested color pair. The value of pair_number must be between 1 and COLOR_PAIRS - 1.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.pair_content"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::pair_number}}({{c3::attr}})",
      "Body": "Return the number of the color-pair set by the attribute value attr. color_pair() is the counterpart to this function.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.pair_number"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::putp}}({{c3::str}})",
      "Body": "Equivalent to tputs(str, 1, putchar); emit the value of a specified terminfo capability for the current terminal.  Note that the output of putp() always goes to standard output.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.putp"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::qiflush}}([{{c3::flag}}])",
      "Body": "If flag is False, the effect is the same as calling noqiflush(). If flag is True, or no argument is provided, the queues will be flushed when these control characters are read.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.qiflush"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::raw}}()",
      "Body": "Enter raw mode.  In raw mode, normal line buffering and  processing of interrupt, quit, suspend, and flow control keys are turned off; characters are presented to curses input functions one by one.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.raw"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::reset_prog_mode}}()",
      "Body": "Restore the  terminal  to program mode, as previously saved  by def_prog_mode().",
      "Link": "https://docs.python.org/3/library/curses.html#curses.reset_prog_mode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::reset_shell_mode}}()",
      "Body": "Restore the  terminal  to shell mode, as previously saved  by def_shell_mode().",
      "Link": "https://docs.python.org/3/library/curses.html#curses.reset_shell_mode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::resetty}}()",
      "Body": "Restore the state of the terminal modes to what it was at the last call to savetty().",
      "Link": "https://docs.python.org/3/library/curses.html#curses.resetty"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::resize_term}}({{c3::nlines}}, {{c4::ncols}})",
      "Body": "Backend function used by resizeterm(), performing most of the work; when resizing the windows, resize_term() blank-fills the areas that are extended.  The calling application should fill in these areas with appropriate data.  The resize_term() function attempts to resize all windows.  However, due to the calling convention of pads, it is not possible to resize these without additional interaction with the application.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.resize_term"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::resizeterm}}({{c3::nlines}}, {{c4::ncols}})",
      "Body": "Resize the standard and current windows to the specified dimensions, and adjusts other bookkeeping data used by the curses library that record the window dimensions (in particular the SIGWINCH handler).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.resizeterm"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::savetty}}()",
      "Body": "Save the current state of the terminal modes in a buffer, usable by resetty().",
      "Link": "https://docs.python.org/3/library/curses.html#curses.savetty"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::setsyx}}({{c3::y}}, {{c4::x}})",
      "Body": "Set the virtual screen cursor to y, x. If y and x are both -1, then leaveok is set True.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.setsyx"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::setupterm}}({{c3::term}}={{c4::None}}, {{c5::fd}}=-1)",
      "Body": "Initialize the terminal.  term is a string giving the terminal name, or None; if omitted or None, the value of the TERM environment variable will be used.  fd is the file descriptor to which any initialization sequences will be sent; if not supplied or -1, the file descriptor for sys.stdout will be used.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.setupterm"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::start_color}}()",
      "Body": "Must be called if the programmer wants to use colors, and before any other color manipulation routine is called.  It is good practice to call this routine right after initscr().",
      "Link": "https://docs.python.org/3/library/curses.html#curses.start_color"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::termattrs}}()",
      "Body": "Return a logical OR of all video attributes supported by the terminal.  This information is useful when a curses program needs complete control over the appearance of the screen.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.termattrs"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::termname}}()",
      "Body": "Return the value of the environment variable TERM, as a bytes object, truncated to 14 characters.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.termname"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::tigetflag}}({{c3::capname}})",
      "Body": "Return the value of the Boolean capability corresponding to the terminfo capability name capname as an integer.  Return the value -1 if capname is not a Boolean capability, or 0 if it is canceled or absent from the terminal description.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.tigetflag"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::tigetnum}}({{c3::capname}})",
      "Body": "Return the value of the numeric capability corresponding to the terminfo capability name capname as an integer.  Return the value -2 if capname is not a numeric capability, or -1 if it is canceled or absent from the terminal description.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.tigetnum"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::tigetstr}}({{c3::capname}})",
      "Body": "Return the value of the string capability corresponding to the terminfo capability name capname as a bytes object.  Return None if capname is not a terminfo string capability, or is canceled or absent from the terminal description.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.tigetstr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::tparm}}({{c3::str}}[, ...])",
      "Body": "Instantiate the bytes object str with the supplied parameters, where str should be a parameterized string obtained from the terminfo database.  E.g. tparm(tigetstr(\"cup\"), 5, 3) could result in b'\\033[6;4H', the exact result depending on terminal type.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.tparm"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::typeahead}}({{c3::fd}})",
      "Body": "Specify that the file descriptor fd be used for typeahead checking.  If fd is -1, then no typeahead checking is done.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.typeahead"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::unctrl}}({{c3::ch}})",
      "Body": "Return a bytes object which is a printable representation of the character ch. Control characters are represented as a caret followed by the character, for example as b'^C'. Printing characters are left as they are.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.unctrl"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ungetch}}({{c3::ch}})",
      "Body": "Push ch so the next getch() will return it.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.ungetch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::update_lines_cols}}()",
      "Body": "Update LINES and COLS. Useful for detecting manual screen resize.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.update_lines_cols"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::unget_wch}}({{c3::ch}})",
      "Body": "Push ch so the next get_wch() will return it.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.unget_wch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ungetmouse}}({{c3::id}}, {{c4::x}}, {{c5::y}}, {{c6::z}}, {{c7::bstate}})",
      "Body": "Push a KEY_MOUSE event onto the input queue, associating the given state data with it.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.ungetmouse"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::use_env}}({{c3::flag}})",
      "Body": "If used, this function should be called before initscr() or newterm are called.  When flag is False, the values of lines and columns specified in the terminfo database will be used, even if environment variables LINES and COLUMNS (used by default) are set, or if curses is running in a window (in which case default behavior would be to use the window size if LINES and COLUMNS are not set).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.use_env"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::use_default_colors}}()",
      "Body": "Allow use of default values for colors on terminals supporting this feature. Use this to support transparency in your application.  The default color is assigned to the color number -1. After calling this function,  init_pair(x, curses.COLOR_RED, -1) initializes, for instance, color pair x to a red foreground color on the default background.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.use_default_colors"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::wrapper}}({{c3::func}}, ...)",
      "Body": "Initialize curses and call another callable object, func, which should be the rest of your curses-using application.  If the application raises an exception, this function will restore the terminal to a sane state before re-raising the exception and generating a traceback.  The callable object func is then passed the main window 'stdscr' as its first argument, followed by any other arguments passed to wrapper().  Before calling func, wrapper() turns on cbreak mode, turns off echo, enables the terminal keypad, and initializes colors if the terminal has color support.  On exit (whether normally or by exception) it restores cooked mode, turns on echo, and disables the terminal keypad.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.wrapper"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::addch}}({{c3::ch}}[, {{c4::attr}}])",
      "Body": "Paint character ch at (y, x) with attributes attr, overwriting any character previously painter at that location.  By default, the character position and attributes are the current settings for the window object.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.addch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::addch}}({{c3::y}}, {{c4::x}}, {{c5::ch}}[, {{c6::attr}}])",
      "Body": "Paint character ch at (y, x) with attributes attr, overwriting any character previously painter at that location.  By default, the character position and attributes are the current settings for the window object.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::addnstr}}({{c3::str}}, {{c4::n}}[, {{c5::attr}}])",
      "Body": "Paint at most n characters of the character string str at (y, x) with attributes attr, overwriting anything previously on the display.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.addnstr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::addnstr}}({{c3::y}}, {{c4::x}}, {{c5::str}}, {{c6::n}}[, {{c7::attr}}])",
      "Body": "Paint at most n characters of the character string str at (y, x) with attributes attr, overwriting anything previously on the display.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::addstr}}({{c3::str}}[, {{c4::attr}}])",
      "Body": "Paint the character string str at (y, x) with attributes attr, overwriting anything previously on the display.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.addstr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::addstr}}({{c3::y}}, {{c4::x}}, {{c5::str}}[, {{c6::attr}}])",
      "Body": "Paint the character string str at (y, x) with attributes attr, overwriting anything previously on the display.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::attroff}}({{c3::attr}})",
      "Body": "Remove attribute attr from the background set applied to all writes to the current window.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.attroff"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::attron}}({{c3::attr}})",
      "Body": "Add attribute attr from the background set applied to all writes to the current window.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.attron"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::attrset}}({{c3::attr}})",
      "Body": "Set the background set of attributes to attr.  This set is initially 0 (no attributes).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.attrset"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::bkgd}}({{c3::ch}}[, {{c4::attr}}])",
      "Body": "Set the background property of the window to the character ch, with attributes attr.  The change is then applied to every character position in that window:",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.bkgd"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::bkgdset}}({{c3::ch}}[, {{c4::attr}}])",
      "Body": "Set the window's background.  A window's background consists of a character and any combination of attributes.  The attribute part of the background is combined (OR'ed) with all non-blank characters that are written into the window.  Both the character and attribute parts of the background are combined with the blank characters.  The background becomes a property of the character and moves with the character through any scrolling and insert/delete line/character operations.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.bkgdset"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::border}}([{{c3::ls}}[, {{c4::rs}}[, {{c5::ts}}[, {{c6::bs}}[, {{c7::tl}}[, {{c8::tr}}[, {{c9::bl}}[, {{c10::br}}]]]]]]]])",
      "Body": "Draw a border around the edges of the window. Each parameter specifies  the character to use for a specific part of the border; see the table below for more details.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.border"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::box}}([{{c3::vertch}}, {{c4::horch}}])",
      "Body": "Similar to border(), but both ls and rs are vertch and both ts and bs are horch.  The default corner characters are always used by this function.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.box"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::chgat}}({{c3::attr}})",
      "Body": "Set the attributes of num characters at the current cursor position, or at position (y, x) if supplied. If num is not given or is -1, the attribute will be set on all the characters to the end of the line.  This function moves cursor to position (y, x) if supplied. The changed line will be touched using the touchline() method so that the contents will be redisplayed by the next window refresh.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.chgat"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::chgat}}({{c3::num}}, {{c4::attr}})",
      "Body": "Set the attributes of num characters at the current cursor position, or at position (y, x) if supplied. If num is not given or is -1, the attribute will be set on all the characters to the end of the line.  This function moves cursor to position (y, x) if supplied. The changed line will be touched using the touchline() method so that the contents will be redisplayed by the next window refresh.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::chgat}}({{c3::y}}, {{c4::x}}, {{c5::attr}})",
      "Body": "Set the attributes of num characters at the current cursor position, or at position (y, x) if supplied. If num is not given or is -1, the attribute will be set on all the characters to the end of the line.  This function moves cursor to position (y, x) if supplied. The changed line will be touched using the touchline() method so that the contents will be redisplayed by the next window refresh.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::chgat}}({{c3::y}}, {{c4::x}}, {{c5::num}}, {{c6::attr}})",
      "Body": "Set the attributes of num characters at the current cursor position, or at position (y, x) if supplied. If num is not given or is -1, the attribute will be set on all the characters to the end of the line.  This function moves cursor to position (y, x) if supplied. The changed line will be touched using the touchline() method so that the contents will be redisplayed by the next window refresh.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::clear}}()",
      "Body": "Like erase(), but also cause the whole window to be repainted upon next call to refresh().",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.clear"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::clearok}}({{c3::flag}})",
      "Body": "If flag is True, the next call to refresh() will clear the window completely.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.clearok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::clrtobot}}()",
      "Body": "Erase from cursor to the end of the window: all lines below the cursor are deleted, and then the equivalent of clrtoeol() is performed.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.clrtobot"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::clrtoeol}}()",
      "Body": "Erase from cursor to the end of the line.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.clrtoeol"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::cursyncup}}()",
      "Body": "Update the current cursor position of all the ancestors of the window to reflect the current cursor position of the window.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.cursyncup"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::delch}}([{{c3::y}}, {{c4::x}}])",
      "Body": "Delete any character at (y, x).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.delch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::deleteln}}()",
      "Body": "Delete the line under the cursor. All following lines are moved up by one line.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.deleteln"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::derwin}}({{c3::begin_y}}, {{c4::begin_x}})",
      "Body": "An abbreviation for derive window, derwin() is the same as calling subwin(), except that begin_y and begin_x are relative to the origin of the window, rather than relative to the entire screen.  Return a window object for the derived window.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.derwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::derwin}}({{c3::nlines}}, {{c4::ncols}}, {{c5::begin_y}}, {{c6::begin_x}})",
      "Body": "An abbreviation for derive window, derwin() is the same as calling subwin(), except that begin_y and begin_x are relative to the origin of the window, rather than relative to the entire screen.  Return a window object for the derived window.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::echochar}}({{c3::ch}}[, {{c4::attr}}])",
      "Body": "Add character ch with attribute attr, and immediately  call refresh() on the window.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.echochar"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::enclose}}({{c3::y}}, {{c4::x}})",
      "Body": "Test whether the given pair of screen-relative character-cell coordinates are enclosed by the given window, returning True or False.  It is useful for determining what subset of the screen windows enclose the location of a mouse event.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.enclose"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::encoding}}",
      "Body": "Encoding used to encode method arguments (Unicode strings and characters). The encoding attribute is inherited from the parent window when a subwindow is created, for example with window.subwin(). By default, the locale encoding is used (see locale.getpreferredencoding()).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.encoding"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::erase}}()",
      "Body": "Clear the window.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.erase"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getbegyx}}()",
      "Body": "Return a tuple (y, x) of co-ordinates of upper-left corner.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.getbegyx"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getbkgd}}()",
      "Body": "Return the given window's current background character/attribute pair.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.getbkgd"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getch}}([{{c3::y}}, {{c4::x}}])",
      "Body": "Get a character. Note that the integer returned does not have to be in ASCII range: function keys, keypad keys and so on are represented by numbers higher than 255.  In no-delay mode, return -1 if there is no input, otherwise wait until a key is pressed.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.getch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::get_wch}}([{{c3::y}}, {{c4::x}}])",
      "Body": "Get a wide character. Return a character for most keys, or an integer for function keys, keypad keys, and other special keys. In no-delay mode, raise an exception if there is no input.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.get_wch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getkey}}([{{c3::y}}, {{c4::x}}])",
      "Body": "Get a character, returning a string instead of an integer, as getch() does. Function keys, keypad keys and other special keys return a multibyte string containing the key name.  In no-delay mode, raise an exception if there is no input.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.getkey"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getmaxyx}}()",
      "Body": "Return a tuple (y, x) of the height and width of the window.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.getmaxyx"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getparyx}}()",
      "Body": "Return the beginning coordinates of this window relative to its parent window as a tuple (y, x).  Return (-1, -1) if this window has no parent.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.getparyx"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getstr}}()",
      "Body": "Read a bytes object from the user, with primitive line editing capacity.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.getstr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getstr}}({{c3::n}})",
      "Body": "Read a bytes object from the user, with primitive line editing capacity.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getstr}}({{c3::y}}, {{c4::x}})",
      "Body": "Read a bytes object from the user, with primitive line editing capacity.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getstr}}({{c3::y}}, {{c4::x}}, {{c5::n}})",
      "Body": "Read a bytes object from the user, with primitive line editing capacity.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getyx}}()",
      "Body": "Return a tuple (y, x) of current cursor position  relative to the window's upper-left corner.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.getyx"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::hline}}({{c3::ch}}, {{c4::n}})",
      "Body": "Display a horizontal line starting at (y, x) with length n consisting of the character ch.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.hline"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::hline}}({{c3::y}}, {{c4::x}}, {{c5::ch}}, {{c6::n}})",
      "Body": "Display a horizontal line starting at (y, x) with length n consisting of the character ch.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::idcok}}({{c3::flag}})",
      "Body": "If flag is False, curses no longer considers using the hardware insert/delete character feature of the terminal; if flag is True, use of character insertion and deletion is enabled.  When curses is first initialized, use of character insert/delete is enabled by default.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.idcok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::idlok}}({{c3::flag}})",
      "Body": "If flag is True, curses will try and use hardware line editing facilities. Otherwise, line insertion/deletion are disabled.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.idlok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::immedok}}({{c3::flag}})",
      "Body": "If flag is True, any change in the window image automatically causes the window to be refreshed; you no longer have to call refresh() yourself. However, it may degrade performance considerably, due to repeated calls to wrefresh.  This option is disabled by default.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.immedok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::inch}}([{{c3::y}}, {{c4::x}}])",
      "Body": "Return the character at the given position in the window. The bottom 8 bits are the character proper, and upper bits are the attributes.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.inch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insch}}({{c3::ch}}[, {{c4::attr}}])",
      "Body": "Paint character ch at (y, x) with attributes attr, moving the line from position x right by one character.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.insch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insch}}({{c3::y}}, {{c4::x}}, {{c5::ch}}[, {{c6::attr}}])",
      "Body": "Paint character ch at (y, x) with attributes attr, moving the line from position x right by one character.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insdelln}}({{c3::nlines}})",
      "Body": "Insert nlines lines into the specified window above the current line.  The nlines bottom lines are lost.  For negative nlines, delete nlines lines starting with the one under the cursor, and move the remaining lines up.  The bottom nlines lines are cleared.  The current cursor position remains the same.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.insdelln"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insertln}}()",
      "Body": "Insert a blank line under the cursor. All following lines are moved down by one line.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.insertln"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insnstr}}({{c3::str}}, {{c4::n}}[, {{c5::attr}}])",
      "Body": "Insert a character string (as many characters as will fit on the line) before the character under the cursor, up to n characters.   If n is zero or negative, the entire string is inserted. All characters to the right of the cursor are shifted right, with the rightmost characters on the line being lost. The cursor position does not change (after moving to y, x, if specified).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.insnstr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insnstr}}({{c3::y}}, {{c4::x}}, {{c5::str}}, {{c6::n}}[, {{c7::attr}}])",
      "Body": "Insert a character string (as many characters as will fit on the line) before the character under the cursor, up to n characters.   If n is zero or negative, the entire string is inserted. All characters to the right of the cursor are shifted right, with the rightmost characters on the line being lost. The cursor position does not change (after moving to y, x, if specified).",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insstr}}({{c3::str}}[, {{c4::attr}}])",
      "Body": "Insert a character string (as many characters as will fit on the line) before the character under the cursor.  All characters to the right of the cursor are shifted right, with the rightmost characters on the line being lost.  The cursor position does not change (after moving to y, x, if specified).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.insstr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insstr}}({{c3::y}}, {{c4::x}}, {{c5::str}}[, {{c6::attr}}])",
      "Body": "Insert a character string (as many characters as will fit on the line) before the character under the cursor.  All characters to the right of the cursor are shifted right, with the rightmost characters on the line being lost.  The cursor position does not change (after moving to y, x, if specified).",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::instr}}([{{c3::n}}])",
      "Body": "Return a bytes object of characters, extracted from the window starting at the current cursor position, or at y, x if specified. Attributes are stripped from the characters.  If n is specified, instr() returns a string at most n characters long (exclusive of the trailing NUL).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.instr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::instr}}({{c3::y}}, {{c4::x}}[, {{c5::n}}])",
      "Body": "Return a bytes object of characters, extracted from the window starting at the current cursor position, or at y, x if specified. Attributes are stripped from the characters.  If n is specified, instr() returns a string at most n characters long (exclusive of the trailing NUL).",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::is_linetouched}}({{c3::line}})",
      "Body": "Return True if the specified line was modified since the last call to refresh(); otherwise return False.  Raise a curses.error exception if line is not valid for the given window.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.is_linetouched"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::is_wintouched}}()",
      "Body": "Return True if the specified window was modified since the last call to refresh(); otherwise return False.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.is_wintouched"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::keypad}}({{c3::flag}})",
      "Body": "If flag is True, escape sequences generated by some keys (keypad,  function keys) will be interpreted by curses. If flag is False, escape sequences will be left as is in the input stream.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.keypad"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::leaveok}}({{c3::flag}})",
      "Body": "If flag is True, cursor is left where it is on update, instead of being at cursor position.  This reduces cursor movement where possible. If possible the cursor will be made invisible.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.leaveok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::move}}({{c3::new_y}}, {{c4::new_x}})",
      "Body": "Move cursor to (new_y, new_x).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.move"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::mvderwin}}({{c3::y}}, {{c4::x}})",
      "Body": "Move the window inside its parent window.  The screen-relative parameters of the window are not changed.  This routine is used to display different parts of the parent window at the same physical position on the screen.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.mvderwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::mvwin}}({{c3::new_y}}, {{c4::new_x}})",
      "Body": "Move the window so its upper-left corner is at (new_y, new_x).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.mvwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::nodelay}}({{c3::flag}})",
      "Body": "If flag is True, getch() will be non-blocking.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.nodelay"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::notimeout}}({{c3::flag}})",
      "Body": "If flag is True, escape sequences will not be timed out.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.notimeout"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::noutrefresh}}()",
      "Body": "Mark for refresh but wait.  This function updates the data structure representing the desired state of the window, but does not force an update of the physical screen.  To accomplish that, call  doupdate().",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.noutrefresh"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::overlay}}({{c3::destwin}}[, {{c4::sminrow}}, {{c5::smincol}}, {{c6::dminrow}}, {{c7::dmincol}}, {{c8::dmaxrow}}, {{c9::dmaxcol}}])",
      "Body": "Overlay the window on top of destwin. The windows need not be the same size, only the overlapping region is copied. This copy is non-destructive, which means that the current background character does not overwrite the old contents of destwin.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.overlay"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::overwrite}}({{c3::destwin}}[, {{c4::sminrow}}, {{c5::smincol}}, {{c6::dminrow}}, {{c7::dmincol}}, {{c8::dmaxrow}}, {{c9::dmaxcol}}])",
      "Body": "Overwrite the window on top of destwin. The windows need not be the same size, in which case only the overlapping region is copied. This copy is destructive, which means that the current background character overwrites the old contents of destwin.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.overwrite"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::putwin}}({{c3::file}})",
      "Body": "Write all data associated with the window into the provided file object.  This information can be later retrieved using the getwin() function.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.putwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::redrawln}}({{c3::beg}}, {{c4::num}})",
      "Body": "Indicate that the num screen lines, starting at line beg, are corrupted and should be completely redrawn on the next refresh() call.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.redrawln"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::redrawwin}}()",
      "Body": "Touch the entire window, causing it to be completely redrawn on the next refresh() call.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.redrawwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::refresh}}([{{c3::pminrow}}, {{c4::pmincol}}, {{c5::sminrow}}, {{c6::smincol}}, {{c7::smaxrow}}, {{c8::smaxcol}}])",
      "Body": "Update the display immediately (sync actual screen with previous drawing/deleting methods).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.refresh"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::resize}}({{c3::nlines}}, {{c4::ncols}})",
      "Body": "Reallocate storage for a curses window to adjust its dimensions to the specified values.  If either dimension is larger than the current values, the window's data is filled with blanks that have the current background rendition (as set by bkgdset()) merged into them.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.resize"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::scroll}}([{{c3::lines}}=1])",
      "Body": "Scroll the screen or scrolling region upward by lines lines.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.scroll"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::scrollok}}({{c3::flag}})",
      "Body": "Control what happens when the cursor of a window is moved off the edge of the window or scrolling region, either as a result of a newline action on the bottom line, or typing the last character of the last line.  If flag is False, the cursor is left on the bottom line.  If flag is True, the window is scrolled up one line.  Note that in order to get the physical scrolling effect on the terminal, it is also necessary to call idlok().",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.scrollok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::setscrreg}}({{c3::top}}, {{c4::bottom}})",
      "Body": "Set the scrolling region from line top to line bottom. All scrolling actions will take place in this region.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.setscrreg"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::standend}}()",
      "Body": "Turn off the standout attribute.  On some terminals this has the side effect of turning off all attributes.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.standend"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::standout}}()",
      "Body": "Turn on attribute A_STANDOUT.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.standout"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::subpad}}({{c3::begin_y}}, {{c4::begin_x}})",
      "Body": "Return a sub-window, whose upper-left corner is at (begin_y, begin_x), and whose width/height is ncols/nlines.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.subpad"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::subpad}}({{c3::nlines}}, {{c4::ncols}}, {{c5::begin_y}}, {{c6::begin_x}})",
      "Body": "Return a sub-window, whose upper-left corner is at (begin_y, begin_x), and whose width/height is ncols/nlines.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::subwin}}({{c3::begin_y}}, {{c4::begin_x}})",
      "Body": "Return a sub-window, whose upper-left corner is at (begin_y, begin_x), and whose width/height is ncols/nlines.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.subwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::subwin}}({{c3::nlines}}, {{c4::ncols}}, {{c5::begin_y}}, {{c6::begin_x}})",
      "Body": "Return a sub-window, whose upper-left corner is at (begin_y, begin_x), and whose width/height is ncols/nlines.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::syncdown}}()",
      "Body": "Touch each location in the window that has been touched in any of its ancestor windows.  This routine is called by refresh(), so it should almost never be necessary to call it manually.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.syncdown"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::syncok}}({{c3::flag}})",
      "Body": "If flag is True, then syncup() is called automatically whenever there is a change in the window.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.syncok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::syncup}}()",
      "Body": "Touch all locations in ancestors of the window that have been changed in  the window.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.syncup"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::timeout}}({{c3::delay}})",
      "Body": "Set blocking or non-blocking read behavior for the window.  If delay is negative, blocking read is used (which will wait indefinitely for input).  If delay is zero, then non-blocking read is used, and getch() will return -1 if no input is waiting.  If delay is positive, then getch() will block for delay milliseconds, and return -1 if there is still no input at the end of that time.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.timeout"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::touchline}}({{c3::start}}, {{c4::count}}[, {{c5::changed}}])",
      "Body": "Pretend count lines have been changed, starting with line start.  If changed is supplied, it specifies whether the affected lines are marked as having been changed (changed=True) or unchanged (changed=False).",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.touchline"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::touchwin}}()",
      "Body": "Pretend the whole window has been changed, for purposes of drawing optimizations.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.touchwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::untouchwin}}()",
      "Body": "Mark all lines in  the  window  as unchanged since the last call to refresh().",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.untouchwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::vline}}({{c3::ch}}, {{c4::n}})",
      "Body": "Display a vertical line starting at (y, x) with length n consisting of the character ch.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.window.vline"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::vline}}({{c3::y}}, {{c4::x}}, {{c5::ch}}, {{c6::n}})",
      "Body": "Display a vertical line starting at (y, x) with length n consisting of the character ch.",
      "Link": "https://docs.python.org/3/library/curses.html#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ERR}}",
      "Body": "Some curses routines  that  return  an integer, such as  getch(), return ERR upon failure.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.ERR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::OK}}",
      "Body": "Some curses routines  that  return  an integer, such as  napms(), return OK upon success.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.OK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::version}}",
      "Body": "A bytes object representing the current version of the module.  Also available as __version__.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.version"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::textpad}}.{{c3::rectangle}}({{c4::win}}, {{c5::uly}}, {{c6::ulx}}, {{c7::lry}}, {{c8::lrx}})",
      "Body": "Draw a rectangle.  The first argument must be a window object; the remaining arguments are coordinates relative to that window.  The second and third arguments are the y and x coordinates of the upper left hand corner of the rectangle to be drawn; the fourth and fifth arguments are the y and x coordinates of the lower right hand corner. The rectangle will be drawn using VT100/IBM PC forms characters on terminals that make this possible (including xterm and most other software terminal emulators).  Otherwise it will be drawn with ASCII  dashes, vertical bars, and plus signs.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.textpad.rectangle"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::curses}}.{{c3::textpad}}.{{c4::Textbox}}({{c5::win}})",
      "Body": "Return a textbox widget object.  The win argument should be a curses window object in which the textbox is to be contained. The edit cursor of the textbox is initially located at the upper left hand corner of the containing window, with coordinates (0, 0). The instance's stripspaces flag is initially on.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.textpad.Textbox"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::textpad}}.{{c3::Textbox}}.{{c4::edit}}([{{c5::validator}}])",
      "Body": "This is the entry point you will normally use.  It accepts editing keystrokes until one of the termination keystrokes is entered.  If validator is supplied, it must be a function.  It will be called for each keystroke entered with the keystroke as a parameter; command dispatch is done on the result. This method returns the window contents as a string; whether blanks in the window are included is affected by the stripspaces attribute.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.textpad.Textbox.edit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::textpad}}.{{c3::Textbox}}.{{c4::do_command}}({{c5::ch}})",
      "Body": "Process a single command keystroke.  Here are the supported special keystrokes:",
      "Link": "https://docs.python.org/3/library/curses.html#curses.textpad.Textbox.do_command"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::textpad}}.{{c3::Textbox}}.{{c4::gather}}()",
      "Body": "Return the window contents as a string; whether blanks in the window are included is affected by the stripspaces member.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.textpad.Textbox.gather"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::textpad}}.{{c3::Textbox}}.{{c4::stripspaces}}",
      "Body": "This attribute is a flag which controls the interpretation of blanks in the window.  When it is on, trailing blanks on each line are ignored; any cursor motion that would land the cursor on a trailing blank goes to the end of that line instead, and trailing blanks are stripped when the window contents are gathered.",
      "Link": "https://docs.python.org/3/library/curses.html#curses.textpad.Textbox.stripspaces"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "exception",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::exception}} {{c2::curses}}.{{c3::error}}",
      "Body": "Exception raised when a curses library function returns an error.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.error"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::baudrate}}()",
      "Body": "Return the output speed of the terminal in bits per second.  On software terminal emulators it will have a fixed high value. Included for historical reasons; in former times, it was used to  write output loops for time delays and occasionally to change interfaces depending on the line speed.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.baudrate"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::beep}}()",
      "Body": "Emit a short attention sound.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.beep"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::can_change_color}}()",
      "Body": "Return True or False, depending on whether the programmer can change the colors displayed by the terminal.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.can_change_color"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::cbreak}}()",
      "Body": "Enter cbreak mode.  In cbreak mode (sometimes called rare mode) normal tty line buffering is turned off and characters are available to be read one by one. However, unlike raw mode, special characters (interrupt, quit, suspend, and flow control) retain their effects on the tty driver and calling program.  Calling first raw() then cbreak() leaves the terminal in cbreak mode.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.cbreak"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::color_content}}({{c3::color_number}})",
      "Body": "Return the intensity of the red, green, and blue (RGB) components in the color color_number, which must be between 0 and COLORS.  Return a 3-tuple, containing the R,G,B values for the given color, which will be between 0 (no component) and 1000 (maximum amount of component).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.color_content"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::color_pair}}({{c3::color_number}})",
      "Body": "Return the attribute value for displaying text in the specified color.  This attribute value can be combined with A_STANDOUT, A_REVERSE, and the other A_* attributes.  pair_number() is the counterpart to this function.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.color_pair"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::curs_set}}({{c3::visibility}})",
      "Body": "Set the cursor state.  visibility can be set to 0, 1, or 2, for invisible, normal, or very visible.  If the terminal supports the visibility requested, return the previous cursor state; otherwise raise an exception.  On many terminals, the visible mode is an underline cursor and the very visible mode is a block cursor.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.curs_set"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::def_prog_mode}}()",
      "Body": "Save the current terminal mode as the program mode, the mode when the running program is using curses.  (Its counterpart is the shell mode, for when the program is not in curses.)  Subsequent calls to reset_prog_mode() will restore this mode.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.def_prog_mode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::def_shell_mode}}()",
      "Body": "Save the current terminal mode as the shell mode, the mode when the running program is not using curses.  (Its counterpart is the program mode, when the program is using curses capabilities.) Subsequent calls to reset_shell_mode() will restore this mode.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.def_shell_mode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::delay_output}}({{c3::ms}})",
      "Body": "Insert an ms millisecond pause in output.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.delay_output"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::doupdate}}()",
      "Body": "Update the physical screen.  The curses library keeps two data structures, one representing the current physical screen contents and a virtual screen representing the desired next state.  The doupdate() ground updates the physical screen to match the virtual screen.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.doupdate"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::echo}}()",
      "Body": "Enter echo mode.  In echo mode, each character input is echoed to the screen as it is entered.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.echo"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::endwin}}()",
      "Body": "De-initialize the library, and return terminal to normal status.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.endwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::erasechar}}()",
      "Body": "Return the user's current erase character as a one-byte bytes object.  Under Unix operating systems this is a property of the controlling tty of the curses program, and is not set by the curses library itself.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.erasechar"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::filter}}()",
      "Body": "The filter() routine, if used, must be called before initscr() is called.  The effect is that, during those calls, LINES is set to 1; the capabilities clear, cup, cud, cud1, cuu1, cuu, vpa are disabled; and the home string is set to the value of cr. The effect is that the cursor is confined to the current line, and so are screen updates.  This may be used for enabling character-at-a-time  line editing without touching the rest of the screen.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.filter"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::flash}}()",
      "Body": "Flash the screen.  That is, change it to reverse-video and then change it back in a short interval.  Some people prefer such as 'visible bell' to the audible attention signal produced by beep().",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.flash"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::flushinp}}()",
      "Body": "Flush all input buffers.  This throws away any  typeahead  that  has been typed by the user and has not yet been processed by the program.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.flushinp"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::getmouse}}()",
      "Body": "After getch() returns KEY_MOUSE to signal a mouse event, this method should be call to retrieve the queued mouse event, represented as a 5-tuple (id, x, y, z, bstate). id is an ID value used to distinguish multiple devices, and x, y, z are the event's coordinates.  (z is currently unused.)  bstate is an integer value whose bits will be set to indicate the type of event, and will be the bitwise OR of one or more of the following constants, where n is the button number from 1 to 4: BUTTONn_PRESSED, BUTTONn_RELEASED, BUTTONn_CLICKED, BUTTONn_DOUBLE_CLICKED, BUTTONn_TRIPLE_CLICKED, BUTTON_SHIFT, BUTTON_CTRL, BUTTON_ALT.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.getmouse"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::getsyx}}()",
      "Body": "Return the current coordinates of the virtual screen cursor as a tuple (y, x).  If leaveok is currently True, then return (-1, -1).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.getsyx"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::getwin}}({{c3::file}})",
      "Body": "Read window related data stored in the file by an earlier putwin() call. The routine then creates and initializes a new window using that data, returning the new window object.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.getwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::has_colors}}()",
      "Body": "Return True if the terminal can display colors; otherwise, return False.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.has_colors"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::has_ic}}()",
      "Body": "Return True if the terminal has insert- and delete-character capabilities. This function is included for historical reasons only, as all modern software terminal emulators have such capabilities.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.has_ic"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::has_il}}()",
      "Body": "Return True if the terminal has insert- and delete-line capabilities, or can simulate  them  using scrolling regions. This function is included for historical reasons only, as all modern software terminal emulators have such capabilities.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.has_il"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::has_key}}({{c3::ch}})",
      "Body": "Take a key value ch, and return True if the current terminal type recognizes a key with that value.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.has_key"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::halfdelay}}({{c3::tenths}})",
      "Body": "Used for half-delay mode, which is similar to cbreak mode in that characters typed by the user are immediately available to the program. However, after blocking for tenths tenths of seconds, raise an exception if nothing has been typed.  The value of tenths must be a number between 1 and 255.  Use nocbreak() to leave half-delay mode.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.halfdelay"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::init_color}}({{c3::color_number}}, {{c4::r}}, {{c5::g}}, {{c6::b}})",
      "Body": "Change the definition of a color, taking the number of the color to be changed followed by three RGB values (for the amounts of red, green, and blue components).  The value of color_number must be between 0 and COLORS.  Each of r, g, b, must be a value between 0 and 1000.  When init_color() is used, all occurrences of that color on the screen immediately change to the new definition.  This function is a no-op on most terminals; it is active only if can_change_color() returns True.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.init_color"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::init_pair}}({{c3::pair_number}}, {{c4::fg}}, {{c5::bg}})",
      "Body": "Change the definition of a color-pair.  It takes three arguments: the number of the color-pair to be changed, the foreground color number, and the background color number.  The value of pair_number must be between 1 and COLOR_PAIRS - 1 (the 0 color pair is wired to white on black and cannot be changed).  The value of fg and bg arguments must be between 0 and COLORS.  If the color-pair was previously initialized, the screen is refreshed and all occurrences of that color-pair are changed to the new definition.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.init_pair"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::initscr}}()",
      "Body": "Initialize the library. Return a window object which represents the whole screen.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.initscr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::is_term_resized}}({{c3::nlines}}, {{c4::ncols}})",
      "Body": "Return True if resize_term() would modify the window structure, False otherwise.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.is_term_resized"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::isendwin}}()",
      "Body": "Return True if endwin() has been called (that is, the  curses library has been deinitialized).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.isendwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::keyname}}({{c3::k}})",
      "Body": "Return the name of the key numbered k as a bytes object.  The name of a key generating printable ASCII character is the key's character.  The name of a control-key combination is a two-byte bytes object consisting of a caret (b'^') followed by the corresponding printable ASCII character.  The name of an alt-key combination (128255) is a bytes object consisting of the prefix b'M-' followed by the name of the corresponding ASCII character.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.keyname"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::killchar}}()",
      "Body": "Return the user's current line kill character as a one-byte bytes object. Under Unix operating systems this is a property of the controlling tty of the curses program, and is not set by the curses library itself.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.killchar"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::longname}}()",
      "Body": "Return a bytes object containing the terminfo long name field describing the current terminal.  The maximum length of a verbose description is 128 characters.  It is defined only after the call to initscr().",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.longname"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::meta}}({{c3::flag}})",
      "Body": "If flag is True, allow 8-bit characters to be input.  If flag is False,  allow only 7-bit chars.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.meta"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::mouseinterval}}({{c3::interval}})",
      "Body": "Set the maximum time in milliseconds that can elapse between press and release events in order for them to be recognized as a click, and return the previous interval value.  The default value is 200 msec, or one fifth of a second.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.mouseinterval"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::mousemask}}({{c3::mousemask}})",
      "Body": "Set the mouse events to be reported, and return a tuple (availmask, oldmask).   availmask indicates which of the specified mouse events can be reported; on complete failure it returns 0.  oldmask is the previous value of the given window's mouse event mask.  If this function is never called, no mouse events are ever reported.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.mousemask"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::napms}}({{c3::ms}})",
      "Body": "Sleep for ms milliseconds.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.napms"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::newpad}}({{c3::nlines}}, {{c4::ncols}})",
      "Body": "Create and return a pointer to a new pad data structure with the given number of lines and columns.  Return a pad as a window object.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.newpad"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::newwin}}({{c3::nlines}}, {{c4::ncols}})",
      "Body": "Return a new window, whose left-upper corner is at  (begin_y, begin_x), and whose height/width is  nlines/ncols.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.newwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::newwin}}({{c3::nlines}}, {{c4::ncols}}, {{c5::begin_y}}, {{c6::begin_x}})",
      "Body": "Return a new window, whose left-upper corner is at  (begin_y, begin_x), and whose height/width is  nlines/ncols.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::nl}}()",
      "Body": "Enter newline mode.  This mode translates the return key into newline on input, and translates newline into return and line-feed on output. Newline mode is initially on.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.nl"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::nocbreak}}()",
      "Body": "Leave cbreak mode.  Return to normal cooked mode with line buffering.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.nocbreak"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::noecho}}()",
      "Body": "Leave echo mode.  Echoing of input characters is turned off.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.noecho"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::nonl}}()",
      "Body": "Leave newline mode.  Disable translation of return into newline on input, and disable low-level translation of newline into newline/return on output (but this does not change the behavior of addch('\\n'), which always does the equivalent of return and line feed on the virtual screen).  With translation off, curses can sometimes speed up vertical motion a little; also, it will be able to detect the return key on input.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.nonl"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::noqiflush}}()",
      "Body": "When the noqiflush() routine is used, normal flush of input and output queues associated with the INTR, QUIT and SUSP characters will not be done.  You may want to call noqiflush() in a signal handler if you want output to continue as though the interrupt had not occurred, after the handler exits.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.noqiflush"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::noraw}}()",
      "Body": "Leave raw mode. Return to normal cooked mode with line buffering.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.noraw"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::pair_content}}({{c3::pair_number}})",
      "Body": "Return a tuple (fg, bg) containing the colors for the requested color pair. The value of pair_number must be between 1 and COLOR_PAIRS - 1.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.pair_content"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::pair_number}}({{c3::attr}})",
      "Body": "Return the number of the color-pair set by the attribute value attr. color_pair() is the counterpart to this function.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.pair_number"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::putp}}({{c3::str}})",
      "Body": "Equivalent to tputs(str, 1, putchar); emit the value of a specified terminfo capability for the current terminal.  Note that the output of putp() always goes to standard output.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.putp"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::qiflush}}([{{c3::flag}}])",
      "Body": "If flag is False, the effect is the same as calling noqiflush(). If flag is True, or no argument is provided, the queues will be flushed when these control characters are read.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.qiflush"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::raw}}()",
      "Body": "Enter raw mode.  In raw mode, normal line buffering and  processing of interrupt, quit, suspend, and flow control keys are turned off; characters are presented to curses input functions one by one.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.raw"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::reset_prog_mode}}()",
      "Body": "Restore the  terminal  to program mode, as previously saved  by def_prog_mode().",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.reset_prog_mode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::reset_shell_mode}}()",
      "Body": "Restore the  terminal  to shell mode, as previously saved  by def_shell_mode().",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.reset_shell_mode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::resetty}}()",
      "Body": "Restore the state of the terminal modes to what it was at the last call to savetty().",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.resetty"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::resize_term}}({{c3::nlines}}, {{c4::ncols}})",
      "Body": "Backend function used by resizeterm(), performing most of the work; when resizing the windows, resize_term() blank-fills the areas that are extended.  The calling application should fill in these areas with appropriate data.  The resize_term() function attempts to resize all windows.  However, due to the calling convention of pads, it is not possible to resize these without additional interaction with the application.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.resize_term"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::resizeterm}}({{c3::nlines}}, {{c4::ncols}})",
      "Body": "Resize the standard and current windows to the specified dimensions, and adjusts other bookkeeping data used by the curses library that record the window dimensions (in particular the SIGWINCH handler).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.resizeterm"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::savetty}}()",
      "Body": "Save the current state of the terminal modes in a buffer, usable by resetty().",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.savetty"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::setsyx}}({{c3::y}}, {{c4::x}})",
      "Body": "Set the virtual screen cursor to y, x. If y and x are both -1, then leaveok is set True.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.setsyx"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::setupterm}}({{c3::term}}={{c4::None}}, {{c5::fd}}=-1)",
      "Body": "Initialize the terminal.  term is a string giving the terminal name, or None; if omitted or None, the value of the TERM environment variable will be used.  fd is the file descriptor to which any initialization sequences will be sent; if not supplied or -1, the file descriptor for sys.stdout will be used.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.setupterm"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::start_color}}()",
      "Body": "Must be called if the programmer wants to use colors, and before any other color manipulation routine is called.  It is good practice to call this routine right after initscr().",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.start_color"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::termattrs}}()",
      "Body": "Return a logical OR of all video attributes supported by the terminal.  This information is useful when a curses program needs complete control over the appearance of the screen.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.termattrs"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::termname}}()",
      "Body": "Return the value of the environment variable TERM, as a bytes object, truncated to 14 characters.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.termname"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::tigetflag}}({{c3::capname}})",
      "Body": "Return the value of the Boolean capability corresponding to the terminfo capability name capname as an integer.  Return the value -1 if capname is not a Boolean capability, or 0 if it is canceled or absent from the terminal description.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.tigetflag"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::tigetnum}}({{c3::capname}})",
      "Body": "Return the value of the numeric capability corresponding to the terminfo capability name capname as an integer.  Return the value -2 if capname is not a numeric capability, or -1 if it is canceled or absent from the terminal description.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.tigetnum"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::tigetstr}}({{c3::capname}})",
      "Body": "Return the value of the string capability corresponding to the terminfo capability name capname as a bytes object.  Return None if capname is not a terminfo string capability, or is canceled or absent from the terminal description.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.tigetstr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::tparm}}({{c3::str}}[, ...])",
      "Body": "Instantiate the bytes object str with the supplied parameters, where str should be a parameterized string obtained from the terminfo database.  E.g. tparm(tigetstr(\"cup\"), 5, 3) could result in b'\\033[6;4H', the exact result depending on terminal type.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.tparm"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::typeahead}}({{c3::fd}})",
      "Body": "Specify that the file descriptor fd be used for typeahead checking.  If fd is -1, then no typeahead checking is done.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.typeahead"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::unctrl}}({{c3::ch}})",
      "Body": "Return a bytes object which is a printable representation of the character ch. Control characters are represented as a caret followed by the character, for example as b'^C'. Printing characters are left as they are.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.unctrl"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ungetch}}({{c3::ch}})",
      "Body": "Push ch so the next getch() will return it.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.ungetch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::update_lines_cols}}()",
      "Body": "Update LINES and COLS. Useful for detecting manual screen resize.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.update_lines_cols"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::unget_wch}}({{c3::ch}})",
      "Body": "Push ch so the next get_wch() will return it.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.unget_wch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ungetmouse}}({{c3::id}}, {{c4::x}}, {{c5::y}}, {{c6::z}}, {{c7::bstate}})",
      "Body": "Push a KEY_MOUSE event onto the input queue, associating the given state data with it.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.ungetmouse"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::use_env}}({{c3::flag}})",
      "Body": "If used, this function should be called before initscr() or newterm are called.  When flag is False, the values of lines and columns specified in the terminfo database will be used, even if environment variables LINES and COLUMNS (used by default) are set, or if curses is running in a window (in which case default behavior would be to use the window size if LINES and COLUMNS are not set).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.use_env"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::use_default_colors}}()",
      "Body": "Allow use of default values for colors on terminals supporting this feature. Use this to support transparency in your application.  The default color is assigned to the color number -1. After calling this function,  init_pair(x, curses.COLOR_RED, -1) initializes, for instance, color pair x to a red foreground color on the default background.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.use_default_colors"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::wrapper}}({{c3::func}}, ...)",
      "Body": "Initialize curses and call another callable object, func, which should be the rest of your curses-using application.  If the application raises an exception, this function will restore the terminal to a sane state before re-raising the exception and generating a traceback.  The callable object func is then passed the main window 'stdscr' as its first argument, followed by any other arguments passed to wrapper().  Before calling func, wrapper() turns on cbreak mode, turns off echo, enables the terminal keypad, and initializes colors if the terminal has color support.  On exit (whether normally or by exception) it restores cooked mode, turns on echo, and disables the terminal keypad.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.wrapper"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::addch}}({{c3::ch}}[, {{c4::attr}}])",
      "Body": "Paint character ch at (y, x) with attributes attr, overwriting any character previously painter at that location.  By default, the character position and attributes are the current settings for the window object.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.addch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::addch}}({{c3::y}}, {{c4::x}}, {{c5::ch}}[, {{c6::attr}}])",
      "Body": "Paint character ch at (y, x) with attributes attr, overwriting any character previously painter at that location.  By default, the character position and attributes are the current settings for the window object.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::addnstr}}({{c3::str}}, {{c4::n}}[, {{c5::attr}}])",
      "Body": "Paint at most n characters of the character string str at (y, x) with attributes attr, overwriting anything previously on the display.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.addnstr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::addnstr}}({{c3::y}}, {{c4::x}}, {{c5::str}}, {{c6::n}}[, {{c7::attr}}])",
      "Body": "Paint at most n characters of the character string str at (y, x) with attributes attr, overwriting anything previously on the display.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::addstr}}({{c3::str}}[, {{c4::attr}}])",
      "Body": "Paint the character string str at (y, x) with attributes attr, overwriting anything previously on the display.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.addstr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::addstr}}({{c3::y}}, {{c4::x}}, {{c5::str}}[, {{c6::attr}}])",
      "Body": "Paint the character string str at (y, x) with attributes attr, overwriting anything previously on the display.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::attroff}}({{c3::attr}})",
      "Body": "Remove attribute attr from the background set applied to all writes to the current window.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.attroff"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::attron}}({{c3::attr}})",
      "Body": "Add attribute attr from the background set applied to all writes to the current window.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.attron"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::attrset}}({{c3::attr}})",
      "Body": "Set the background set of attributes to attr.  This set is initially 0 (no attributes).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.attrset"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::bkgd}}({{c3::ch}}[, {{c4::attr}}])",
      "Body": "Set the background property of the window to the character ch, with attributes attr.  The change is then applied to every character position in that window:",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.bkgd"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::bkgdset}}({{c3::ch}}[, {{c4::attr}}])",
      "Body": "Set the window's background.  A window's background consists of a character and any combination of attributes.  The attribute part of the background is combined (OR'ed) with all non-blank characters that are written into the window.  Both the character and attribute parts of the background are combined with the blank characters.  The background becomes a property of the character and moves with the character through any scrolling and insert/delete line/character operations.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.bkgdset"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::border}}([{{c3::ls}}[, {{c4::rs}}[, {{c5::ts}}[, {{c6::bs}}[, {{c7::tl}}[, {{c8::tr}}[, {{c9::bl}}[, {{c10::br}}]]]]]]]])",
      "Body": "Draw a border around the edges of the window. Each parameter specifies  the character to use for a specific part of the border; see the table below for more details.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.border"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::box}}([{{c3::vertch}}, {{c4::horch}}])",
      "Body": "Similar to border(), but both ls and rs are vertch and both ts and bs are horch.  The default corner characters are always used by this function.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.box"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::chgat}}({{c3::attr}})",
      "Body": "Set the attributes of num characters at the current cursor position, or at position (y, x) if supplied. If num is not given or is -1, the attribute will be set on all the characters to the end of the line.  This function moves cursor to position (y, x) if supplied. The changed line will be touched using the touchline() method so that the contents will be redisplayed by the next window refresh.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.chgat"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::chgat}}({{c3::num}}, {{c4::attr}})",
      "Body": "Set the attributes of num characters at the current cursor position, or at position (y, x) if supplied. If num is not given or is -1, the attribute will be set on all the characters to the end of the line.  This function moves cursor to position (y, x) if supplied. The changed line will be touched using the touchline() method so that the contents will be redisplayed by the next window refresh.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::chgat}}({{c3::y}}, {{c4::x}}, {{c5::attr}})",
      "Body": "Set the attributes of num characters at the current cursor position, or at position (y, x) if supplied. If num is not given or is -1, the attribute will be set on all the characters to the end of the line.  This function moves cursor to position (y, x) if supplied. The changed line will be touched using the touchline() method so that the contents will be redisplayed by the next window refresh.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::chgat}}({{c3::y}}, {{c4::x}}, {{c5::num}}, {{c6::attr}})",
      "Body": "Set the attributes of num characters at the current cursor position, or at position (y, x) if supplied. If num is not given or is -1, the attribute will be set on all the characters to the end of the line.  This function moves cursor to position (y, x) if supplied. The changed line will be touched using the touchline() method so that the contents will be redisplayed by the next window refresh.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::clear}}()",
      "Body": "Like erase(), but also cause the whole window to be repainted upon next call to refresh().",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.clear"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::clearok}}({{c3::flag}})",
      "Body": "If flag is True, the next call to refresh() will clear the window completely.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.clearok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::clrtobot}}()",
      "Body": "Erase from cursor to the end of the window: all lines below the cursor are deleted, and then the equivalent of clrtoeol() is performed.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.clrtobot"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::clrtoeol}}()",
      "Body": "Erase from cursor to the end of the line.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.clrtoeol"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::cursyncup}}()",
      "Body": "Update the current cursor position of all the ancestors of the window to reflect the current cursor position of the window.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.cursyncup"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::delch}}([{{c3::y}}, {{c4::x}}])",
      "Body": "Delete any character at (y, x).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.delch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::deleteln}}()",
      "Body": "Delete the line under the cursor. All following lines are moved up by one line.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.deleteln"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::derwin}}({{c3::begin_y}}, {{c4::begin_x}})",
      "Body": "An abbreviation for derive window, derwin() is the same as calling subwin(), except that begin_y and begin_x are relative to the origin of the window, rather than relative to the entire screen.  Return a window object for the derived window.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.derwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::derwin}}({{c3::nlines}}, {{c4::ncols}}, {{c5::begin_y}}, {{c6::begin_x}})",
      "Body": "An abbreviation for derive window, derwin() is the same as calling subwin(), except that begin_y and begin_x are relative to the origin of the window, rather than relative to the entire screen.  Return a window object for the derived window.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::echochar}}({{c3::ch}}[, {{c4::attr}}])",
      "Body": "Add character ch with attribute attr, and immediately  call refresh() on the window.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.echochar"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::enclose}}({{c3::y}}, {{c4::x}})",
      "Body": "Test whether the given pair of screen-relative character-cell coordinates are enclosed by the given window, returning True or False.  It is useful for determining what subset of the screen windows enclose the location of a mouse event.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.enclose"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::encoding}}",
      "Body": "Encoding used to encode method arguments (Unicode strings and characters). The encoding attribute is inherited from the parent window when a subwindow is created, for example with window.subwin(). By default, the locale encoding is used (see locale.getpreferredencoding()).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.encoding"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::erase}}()",
      "Body": "Clear the window.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.erase"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getbegyx}}()",
      "Body": "Return a tuple (y, x) of co-ordinates of upper-left corner.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.getbegyx"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getbkgd}}()",
      "Body": "Return the given window's current background character/attribute pair.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.getbkgd"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getch}}([{{c3::y}}, {{c4::x}}])",
      "Body": "Get a character. Note that the integer returned does not have to be in ASCII range: function keys, keypad keys and so on are represented by numbers higher than 255.  In no-delay mode, return -1 if there is no input, otherwise wait until a key is pressed.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.getch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::get_wch}}([{{c3::y}}, {{c4::x}}])",
      "Body": "Get a wide character. Return a character for most keys, or an integer for function keys, keypad keys, and other special keys. In no-delay mode, raise an exception if there is no input.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.get_wch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getkey}}([{{c3::y}}, {{c4::x}}])",
      "Body": "Get a character, returning a string instead of an integer, as getch() does. Function keys, keypad keys and other special keys return a multibyte string containing the key name.  In no-delay mode, raise an exception if there is no input.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.getkey"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getmaxyx}}()",
      "Body": "Return a tuple (y, x) of the height and width of the window.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.getmaxyx"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getparyx}}()",
      "Body": "Return the beginning coordinates of this window relative to its parent window as a tuple (y, x).  Return (-1, -1) if this window has no parent.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.getparyx"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getstr}}()",
      "Body": "Read a bytes object from the user, with primitive line editing capacity.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.getstr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getstr}}({{c3::n}})",
      "Body": "Read a bytes object from the user, with primitive line editing capacity.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getstr}}({{c3::y}}, {{c4::x}})",
      "Body": "Read a bytes object from the user, with primitive line editing capacity.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getstr}}({{c3::y}}, {{c4::x}}, {{c5::n}})",
      "Body": "Read a bytes object from the user, with primitive line editing capacity.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::getyx}}()",
      "Body": "Return a tuple (y, x) of current cursor position  relative to the window's upper-left corner.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.getyx"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::hline}}({{c3::ch}}, {{c4::n}})",
      "Body": "Display a horizontal line starting at (y, x) with length n consisting of the character ch.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.hline"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::hline}}({{c3::y}}, {{c4::x}}, {{c5::ch}}, {{c6::n}})",
      "Body": "Display a horizontal line starting at (y, x) with length n consisting of the character ch.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::idcok}}({{c3::flag}})",
      "Body": "If flag is False, curses no longer considers using the hardware insert/delete character feature of the terminal; if flag is True, use of character insertion and deletion is enabled.  When curses is first initialized, use of character insert/delete is enabled by default.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.idcok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::idlok}}({{c3::flag}})",
      "Body": "If flag is True, curses will try and use hardware line editing facilities. Otherwise, line insertion/deletion are disabled.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.idlok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::immedok}}({{c3::flag}})",
      "Body": "If flag is True, any change in the window image automatically causes the window to be refreshed; you no longer have to call refresh() yourself. However, it may degrade performance considerably, due to repeated calls to wrefresh.  This option is disabled by default.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.immedok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::inch}}([{{c3::y}}, {{c4::x}}])",
      "Body": "Return the character at the given position in the window. The bottom 8 bits are the character proper, and upper bits are the attributes.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.inch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insch}}({{c3::ch}}[, {{c4::attr}}])",
      "Body": "Paint character ch at (y, x) with attributes attr, moving the line from position x right by one character.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.insch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insch}}({{c3::y}}, {{c4::x}}, {{c5::ch}}[, {{c6::attr}}])",
      "Body": "Paint character ch at (y, x) with attributes attr, moving the line from position x right by one character.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insdelln}}({{c3::nlines}})",
      "Body": "Insert nlines lines into the specified window above the current line.  The nlines bottom lines are lost.  For negative nlines, delete nlines lines starting with the one under the cursor, and move the remaining lines up.  The bottom nlines lines are cleared.  The current cursor position remains the same.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.insdelln"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insertln}}()",
      "Body": "Insert a blank line under the cursor. All following lines are moved down by one line.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.insertln"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insnstr}}({{c3::str}}, {{c4::n}}[, {{c5::attr}}])",
      "Body": "Insert a character string (as many characters as will fit on the line) before the character under the cursor, up to n characters.   If n is zero or negative, the entire string is inserted. All characters to the right of the cursor are shifted right, with the rightmost characters on the line being lost. The cursor position does not change (after moving to y, x, if specified).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.insnstr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insnstr}}({{c3::y}}, {{c4::x}}, {{c5::str}}, {{c6::n}}[, {{c7::attr}}])",
      "Body": "Insert a character string (as many characters as will fit on the line) before the character under the cursor, up to n characters.   If n is zero or negative, the entire string is inserted. All characters to the right of the cursor are shifted right, with the rightmost characters on the line being lost. The cursor position does not change (after moving to y, x, if specified).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insstr}}({{c3::str}}[, {{c4::attr}}])",
      "Body": "Insert a character string (as many characters as will fit on the line) before the character under the cursor.  All characters to the right of the cursor are shifted right, with the rightmost characters on the line being lost.  The cursor position does not change (after moving to y, x, if specified).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.insstr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::insstr}}({{c3::y}}, {{c4::x}}, {{c5::str}}[, {{c6::attr}}])",
      "Body": "Insert a character string (as many characters as will fit on the line) before the character under the cursor.  All characters to the right of the cursor are shifted right, with the rightmost characters on the line being lost.  The cursor position does not change (after moving to y, x, if specified).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::instr}}([{{c3::n}}])",
      "Body": "Return a bytes object of characters, extracted from the window starting at the current cursor position, or at y, x if specified. Attributes are stripped from the characters.  If n is specified, instr() returns a string at most n characters long (exclusive of the trailing NUL).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.instr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::instr}}({{c3::y}}, {{c4::x}}[, {{c5::n}}])",
      "Body": "Return a bytes object of characters, extracted from the window starting at the current cursor position, or at y, x if specified. Attributes are stripped from the characters.  If n is specified, instr() returns a string at most n characters long (exclusive of the trailing NUL).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::is_linetouched}}({{c3::line}})",
      "Body": "Return True if the specified line was modified since the last call to refresh(); otherwise return False.  Raise a curses.error exception if line is not valid for the given window.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.is_linetouched"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::is_wintouched}}()",
      "Body": "Return True if the specified window was modified since the last call to refresh(); otherwise return False.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.is_wintouched"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::keypad}}({{c3::flag}})",
      "Body": "If flag is True, escape sequences generated by some keys (keypad,  function keys) will be interpreted by curses. If flag is False, escape sequences will be left as is in the input stream.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.keypad"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::leaveok}}({{c3::flag}})",
      "Body": "If flag is True, cursor is left where it is on update, instead of being at cursor position.  This reduces cursor movement where possible. If possible the cursor will be made invisible.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.leaveok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::move}}({{c3::new_y}}, {{c4::new_x}})",
      "Body": "Move cursor to (new_y, new_x).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.move"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::mvderwin}}({{c3::y}}, {{c4::x}})",
      "Body": "Move the window inside its parent window.  The screen-relative parameters of the window are not changed.  This routine is used to display different parts of the parent window at the same physical position on the screen.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.mvderwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::mvwin}}({{c3::new_y}}, {{c4::new_x}})",
      "Body": "Move the window so its upper-left corner is at (new_y, new_x).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.mvwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::nodelay}}({{c3::flag}})",
      "Body": "If flag is True, getch() will be non-blocking.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.nodelay"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::notimeout}}({{c3::flag}})",
      "Body": "If flag is True, escape sequences will not be timed out.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.notimeout"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::noutrefresh}}()",
      "Body": "Mark for refresh but wait.  This function updates the data structure representing the desired state of the window, but does not force an update of the physical screen.  To accomplish that, call  doupdate().",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.noutrefresh"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::overlay}}({{c3::destwin}}[, {{c4::sminrow}}, {{c5::smincol}}, {{c6::dminrow}}, {{c7::dmincol}}, {{c8::dmaxrow}}, {{c9::dmaxcol}}])",
      "Body": "Overlay the window on top of destwin. The windows need not be the same size, only the overlapping region is copied. This copy is non-destructive, which means that the current background character does not overwrite the old contents of destwin.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.overlay"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::overwrite}}({{c3::destwin}}[, {{c4::sminrow}}, {{c5::smincol}}, {{c6::dminrow}}, {{c7::dmincol}}, {{c8::dmaxrow}}, {{c9::dmaxcol}}])",
      "Body": "Overwrite the window on top of destwin. The windows need not be the same size, in which case only the overlapping region is copied. This copy is destructive, which means that the current background character overwrites the old contents of destwin.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.overwrite"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::putwin}}({{c3::file}})",
      "Body": "Write all data associated with the window into the provided file object.  This information can be later retrieved using the getwin() function.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.putwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::redrawln}}({{c3::beg}}, {{c4::num}})",
      "Body": "Indicate that the num screen lines, starting at line beg, are corrupted and should be completely redrawn on the next refresh() call.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.redrawln"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::redrawwin}}()",
      "Body": "Touch the entire window, causing it to be completely redrawn on the next refresh() call.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.redrawwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::refresh}}([{{c3::pminrow}}, {{c4::pmincol}}, {{c5::sminrow}}, {{c6::smincol}}, {{c7::smaxrow}}, {{c8::smaxcol}}])",
      "Body": "Update the display immediately (sync actual screen with previous drawing/deleting methods).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.refresh"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::resize}}({{c3::nlines}}, {{c4::ncols}})",
      "Body": "Reallocate storage for a curses window to adjust its dimensions to the specified values.  If either dimension is larger than the current values, the window's data is filled with blanks that have the current background rendition (as set by bkgdset()) merged into them.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.resize"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::scroll}}([{{c3::lines}}=1])",
      "Body": "Scroll the screen or scrolling region upward by lines lines.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.scroll"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::scrollok}}({{c3::flag}})",
      "Body": "Control what happens when the cursor of a window is moved off the edge of the window or scrolling region, either as a result of a newline action on the bottom line, or typing the last character of the last line.  If flag is False, the cursor is left on the bottom line.  If flag is True, the window is scrolled up one line.  Note that in order to get the physical scrolling effect on the terminal, it is also necessary to call idlok().",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.scrollok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::setscrreg}}({{c3::top}}, {{c4::bottom}})",
      "Body": "Set the scrolling region from line top to line bottom. All scrolling actions will take place in this region.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.setscrreg"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::standend}}()",
      "Body": "Turn off the standout attribute.  On some terminals this has the side effect of turning off all attributes.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.standend"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::standout}}()",
      "Body": "Turn on attribute A_STANDOUT.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.standout"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::subpad}}({{c3::begin_y}}, {{c4::begin_x}})",
      "Body": "Return a sub-window, whose upper-left corner is at (begin_y, begin_x), and whose width/height is ncols/nlines.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.subpad"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::subpad}}({{c3::nlines}}, {{c4::ncols}}, {{c5::begin_y}}, {{c6::begin_x}})",
      "Body": "Return a sub-window, whose upper-left corner is at (begin_y, begin_x), and whose width/height is ncols/nlines.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::subwin}}({{c3::begin_y}}, {{c4::begin_x}})",
      "Body": "Return a sub-window, whose upper-left corner is at (begin_y, begin_x), and whose width/height is ncols/nlines.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.subwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::subwin}}({{c3::nlines}}, {{c4::ncols}}, {{c5::begin_y}}, {{c6::begin_x}})",
      "Body": "Return a sub-window, whose upper-left corner is at (begin_y, begin_x), and whose width/height is ncols/nlines.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::syncdown}}()",
      "Body": "Touch each location in the window that has been touched in any of its ancestor windows.  This routine is called by refresh(), so it should almost never be necessary to call it manually.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.syncdown"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::syncok}}({{c3::flag}})",
      "Body": "If flag is True, then syncup() is called automatically whenever there is a change in the window.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.syncok"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::syncup}}()",
      "Body": "Touch all locations in ancestors of the window that have been changed in  the window.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.syncup"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::timeout}}({{c3::delay}})",
      "Body": "Set blocking or non-blocking read behavior for the window.  If delay is negative, blocking read is used (which will wait indefinitely for input).  If delay is zero, then non-blocking read is used, and getch() will return -1 if no input is waiting.  If delay is positive, then getch() will block for delay milliseconds, and return -1 if there is still no input at the end of that time.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.timeout"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::touchline}}({{c3::start}}, {{c4::count}}[, {{c5::changed}}])",
      "Body": "Pretend count lines have been changed, starting with line start.  If changed is supplied, it specifies whether the affected lines are marked as having been changed (changed=True) or unchanged (changed=False).",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.touchline"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::touchwin}}()",
      "Body": "Pretend the whole window has been changed, for purposes of drawing optimizations.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.touchwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::untouchwin}}()",
      "Body": "Mark all lines in  the  window  as unchanged since the last call to refresh().",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.untouchwin"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::vline}}({{c3::ch}}, {{c4::n}})",
      "Body": "Display a vertical line starting at (y, x) with length n consisting of the character ch.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.window.vline"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::window}}.{{c2::vline}}({{c3::y}}, {{c4::x}}, {{c5::ch}}, {{c6::n}})",
      "Body": "Display a vertical line starting at (y, x) with length n consisting of the character ch.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#window-objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ERR}}",
      "Body": "Some curses routines  that  return  an integer, such as  getch(), return ERR upon failure.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.ERR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::OK}}",
      "Body": "Some curses routines  that  return  an integer, such as  napms(), return OK upon success.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.OK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::version}}",
      "Body": "A bytes object representing the current version of the module.  Also available as __version__.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.version"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::textpad}}.{{c3::rectangle}}({{c4::win}}, {{c5::uly}}, {{c6::ulx}}, {{c7::lry}}, {{c8::lrx}})",
      "Body": "Draw a rectangle.  The first argument must be a window object; the remaining arguments are coordinates relative to that window.  The second and third arguments are the y and x coordinates of the upper left hand corner of the rectangle to be drawn; the fourth and fifth arguments are the y and x coordinates of the lower right hand corner. The rectangle will be drawn using VT100/IBM PC forms characters on terminals that make this possible (including xterm and most other software terminal emulators).  Otherwise it will be drawn with ASCII  dashes, vertical bars, and plus signs.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.textpad.rectangle"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::curses}}.{{c3::textpad}}.{{c4::Textbox}}({{c5::win}})",
      "Body": "Return a textbox widget object.  The win argument should be a curses window object in which the textbox is to be contained. The edit cursor of the textbox is initially located at the upper left hand corner of the containing window, with coordinates (0, 0). The instance's stripspaces flag is initially on.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.textpad.Textbox"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::textpad}}.{{c3::Textbox}}.{{c4::edit}}([{{c5::validator}}])",
      "Body": "This is the entry point you will normally use.  It accepts editing keystrokes until one of the termination keystrokes is entered.  If validator is supplied, it must be a function.  It will be called for each keystroke entered with the keystroke as a parameter; command dispatch is done on the result. This method returns the window contents as a string; whether blanks in the window are included is affected by the stripspaces attribute.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.textpad.Textbox.edit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::textpad}}.{{c3::Textbox}}.{{c4::do_command}}({{c5::ch}})",
      "Body": "Process a single command keystroke.  Here are the supported special keystrokes:",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.textpad.Textbox.do_command"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::textpad}}.{{c3::Textbox}}.{{c4::gather}}()",
      "Body": "Return the window contents as a string; whether blanks in the window are included is affected by the stripspaces member.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.textpad.Textbox.gather"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::textpad}}.{{c3::Textbox}}.{{c4::stripspaces}}",
      "Body": "This attribute is a flag which controls the interpretation of blanks in the window.  When it is on, trailing blanks on each line are ignored; any cursor motion that would land the cursor on a trailing blank goes to the end of that line instead, and trailing blanks are stripped when the window contents are gathered.",
      "Link": "https://docs.python.org/3/library/curses.html#module-curses.textpad#curses.textpad.Textbox.stripspaces"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::isalnum}}({{c4::c}})",
      "Body": "Checks for an ASCII alphanumeric character; it is equivalent to isalpha(c) or isdigit(c).",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.isalnum"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::isalpha}}({{c4::c}})",
      "Body": "Checks for an ASCII alphabetic character; it is equivalent to isupper(c) or islower(c).",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.isalpha"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::isascii}}({{c4::c}})",
      "Body": "Checks for a character value that fits in the 7-bit ASCII set.",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.isascii"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::isblank}}({{c4::c}})",
      "Body": "Checks for an ASCII whitespace character; space or horizontal tab.",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.isblank"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::iscntrl}}({{c4::c}})",
      "Body": "Checks for an ASCII control character (in the range 0x00 to 0x1f or 0x7f).",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.iscntrl"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::isdigit}}({{c4::c}})",
      "Body": "Checks for an ASCII decimal digit, '0' through '9'.  This is equivalent to c in string.digits.",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.isdigit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::isgraph}}({{c4::c}})",
      "Body": "Checks for ASCII any printable character except space.",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.isgraph"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::islower}}({{c4::c}})",
      "Body": "Checks for an ASCII lower-case character.",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.islower"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::isprint}}({{c4::c}})",
      "Body": "Checks for any ASCII printable character including space.",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.isprint"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::ispunct}}({{c4::c}})",
      "Body": "Checks for any printable ASCII character which is not a space or an alphanumeric character.",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.ispunct"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::isspace}}({{c4::c}})",
      "Body": "Checks for ASCII white-space characters; space, line feed, carriage return, form feed, horizontal tab, vertical tab.",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.isspace"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::isupper}}({{c4::c}})",
      "Body": "Checks for an ASCII uppercase letter.",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.isupper"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::isxdigit}}({{c4::c}})",
      "Body": "Checks for an ASCII hexadecimal digit.  This is equivalent to c in string.hexdigits.",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.isxdigit"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::isctrl}}({{c4::c}})",
      "Body": "Checks for an ASCII control character (ordinal values 0 to 31).",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.isctrl"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::ismeta}}({{c4::c}})",
      "Body": "Checks for a non-ASCII character (ordinal values 0x80 and above).",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.ismeta"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::ascii}}({{c4::c}})",
      "Body": "Return the ASCII value corresponding to the low 7 bits of c.",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.ascii"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::ctrl}}({{c4::c}})",
      "Body": "Return the control character corresponding to the given character (the character bit value is bitwise-anded with 0x1f).",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.ctrl"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::alt}}({{c4::c}})",
      "Body": "Return the 8-bit character corresponding to the given ASCII character (the character bit value is bitwise-ored with 0x80).",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.alt"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::unctrl}}({{c4::c}})",
      "Body": "Return a string representation of the ASCII character c.  If c is printable, this string is the character itself.  If the character is a control character (0x000x1f) the string consists of a caret ('^') followed by the corresponding uppercase letter. If the character is an ASCII delete (0x7f) the string is '^?'.  If the character has its meta bit (0x80) set, the meta bit is stripped, the preceding rules applied, and '!' prepended to the result.",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.unctrl"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::ascii}}.{{c3::controlnames}}",
      "Body": "A 33-element string array that contains the ASCII mnemonics for the thirty-two ASCII control characters from 0 (NUL) to 0x1f (US), in order, plus the mnemonic SP for the space character.",
      "Link": "https://docs.python.org/3/library/curses.ascii.html#curses.ascii.controlnames"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::panel}}.{{c3::bottom_panel}}()",
      "Body": "Returns the bottom panel in the panel stack.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.bottom_panel"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::panel}}.{{c3::new_panel}}({{c4::win}})",
      "Body": "Returns a panel object, associating it with the given window win. Be aware that you need to keep the returned panel object referenced explicitly.  If you don't, the panel object is garbage collected and removed from the panel stack.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.new_panel"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::panel}}.{{c3::top_panel}}()",
      "Body": "Returns the top panel in the panel stack.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.top_panel"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::curses}}.{{c2::panel}}.{{c3::update_panels}}()",
      "Body": "Updates the virtual screen after changes in the panel stack. This does not call curses.doupdate(), so you'll have to do this yourself.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.update_panels"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::Panel}}.{{c2::above}}()",
      "Body": "Returns the panel above the current panel.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.Panel.above"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::Panel}}.{{c2::below}}()",
      "Body": "Returns the panel below the current panel.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.Panel.below"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::Panel}}.{{c2::bottom}}()",
      "Body": "Push the panel to the bottom of the stack.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.Panel.bottom"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::Panel}}.{{c2::hidden}}()",
      "Body": "Returns True if the panel is hidden (not visible), False otherwise.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.Panel.hidden"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::Panel}}.{{c2::hide}}()",
      "Body": "Hide the panel. This does not delete the object, it just makes the window on screen invisible.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.Panel.hide"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::Panel}}.{{c2::move}}({{c3::y}}, {{c4::x}})",
      "Body": "Move the panel to the screen coordinates (y, x).",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.Panel.move"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::Panel}}.{{c2::replace}}({{c3::win}})",
      "Body": "Change the window associated with the panel to the window win.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.Panel.replace"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::Panel}}.{{c2::set_userptr}}({{c3::obj}})",
      "Body": "Set the panel's user pointer to obj. This is used to associate an arbitrary piece of data with the panel, and can be any object.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.Panel.set_userptr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::Panel}}.{{c2::show}}()",
      "Body": "Display the panel (which might have been hidden).",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.Panel.show"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::Panel}}.{{c2::top}}()",
      "Body": "Push panel to the top of the stack.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.Panel.top"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::Panel}}.{{c2::userptr}}()",
      "Body": "Returns the user pointer for the panel.  This might be any object.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.Panel.userptr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::Panel}}.{{c2::window}}()",
      "Body": "Returns the window object associated with the panel.",
      "Link": "https://docs.python.org/3/library/curses.panel.html#curses.panel.Panel.window"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::architecture}}({{c3::executable}}={{c4::sys}}.{{c5::executable}}, {{c6::bits}}='', {{c7::linkage}}='')",
      "Body": "Queries the given executable (defaults to the interpreter binary) for various architecture information.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.architecture"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::machine}}()",
      "Body": "Returns the machine type, e.g. 'i386'. An empty string is returned if the value cannot be determined.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.machine"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::node}}()",
      "Body": "Returns the computer's network name (may not be fully qualified!). An empty string is returned if the value cannot be determined.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.node"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::platform}}({{c3::aliased}}=0, {{c4::terse}}=0)",
      "Body": "Returns a single string identifying the underlying platform with as much useful information as possible.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.platform"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::processor}}()",
      "Body": "Returns the (real) processor name, e.g. 'amdk6'.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.processor"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::python_build}}()",
      "Body": "Returns a tuple (buildno, builddate) stating the build number and date as strings.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.python_build"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::python_compiler}}()",
      "Body": "Returns a string identifying the compiler used for compiling Python.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.python_compiler"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::python_branch}}()",
      "Body": "Returns a string identifying the implementation SCM branch.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.python_branch"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::python_implementation}}()",
      "Body": "Returns a string identifying the implementation. Possible return values are: 'CPython', 'IronPython', 'Jython', 'PyPy'.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.python_implementation"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::python_revision}}()",
      "Body": "Returns a string identifying the implementation SCM revision.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.python_revision"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::python_version}}()",
      "Body": "Returns the version as string 'major.minor.patchlevel'.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.python_version"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::python_version_tuple}}()",
      "Body": "Returns the version as tuple (major, minor, patchlevel) of strings.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.python_version_tuple"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::release}}()",
      "Body": "Returns the system's release, e.g. '2.2.0' or 'NT' An empty string is returned if the value cannot be determined.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.release"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::system}}()",
      "Body": "Returns the system/OS name, e.g. 'Linux', 'Windows', or 'Java'. An empty string is returned if the value cannot be determined.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.system"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::system_alias}}({{c3::system}}, {{c4::release}}, {{c5::version}})",
      "Body": "Returns (system, release, version) aliased to common marketing names used for some systems.  It also does some reordering of the information in some cases where it would otherwise cause confusion.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.system_alias"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::version}}()",
      "Body": "Returns the system's release version, e.g. '#3 on degas'. An empty string is returned if the value cannot be determined.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.version"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::uname}}()",
      "Body": "Fairly portable uname interface. Returns a namedtuple() containing six attributes: system, node, release, version, machine, and processor.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.uname"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::java_ver}}({{c3::release}}='', {{c4::vendor}}='', {{c5::vminfo}}=('', '', ''), {{c6::osinfo}}=('', '', ''))",
      "Body": "Version interface for Jython.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.java_ver"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::win}}32{{c3::_ver}}({{c4::release}}='', {{c5::version}}='', {{c6::csd}}='', {{c7::ptype}}='')",
      "Body": "Get additional version information from the Windows Registry and return a tuple (release, version, csd, ptype) referring to OS release, version number, CSD level (service pack) and OS type (multi/single processor).",
      "Link": "https://docs.python.org/3/library/platform.html#platform.win32_ver"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::popen}}({{c3::cmd}}, {{c4::mode}}='{{c5::r}}', {{c6::bufsize}}=-1)",
      "Body": "Portable popen() interface.  Find a working popen implementation preferring win32pipe.popen().  On Windows NT, win32pipe.popen() should work; on Windows 9x it hangs due to bugs in the MS C library.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.popen"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::mac_ver}}({{c3::release}}='', {{c4::versioninfo}}=('', '', ''), {{c5::machine}}='')",
      "Body": "Get Mac OS version information and return it as tuple (release, versioninfo, machine) with versioninfo being a tuple (version, dev_stage, non_release_version).",
      "Link": "https://docs.python.org/3/library/platform.html#platform.mac_ver"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::dist}}({{c3::distname}}='', {{c4::version}}='', {{c5::id}}='', {{c6::supported_dists}}=('{{c7::SuSE}}', '{{c8::debian}}', '{{c9::redhat}}', '{{c10::mandrake}}', ...))",
      "Body": "This is another name for linux_distribution().",
      "Link": "https://docs.python.org/3/library/platform.html#platform.dist"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::linux_distribution}}({{c3::distname}}='', {{c4::version}}='', {{c5::id}}='', {{c6::supported_dists}}=('{{c7::SuSE}}', '{{c8::debian}}', '{{c9::redhat}}', '{{c10::mandrake}}', ...), {{c11::full_distribution_name}}=1)",
      "Body": "Tries to determine the name of the Linux OS distribution name.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.linux_distribution"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::platform}}.{{c2::libc_ver}}({{c3::executable}}={{c4::sys}}.{{c5::executable}}, {{c6::lib}}='', {{c7::version}}='', {{c8::chunksize}}=16384)",
      "Body": "Tries to determine the libc version against which the file executable (defaults to the interpreter) is linked.  Returns a tuple of strings (lib, version) which default to the given parameters in case the lookup fails.",
      "Link": "https://docs.python.org/3/library/platform.html#platform.libc_ver"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::errorcode}}",
      "Body": "Dictionary providing a mapping from the errno value to the string name in the underlying system.  For instance, errno.errorcode[errno.EPERM] maps to 'EPERM'.",
      "Link": "https://docs.python.org/3/library/errno.html#errno.errorcode"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EPERM}}",
      "Body": "Operation not permitted",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EPERM"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOENT}}",
      "Body": "No such file or directory",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOENT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ESRCH}}",
      "Body": "No such process",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ESRCH"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EINTR}}",
      "Body": "Interrupted system call.",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EINTR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EIO}}",
      "Body": "I/O error",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EIO"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENXIO}}",
      "Body": "No such device or address",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENXIO"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::E}}2{{c3::BIG}}",
      "Body": "Arg list too long",
      "Link": "https://docs.python.org/3/library/errno.html#errno.E2BIG"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOEXEC}}",
      "Body": "Exec format error",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOEXEC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EBADF}}",
      "Body": "Bad file number",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EBADF"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ECHILD}}",
      "Body": "No child processes",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ECHILD"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EAGAIN}}",
      "Body": "Try again",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EAGAIN"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOMEM}}",
      "Body": "Out of memory",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOMEM"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EACCES}}",
      "Body": "Permission denied",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EACCES"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EFAULT}}",
      "Body": "Bad address",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EFAULT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOTBLK}}",
      "Body": "Block device required",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOTBLK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EBUSY}}",
      "Body": "Device or resource busy",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EBUSY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EEXIST}}",
      "Body": "File exists",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EEXIST"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EXDEV}}",
      "Body": "Cross-device link",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EXDEV"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENODEV}}",
      "Body": "No such device",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENODEV"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOTDIR}}",
      "Body": "Not a directory",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOTDIR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EISDIR}}",
      "Body": "Is a directory",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EISDIR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EINVAL}}",
      "Body": "Invalid argument",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EINVAL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENFILE}}",
      "Body": "File table overflow",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENFILE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EMFILE}}",
      "Body": "Too many open files",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EMFILE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOTTY}}",
      "Body": "Not a typewriter",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOTTY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ETXTBSY}}",
      "Body": "Text file busy",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ETXTBSY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EFBIG}}",
      "Body": "File too large",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EFBIG"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOSPC}}",
      "Body": "No space left on device",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOSPC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ESPIPE}}",
      "Body": "Illegal seek",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ESPIPE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EROFS}}",
      "Body": "Read-only file system",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EROFS"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EMLINK}}",
      "Body": "Too many links",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EMLINK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EPIPE}}",
      "Body": "Broken pipe",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EPIPE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EDOM}}",
      "Body": "Math argument out of domain of func",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EDOM"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ERANGE}}",
      "Body": "Math result not representable",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ERANGE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EDEADLK}}",
      "Body": "Resource deadlock would occur",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EDEADLK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENAMETOOLONG}}",
      "Body": "File name too long",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENAMETOOLONG"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOLCK}}",
      "Body": "No record locks available",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOLCK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOSYS}}",
      "Body": "Function not implemented",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOSYS"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOTEMPTY}}",
      "Body": "Directory not empty",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOTEMPTY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ELOOP}}",
      "Body": "Too many symbolic links encountered",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ELOOP"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EWOULDBLOCK}}",
      "Body": "Operation would block",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EWOULDBLOCK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOMSG}}",
      "Body": "No message of desired type",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOMSG"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EIDRM}}",
      "Body": "Identifier removed",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EIDRM"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ECHRNG}}",
      "Body": "Channel number out of range",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ECHRNG"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EL}}2{{c3::NSYNC}}",
      "Body": "Level 2 not synchronized",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EL2NSYNC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EL}}3{{c3::HLT}}",
      "Body": "Level 3 halted",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EL3HLT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EL}}3{{c3::RST}}",
      "Body": "Level 3 reset",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EL3RST"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ELNRNG}}",
      "Body": "Link number out of range",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ELNRNG"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EUNATCH}}",
      "Body": "Protocol driver not attached",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EUNATCH"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOCSI}}",
      "Body": "No CSI structure available",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOCSI"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EL}}2{{c3::HLT}}",
      "Body": "Level 2 halted",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EL2HLT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EBADE}}",
      "Body": "Invalid exchange",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EBADE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EBADR}}",
      "Body": "Invalid request descriptor",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EBADR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EXFULL}}",
      "Body": "Exchange full",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EXFULL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOANO}}",
      "Body": "No anode",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOANO"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EBADRQC}}",
      "Body": "Invalid request code",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EBADRQC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EBADSLT}}",
      "Body": "Invalid slot",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EBADSLT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EDEADLOCK}}",
      "Body": "File locking deadlock error",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EDEADLOCK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EBFONT}}",
      "Body": "Bad font file format",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EBFONT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOSTR}}",
      "Body": "Device not a stream",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOSTR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENODATA}}",
      "Body": "No data available",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENODATA"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ETIME}}",
      "Body": "Timer expired",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ETIME"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOSR}}",
      "Body": "Out of streams resources",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOSR"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENONET}}",
      "Body": "Machine is not on the network",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENONET"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOPKG}}",
      "Body": "Package not installed",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOPKG"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EREMOTE}}",
      "Body": "Object is remote",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EREMOTE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOLINK}}",
      "Body": "Link has been severed",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOLINK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EADV}}",
      "Body": "Advertise error",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EADV"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ESRMNT}}",
      "Body": "Srmount error",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ESRMNT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ECOMM}}",
      "Body": "Communication error on send",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ECOMM"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EPROTO}}",
      "Body": "Protocol error",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EPROTO"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EMULTIHOP}}",
      "Body": "Multihop attempted",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EMULTIHOP"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EDOTDOT}}",
      "Body": "RFS specific error",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EDOTDOT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EBADMSG}}",
      "Body": "Not a data message",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EBADMSG"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EOVERFLOW}}",
      "Body": "Value too large for defined data type",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EOVERFLOW"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOTUNIQ}}",
      "Body": "Name not unique on network",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOTUNIQ"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EBADFD}}",
      "Body": "File descriptor in bad state",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EBADFD"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EREMCHG}}",
      "Body": "Remote address changed",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EREMCHG"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ELIBACC}}",
      "Body": "Can not access a needed shared library",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ELIBACC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ELIBBAD}}",
      "Body": "Accessing a corrupted shared library",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ELIBBAD"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ELIBSCN}}",
      "Body": ".lib section in a.out corrupted",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ELIBSCN"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ELIBMAX}}",
      "Body": "Attempting to link in too many shared libraries",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ELIBMAX"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ELIBEXEC}}",
      "Body": "Cannot exec a shared library directly",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ELIBEXEC"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EILSEQ}}",
      "Body": "Illegal byte sequence",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EILSEQ"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ERESTART}}",
      "Body": "Interrupted system call should be restarted",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ERESTART"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ESTRPIPE}}",
      "Body": "Streams pipe error",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ESTRPIPE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EUSERS}}",
      "Body": "Too many users",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EUSERS"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOTSOCK}}",
      "Body": "Socket operation on non-socket",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOTSOCK"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EDESTADDRREQ}}",
      "Body": "Destination address required",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EDESTADDRREQ"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EMSGSIZE}}",
      "Body": "Message too long",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EMSGSIZE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EPROTOTYPE}}",
      "Body": "Protocol wrong type for socket",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EPROTOTYPE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOPROTOOPT}}",
      "Body": "Protocol not available",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOPROTOOPT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EPROTONOSUPPORT}}",
      "Body": "Protocol not supported",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EPROTONOSUPPORT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ESOCKTNOSUPPORT}}",
      "Body": "Socket type not supported",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ESOCKTNOSUPPORT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EOPNOTSUPP}}",
      "Body": "Operation not supported on transport endpoint",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EOPNOTSUPP"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EPFNOSUPPORT}}",
      "Body": "Protocol family not supported",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EPFNOSUPPORT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EAFNOSUPPORT}}",
      "Body": "Address family not supported by protocol",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EAFNOSUPPORT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EADDRINUSE}}",
      "Body": "Address already in use",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EADDRINUSE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EADDRNOTAVAIL}}",
      "Body": "Cannot assign requested address",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EADDRNOTAVAIL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENETDOWN}}",
      "Body": "Network is down",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENETDOWN"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENETUNREACH}}",
      "Body": "Network is unreachable",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENETUNREACH"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENETRESET}}",
      "Body": "Network dropped connection because of reset",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENETRESET"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ECONNABORTED}}",
      "Body": "Software caused connection abort",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ECONNABORTED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ECONNRESET}}",
      "Body": "Connection reset by peer",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ECONNRESET"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOBUFS}}",
      "Body": "No buffer space available",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOBUFS"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EISCONN}}",
      "Body": "Transport endpoint is already connected",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EISCONN"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOTCONN}}",
      "Body": "Transport endpoint is not connected",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOTCONN"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ESHUTDOWN}}",
      "Body": "Cannot send after transport endpoint shutdown",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ESHUTDOWN"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ETOOMANYREFS}}",
      "Body": "Too many references: cannot splice",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ETOOMANYREFS"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ETIMEDOUT}}",
      "Body": "Connection timed out",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ETIMEDOUT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ECONNREFUSED}}",
      "Body": "Connection refused",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ECONNREFUSED"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EHOSTDOWN}}",
      "Body": "Host is down",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EHOSTDOWN"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EHOSTUNREACH}}",
      "Body": "No route to host",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EHOSTUNREACH"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EALREADY}}",
      "Body": "Operation already in progress",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EALREADY"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EINPROGRESS}}",
      "Body": "Operation now in progress",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EINPROGRESS"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ESTALE}}",
      "Body": "Stale NFS file handle",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ESTALE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EUCLEAN}}",
      "Body": "Structure needs cleaning",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EUCLEAN"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENOTNAM}}",
      "Body": "Not a XENIX named type file",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENOTNAM"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::ENAVAIL}}",
      "Body": "No XENIX semaphores available",
      "Link": "https://docs.python.org/3/library/errno.html#errno.ENAVAIL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EISNAM}}",
      "Body": "Is a named type file",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EISNAM"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EREMOTEIO}}",
      "Body": "Remote I/O error",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EREMOTEIO"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::errno}}.{{c2::EDQUOT}}",
      "Body": "Quota exceeded",
      "Link": "https://docs.python.org/3/library/errno.html#errno.EDQUOT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::util}}.{{c3::find_library}}({{c4::name}})",
      "Body": "Try to find a library and return a pathname.  name is the library name without any prefix like lib, suffix like .so, .dylib or version number (this is the form used for the posix linker option -l).  If no library can be found, returns None.",
      "Link": "https://docs.python.org/3/library/ctypes.html#finding-shared-libraries"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::CDLL}}({{c4::name}}, {{c5::mode}}={{c6::DEFAULT_MODE}}, {{c7::handle}}={{c8::None}}, {{c9::use_errno}}={{c10::False}}, {{c11::use_last_error}}={{c12::False}})",
      "Body": "Instances of this class represent loaded shared libraries. Functions in these libraries use the standard C calling convention, and are assumed to return int.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.CDLL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::OleDLL}}({{c4::name}}, {{c5::mode}}={{c6::DEFAULT_MODE}}, {{c7::handle}}={{c8::None}}, {{c9::use_errno}}={{c10::False}}, {{c11::use_last_error}}={{c12::False}})",
      "Body": "Windows only: Instances of this class represent loaded shared libraries, functions in these libraries use the stdcall calling convention, and are assumed to return the windows specific HRESULT code.  HRESULT values contain information specifying whether the function call failed or succeeded, together with additional error code.  If the return value signals a failure, an OSError is automatically raised.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.OleDLL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::WinDLL}}({{c4::name}}, {{c5::mode}}={{c6::DEFAULT_MODE}}, {{c7::handle}}={{c8::None}}, {{c9::use_errno}}={{c10::False}}, {{c11::use_last_error}}={{c12::False}})",
      "Body": "Windows only: Instances of this class represent loaded shared libraries, functions in these libraries use the stdcall calling convention, and are assumed to return int by default.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.WinDLL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::PyDLL}}({{c4::name}}, {{c5::mode}}={{c6::DEFAULT_MODE}}, {{c7::handle}}={{c8::None}})",
      "Body": "Instances of this class behave like CDLL instances, except that the GIL is not released during the function call, and after the function execution the error flag is checked. If the error flag is set, a exception is raised.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.PyDLL"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::RTLD_GLOBAL}}",
      "Body": "Flag to use as mode parameter.  On platforms where this flag is not available, it is defined as the integer zero.",
      "Link": "https://docs.python.org/3/library/ctypes.html#loading-shared-libraries"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::RTLD_LOCAL}}",
      "Body": "Flag to use as mode parameter.  On platforms where this is not available, it is the same as RTLD_GLOBAL.",
      "Link": "https://docs.python.org/3/library/ctypes.html#loading-shared-libraries"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::DEFAULT_MODE}}",
      "Body": "The default mode which is used to load shared libraries.  On OSX 10.3, this is RTLD_GLOBAL, otherwise it is the same as RTLD_LOCAL.",
      "Link": "https://docs.python.org/3/library/ctypes.html#loading-shared-libraries"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::PyDLL}}.{{c2::_handle}}",
      "Body": "The system handle used to access the library.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.PyDLL._handle"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::PyDLL}}.{{c2::_name}}",
      "Body": "The name of the library passed in the constructor.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.PyDLL._name"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::LibraryLoader}}({{c4::dlltype}})",
      "Body": "Class which loads shared libraries.  dlltype should be one of the CDLL, PyDLL, WinDLL, or OleDLL types.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.LibraryLoader"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::LibraryLoader}}.{{c3::LoadLibrary}}({{c4::name}})",
      "Body": "Load a shared library into the process and return it.  This method always returns a new instance of the library.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.LibraryLoader.LoadLibrary"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::cdll}}",
      "Body": "Creates CDLL instances.",
      "Link": "https://docs.python.org/3/library/ctypes.html#loading-shared-libraries"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::windll}}",
      "Body": "Windows only: Creates WinDLL instances.",
      "Link": "https://docs.python.org/3/library/ctypes.html#loading-shared-libraries"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::oledll}}",
      "Body": "Windows only: Creates OleDLL instances.",
      "Link": "https://docs.python.org/3/library/ctypes.html#loading-shared-libraries"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::pydll}}",
      "Body": "Creates PyDLL instances.",
      "Link": "https://docs.python.org/3/library/ctypes.html#loading-shared-libraries"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "data",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::pythonapi}}",
      "Body": "An instance of PyDLL that exposes C API functions as attributes.  Note that all these functions are assumed to return C int, which is of course not always the truth, so you have to assign the correct restype attribute to use these functions.",
      "Link": "https://docs.python.org/3/library/ctypes.html#loading-shared-libraries"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::_FuncPtr}}",
      "Body": "Base class for C callable foreign functions.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._FuncPtr"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_FuncPtr}}.{{c3::restype}}",
      "Body": "Assign a ctypes type to specify the result type of the foreign function. Use None for void, a function not returning anything.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._FuncPtr.restype"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_FuncPtr}}.{{c3::argtypes}}",
      "Body": "Assign a tuple of ctypes types to specify the argument types that the function accepts.  Functions using the stdcall calling convention can only be called with the same number of arguments as the length of this tuple; functions using the C calling convention accept additional, unspecified arguments as well.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._FuncPtr.argtypes"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_FuncPtr}}.{{c3::errcheck}}",
      "Body": "Assign a function or another callable to this attribute. The callable will be called with three or more arguments:",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._FuncPtr.errcheck"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::callable}}({{c2::result}}, {{c3::func}}, {{c4::arguments}})",
      "Body": "result is what the foreign function returns, as specified by the restype attribute.",
      "Link": "https://docs.python.org/3/library/ctypes.html#foreign-functions"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "exception",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::exception}} {{c2::ctypes}}.{{c3::ArgumentError}}",
      "Body": "This exception is raised when a foreign function call cannot convert one of the passed arguments.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.ArgumentError"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::CFUNCTYPE}}({{c3::restype}}, *argtypes, {{c4::use_errno}}={{c5::False}}, {{c6::use_last_error}}={{c7::False}})",
      "Body": "The returned function prototype creates functions that use the standard C calling convention.  The function will release the GIL during the call.  If use_errno is set to true, the ctypes private copy of the system errno variable is exchanged with the real errno value before and after the call; use_last_error does the same for the Windows error code.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.CFUNCTYPE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::WINFUNCTYPE}}({{c3::restype}}, *argtypes, {{c4::use_errno}}={{c5::False}}, {{c6::use_last_error}}={{c7::False}})",
      "Body": "Windows only: The returned function prototype creates functions that use the stdcall calling convention, except on Windows CE where WINFUNCTYPE() is the same as CFUNCTYPE().  The function will release the GIL during the call.  use_errno and use_last_error have the same meaning as above.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.WINFUNCTYPE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::PYFUNCTYPE}}({{c3::restype}}, *argtypes)",
      "Body": "The returned function prototype creates functions that use the calling convention.  The function will not release the GIL during the call.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.PYFUNCTYPE"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::prototype}}({{c2::address}})",
      "Body": "Returns a foreign function at the specified address which must be an integer.",
      "Link": "https://docs.python.org/3/library/ctypes.html#function-prototypes"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::prototype}}({{c2::callable}})",
      "Body": "Create a C callable function (a callback function) from a callable.",
      "Link": "https://docs.python.org/3/library/ctypes.html#function-prototypes"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::prototype}}({{c2::func_spec}}[, {{c3::paramflags}}])",
      "Body": "Returns a foreign function exported by a shared library. func_spec must be a 2-tuple (name_or_ordinal, library). The first item is the name of the exported function as string, or the ordinal of the exported function as small integer.  The second item is the shared library instance.",
      "Link": "https://docs.python.org/3/library/ctypes.html#function-prototypes"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::prototype}}({{c2::vtbl_index}}, {{c3::name}}[, {{c4::paramflags}}[, {{c5::iid}}]])",
      "Body": "Returns a foreign function that will call a COM method. vtbl_index is the index into the virtual function table, a small non-negative integer. name is name of the COM method. iid is an optional pointer to the interface identifier which is used in extended error reporting.",
      "Link": "https://docs.python.org/3/library/ctypes.html#function-prototypes"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::addressof}}({{c3::obj}})",
      "Body": "Returns the address of the memory buffer as integer.  obj must be an instance of a ctypes type.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.addressof"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::alignment}}({{c3::obj_or_type}})",
      "Body": "Returns the alignment requirements of a ctypes type. obj_or_type must be a ctypes type or instance.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.alignment"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::byref}}({{c3::obj}}[, {{c4::offset}}])",
      "Body": "Returns a light-weight pointer to obj, which must be an instance of a ctypes type.  offset defaults to zero, and must be an integer that will be added to the internal pointer value.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.byref"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::cast}}({{c3::obj}}, {{c4::type}})",
      "Body": "This function is similar to the cast operator in C. It returns a new instance of type which points to the same memory block as obj.  type must be a pointer type, and obj must be an object that can be interpreted as a pointer.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.cast"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::create_string_buffer}}({{c3::init_or_size}}, {{c4::size}}={{c5::None}})",
      "Body": "This function creates a mutable character buffer. The returned object is a ctypes array of c_char.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.create_string_buffer"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::create_unicode_buffer}}({{c3::init_or_size}}, {{c4::size}}={{c5::None}})",
      "Body": "This function creates a mutable unicode character buffer. The returned object is a ctypes array of c_wchar.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.create_unicode_buffer"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::DllCanUnloadNow}}()",
      "Body": "Windows only: This function is a hook which allows implementing in-process COM servers with ctypes.  It is called from the DllCanUnloadNow function that the _ctypes extension dll exports.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.DllCanUnloadNow"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::DllGetClassObject}}()",
      "Body": "Windows only: This function is a hook which allows implementing in-process COM servers with ctypes.  It is called from the DllGetClassObject function that the _ctypes extension dll exports.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.DllGetClassObject"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::util}}.{{c3::find_library}}({{c4::name}})",
      "Body": "Try to find a library and return a pathname.  name is the library name without any prefix like lib, suffix like .so, .dylib or version number (this is the form used for the posix linker option -l).  If no library can be found, returns None.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.util.find_library"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::util}}.{{c3::find_msvcrt}}()",
      "Body": "Windows only: return the filename of the VC runtime library used by Python, and by the extension modules.  If the name of the library cannot be determined, None is returned.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.util.find_msvcrt"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::FormatError}}([{{c3::code}}])",
      "Body": "Windows only: Returns a textual description of the error code code.  If no error code is specified, the last error code is used by calling the Windows api function GetLastError.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.FormatError"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::GetLastError}}()",
      "Body": "Windows only: Returns the last error code set by Windows in the calling thread. This function calls the Windows GetLastError() function directly, it does not return the ctypes-private copy of the error code.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.GetLastError"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::get_errno}}()",
      "Body": "Returns the current value of the ctypes-private copy of the system errno variable in the calling thread.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.get_errno"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::get_last_error}}()",
      "Body": "Windows only: returns the current value of the ctypes-private copy of the system LastError variable in the calling thread.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.get_last_error"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::memmove}}({{c3::dst}}, {{c4::src}}, {{c5::count}})",
      "Body": "Same as the standard C memmove library function: copies count bytes from src to dst. dst and src must be integers or ctypes instances that can be converted to pointers.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.memmove"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::memset}}({{c3::dst}}, {{c4::c}}, {{c5::count}})",
      "Body": "Same as the standard C memset library function: fills the memory block at address dst with count bytes of value c. dst must be an integer specifying an address, or a ctypes instance.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.memset"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::POINTER}}({{c3::type}})",
      "Body": "This factory function creates and returns a new ctypes pointer type. Pointer types are cached and reused internally, so calling this function repeatedly is cheap. type must be a ctypes type.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.POINTER"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::pointer}}({{c3::obj}})",
      "Body": "This function creates a new pointer instance, pointing to obj. The returned object is of the type POINTER(type(obj)).",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.pointer"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::resize}}({{c3::obj}}, {{c4::size}})",
      "Body": "This function resizes the internal memory buffer of obj, which must be an instance of a ctypes type.  It is not possible to make the buffer smaller than the native size of the objects type, as given by sizeof(type(obj)), but it is possible to enlarge the buffer.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.resize"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::set_errno}}({{c3::value}})",
      "Body": "Set the current value of the ctypes-private copy of the system errno variable in the calling thread to value and return the previous value.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.set_errno"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::set_last_error}}({{c3::value}})",
      "Body": "Windows only: set the current value of the ctypes-private copy of the system LastError variable in the calling thread to value and return the previous value.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.set_last_error"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::sizeof}}({{c3::obj_or_type}})",
      "Body": "Returns the size in bytes of a ctypes type or instance memory buffer. Does the same as the C sizeof operator.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.sizeof"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::string_at}}({{c3::address}}, {{c4::size}}=-1)",
      "Body": "This function returns the C string starting at memory address address as a bytes object. If size is specified, it is used as size, otherwise the string is assumed to be zero-terminated.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.string_at"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::WinError}}({{c3::code}}={{c4::None}}, {{c5::descr}}={{c6::None}})",
      "Body": "Windows only: this function is probably the worst-named thing in ctypes. It creates an instance of OSError.  If code is not specified, GetLastError is called to determine the error code. If descr is not specified, FormatError() is called to get a textual description of the error.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.WinError"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "function",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::wstring_at}}({{c3::address}}, {{c4::size}}=-1)",
      "Body": "This function returns the wide character string starting at memory address address as a string.  If size is specified, it is used as the number of characters of the string, otherwise the string is assumed to be zero-terminated.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.wstring_at"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::_CData}}",
      "Body": "This non-public class is the common base class of all ctypes data types. Among other things, all ctypes type instances contain a memory block that hold C compatible data; the address of the memory block is returned by the addressof() helper function. Another instance variable is exposed as _objects; this contains other objects that need to be kept alive in case the memory block contains pointers.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._CData"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_CData}}.{{c3::from_buffer}}({{c4::source}}[, {{c5::offset}}])",
      "Body": "This method returns a ctypes instance that shares the buffer of the source object.  The source object must support the writeable buffer interface.  The optional offset parameter specifies an offset into the source buffer in bytes; the default is zero.  If the source buffer is not large enough a ValueError is raised.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._CData.from_buffer"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_CData}}.{{c3::from_buffer_copy}}({{c4::source}}[, {{c5::offset}}])",
      "Body": "This method creates a ctypes instance, copying the buffer from the source object buffer which must be readable.  The optional offset parameter specifies an offset into the source buffer in bytes; the default is zero.  If the source buffer is not large enough a ValueError is raised.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._CData.from_buffer_copy"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_CData}}.{{c3::from_address}}({{c4::address}})",
      "Body": "This method returns a ctypes type instance using the memory specified by address which must be an integer.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._CData.from_address"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_CData}}.{{c3::from_param}}({{c4::obj}})",
      "Body": "This method adapts obj to a ctypes type.  It is called with the actual object used in a foreign function call when the type is present in the foreign function's argtypes tuple; it must return an object that can be used as a function call parameter.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._CData.from_param"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "method",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_CData}}.{{c3::in_dll}}({{c4::library}}, {{c5::name}})",
      "Body": "This method returns a ctypes type instance exported by a shared library. name is the name of the symbol that exports the data, library is the loaded shared library.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._CData.in_dll"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_CData}}.{{c3::_b_base_}}",
      "Body": "Sometimes ctypes data instances do not own the memory block they contain, instead they share part of the memory block of a base object.  The _b_base_ read-only member is the root ctypes object that owns the memory block.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._CData._b_base_"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_CData}}.{{c3::_b_needsfree_}}",
      "Body": "This read-only variable is true when the ctypes data instance has allocated the memory block itself, false otherwise.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._CData._b_needsfree_"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_CData}}.{{c3::_objects}}",
      "Body": "This member is either None or a dictionary containing objects that need to be kept alive so that the memory block contents is kept valid.  This object is only exposed for debugging; never modify the contents of this dictionary.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._CData._objects"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::_SimpleCData}}",
      "Body": "This non-public class is the base class of all fundamental ctypes data types. It is mentioned here because it contains the common attributes of the fundamental ctypes data types.  _SimpleCData is a subclass of _CData, so it inherits their methods and attributes. ctypes data types that are not and do not contain pointers can now be pickled.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._SimpleCData"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_SimpleCData}}.{{c3::value}}",
      "Body": "This attribute contains the actual value of the instance. For integer and pointer types, it is an integer, for character types, it is a single character bytes object or string, for character pointer types it is a bytes object or string.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._SimpleCData.value"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_byte}}",
      "Body": "Represents the C signed char datatype, and interprets the value as small integer.  The constructor accepts an optional integer initializer; no overflow checking is done.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_byte"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_char}}",
      "Body": "Represents the C char datatype, and interprets the value as a single character.  The constructor accepts an optional string initializer, the length of the string must be exactly one character.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_char"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_char_p}}",
      "Body": "Represents the C char * datatype when it points to a zero-terminated string.  For a general character pointer that may also point to binary data, POINTER(c_char) must be used.  The constructor accepts an integer address, or a bytes object.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_char_p"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_double}}",
      "Body": "Represents the C double datatype.  The constructor accepts an optional float initializer.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_double"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_longdouble}}",
      "Body": "Represents the C long double datatype.  The constructor accepts an optional float initializer.  On platforms where sizeof(long double) == sizeof(double) it is an alias to c_double.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_longdouble"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_float}}",
      "Body": "Represents the C float datatype.  The constructor accepts an optional float initializer.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_float"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_int}}",
      "Body": "Represents the C signed int datatype.  The constructor accepts an optional integer initializer; no overflow checking is done.  On platforms where sizeof(int) == sizeof(long) it is an alias to c_long.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_int"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_int}}8",
      "Body": "Represents the C 8-bit signed int datatype.  Usually an alias for c_byte.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_int8"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_int}}16",
      "Body": "Represents the C 16-bit signed int datatype.  Usually an alias for c_short.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_int16"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_int}}32",
      "Body": "Represents the C 32-bit signed int datatype.  Usually an alias for c_int.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_int32"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_int}}64",
      "Body": "Represents the C 64-bit signed int datatype.  Usually an alias for c_longlong.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_int64"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_long}}",
      "Body": "Represents the C signed long datatype.  The constructor accepts an optional integer initializer; no overflow checking is done.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_long"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_longlong}}",
      "Body": "Represents the C signed long long datatype.  The constructor accepts an optional integer initializer; no overflow checking is done.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_longlong"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_short}}",
      "Body": "Represents the C signed short datatype.  The constructor accepts an optional integer initializer; no overflow checking is done.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_short"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_size_t}}",
      "Body": "Represents the C size_t datatype.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_size_t"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_ssize_t}}",
      "Body": "Represents the C ssize_t datatype.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_ssize_t"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_ubyte}}",
      "Body": "Represents the C unsigned char datatype, it interprets the value as small integer.  The constructor accepts an optional integer initializer; no overflow checking is done.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_ubyte"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_uint}}",
      "Body": "Represents the C unsigned int datatype.  The constructor accepts an optional integer initializer; no overflow checking is done.  On platforms where sizeof(int) == sizeof(long) it is an alias for c_ulong.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_uint"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_uint}}8",
      "Body": "Represents the C 8-bit unsigned int datatype.  Usually an alias for c_ubyte.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_uint8"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_uint}}16",
      "Body": "Represents the C 16-bit unsigned int datatype.  Usually an alias for c_ushort.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_uint16"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_uint}}32",
      "Body": "Represents the C 32-bit unsigned int datatype.  Usually an alias for c_uint.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_uint32"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_uint}}64",
      "Body": "Represents the C 64-bit unsigned int datatype.  Usually an alias for c_ulonglong.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_uint64"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_ulong}}",
      "Body": "Represents the C unsigned long datatype.  The constructor accepts an optional integer initializer; no overflow checking is done.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_ulong"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_ulonglong}}",
      "Body": "Represents the C unsigned long long datatype.  The constructor accepts an optional integer initializer; no overflow checking is done.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_ulonglong"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_ushort}}",
      "Body": "Represents the C unsigned short datatype.  The constructor accepts an optional integer initializer; no overflow checking is done.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_ushort"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_void_p}}",
      "Body": "Represents the C void * type.  The value is represented as integer. The constructor accepts an optional integer initializer.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_void_p"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_wchar}}",
      "Body": "Represents the C wchar_t datatype, and interprets the value as a single character unicode string.  The constructor accepts an optional string initializer, the length of the string must be exactly one character.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_wchar"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_wchar_p}}",
      "Body": "Represents the C wchar_t * datatype, which must be a pointer to a zero-terminated wide character string.  The constructor accepts an integer address, or a string.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_wchar_p"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::c_bool}}",
      "Body": "Represent the C bool datatype (more accurately, _Bool from C99).  Its value can be True or False, and the constructor accepts any object that has a truth value.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.c_bool"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::HRESULT}}",
      "Body": "Windows only: Represents a HRESULT value, which contains success or error information for a function or method call.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.HRESULT"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::py_object}}",
      "Body": "Represents the C PyObject * datatype.  Calling this without an argument creates a NULL PyObject * pointer.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.py_object"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::Union}}(*args, **kw)",
      "Body": "Abstract base class for unions in native byte order.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.Union"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::BigEndianStructure}}(*args, **kw)",
      "Body": "Abstract base class for structures in big endian byte order.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.BigEndianStructure"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::LittleEndianStructure}}(*args, **kw)",
      "Body": "Abstract base class for structures in little endian byte order.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.LittleEndianStructure"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::Structure}}(*args, **kw)",
      "Body": "Abstract base class for structures in native byte order.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.Structure"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::Structure}}.{{c3::_fields_}}",
      "Body": "A sequence defining the structure fields.  The items must be 2-tuples or 3-tuples.  The first item is the name of the field, the second item specifies the type of the field; it can be any ctypes data type.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.Structure._fields_"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::Structure}}.{{c3::_pack_}}",
      "Body": "An optional small integer that allows overriding the alignment of structure fields in the instance.  _pack_ must already be defined when _fields_ is assigned, otherwise it will have no effect.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.Structure._pack_"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::Structure}}.{{c3::_anonymous_}}",
      "Body": "An optional sequence that lists the names of unnamed (anonymous) fields. _anonymous_ must be already defined when _fields_ is assigned, otherwise it will have no effect.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.Structure._anonymous_"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::Array}}(*args)",
      "Body": "Abstract base class for arrays.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.Array"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::Array}}.{{c3::_length_}}",
      "Body": "A positive integer specifying the number of elements in the array. Out-of-range subscripts result in an IndexError. Will be returned by len().",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.Array._length_"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::Array}}.{{c3::_type_}}",
      "Body": "Specifies the type of each element in the array.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes.Array._type_"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "class",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::class}} {{c2::ctypes}}.{{c3::_Pointer}}",
      "Body": "Private, abstract base class for pointers.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._Pointer"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_Pointer}}.{{c3::_type_}}",
      "Body": "Specifies the type pointed to.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._Pointer._type_"
    },
    "modelName": "ClozePy"
  },
  {
    "tags": [
      "attribute",
      "Generic Operating System Services",
      "Python",
      "py",
      "native"
    ],
    "fields": {
      "Signature": "{{c1::ctypes}}.{{c2::_Pointer}}.{{c3::contents}}",
      "Body": "Returns the object to which to pointer points.  Assigning to this attribute changes the pointer to point to the assigned object.",
      "Link": "https://docs.python.org/3/library/ctypes.html#ctypes._Pointer.contents"
    },
    "modelName": "ClozePy"
  }
]
